<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[SecDr]]></title>
  <link href="http://secdr.github.io/atom.xml" rel="self"/>
  <link href="http://secdr.github.io/"/>
  <updated>2015-05-21T16:47:43-07:00</updated>
  <id>http://secdr.github.io/</id>
  <author>
    <name><![CDATA[SecDr]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[论文返修那些事儿]]></title>
    <link href="http://secdr.github.io/2015/05/21/paper-response-thing/"/>
    <updated>2015-05-21T16:43:32-07:00</updated>
    <id>http://secdr.github.io/2015/05/21/paper-response-thing</id>
    <content type="html"><![CDATA[<p>审稿人也是人，不要无故地增加他们的痛苦，今天来讲一讲写response letter有哪些注意事项。</p>

<h3>Do&rsquo;s</h3>

<ol>
<li>与从事相关领域的朋友、导师或师兄师姐讨论，听取他们的意见（在医院的小伙伴就不用试这一条了，多半不是没人理就是白讨论，个人意见，勿拍);</li>
<li>完整地地回复审稿人的意见，不要遗漏任何问题；</li>
<li>如果你不同意审稿人的意见，请保持礼貌；</li>
<li>如果需要，可以引用参考文献或未发表的数据来支持自己的观点；</li>
<li>不要拖沓，收到返修后要尽快写回复，并且把改过的地方标识出来。</li>
</ol>


<h3>Don’ts</h3>

<ol>
<li>不要跟审稿人争论每一个问题，在一些无关紧要的小细节上，在并不影响文章价值的前提下，让一让审稿人；</li>
<li>不要把审稿人的批评当做是个人攻击；</li>
<li>如果审稿人要看原始数据，不要拒绝；</li>
<li>不要使用“we completely disagree”、“the referee obviously does not know this field”这样的话，会伤了审稿人的心。</li>
</ol>


<!--more-->


<p>可以使用委婉在回复，如下：</p>

<pre><code>We agree with the referee that……,but
The referee is right to point out….,yet
In accordance with the referees’wishes,we have now changed this sentence to…
Whilst we agree with the referee that……..
It is true that…,but
We acknowledge that our paper might have been…., but
We too were disappointed by the low response rate…
We agree that this is an important area that requires furthr research…..
We support the referee's assertion that….,although
With all due respect to the reviewer,we felt that this point is  not correct…
</code></pre>

<h3>文章几种状态的应对方法：</h3>

<p>Accept with minor revision</p>

<p>如果你很幸运，只要小修，这种情况下，不要argue太多，速度改了回复给杂志社，在主编还对你的文章有所印象时，速度返修往往也是速度接收。</p>

<p>Major revisions needed</p>

<p>这种情况下，有三条黄金原则：礼貌、完整、证据。不要低估大修的工作量，可以需要好几天铺在此事上。如果是大修，看上去没有什么接收的希望，也不要放弃，有些作者就这样放弃然后一字不改地投到别的杂志去，同领域的专家就那么几个，搞不好你的文章又送给同一个审稿人，华丽丽地忽视了他的意见，他会很不高兴的。即使改投杂志，也要根据上一本杂志的返修意见好好修改完文章后再投。</p>

<p>Journal requests a complete rewrite</p>

<p>这种情况下，你要好好思量下重新写文章是否值得。如果审稿人和主编告诉了你要如何改这篇文章，表示杂志社还是想要你的文章的，如果你照办了，拒绝你是要下多大狠心。但是如果审稿人只是冷冰冰的让你重写文章，没有给具体的建设性的意见，最好改投杂志，也许投入和产出不成正比。</p>

<p>Unsure if reject or possible resubmission?</p>

<p>比如这样的审稿意见“ we cannot accept your paper in its current form, but if you do decide to resubmit, then we would only consider a substantial revision”好像是个拒绝的言辞，但是又不确定，又好像是再给一次机会。这种情况下最好写邮件给杂志社，问问他们到底是如何想的，然后再决定，自个人揣测杂志社的意思不如写封邮件。</p>

<p>The outright rejection</p>

<p>如果你确实很想在这本杂志发文章，那么可以写信给杂志社，要求换责任主编再审，前提是你有足够的自信，当然希望是很渺茫的，好吧，希望是非常渺茫的。另一种告诉就是别再哭鼻子了，赶紧再投别的杂志吧，投之前请按照拒稿意见好好地修改你的文章，避免因为同样的问题被拒稿。</p>

<p>如果审稿人错了如何办？</p>

<p>审稿人不是上帝，也会犯错误。有时他们只是不仔细，你懂的，有可能是学生审的，不要写成“if the referee had bothered to read our paper” 之类的，可以写“we agree that this is an important point and we have already addressed it on page A, paragraph B, line C”.有时就是审稿人犯二了，附和他们是一件很傻的事情，这时候，把证据列出来就好了，杂志社主编会还你一个公道。</p>

<p>如果审稿人对你有歧视如何办？</p>

<p>这时候给杂志社写邮件，抱怨下这个问题，并要求重新送审。</p>

<p>The dreaded “reduce the paper by 30%” request（以及类似这种情况）</p>

<p>这个过程还是很痛苦的，因为你会觉得丢弃任何一部分都很心痛，这时候可以找个朋友来帮忙（针对有选择障碍的小伙伴），看下哪一部分的内容要去掉，另外，温馨提示，前言和讨论是比较好删字的地方。</p>

<p>原文出处<a href="http://mp.weixin.qq.com/s?__biz=MzA3ODU1NjUyNw==&amp;mid=208389651&amp;idx=1&amp;sn=393a45ea966160a74f04d6f75bf147c3&amp;scene=5#rd">论文返修那些事儿，你都明白么</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[论文返修模板]]></title>
    <link href="http://secdr.github.io/2015/05/21/response-letter-template/"/>
    <updated>2015-05-21T16:24:15-07:00</updated>
    <id>http://secdr.github.io/2015/05/21/response-letter-template</id>
    <content type="html"><![CDATA[<p>提供论文返修的几类模板：</p>

<h3>例 1：</h3>

<p>Dear Prof. XXXX,</p>

<p>Thank you very much for your letter and the comments from the referees about our
paper submitted to XXXX (MS Number XXXX).</p>

<p>We have checked the manuscript and revised it according to the comments. We submit
here the revised manuscript as well as a list of changes.</p>

<p>If you have any question about this paper, please don’t hesitate to let me know.
Sincerely yours,</p>

<!--more-->


<h3>例 2：</h3>

<p>Dear Editor and Reviewers:</p>

<p>Thank you for your letter and for the reviewers’ comments concerning our manuscript
entitled “Paper Title” (ID: 文章稿号). Those comments are all valuable and very
helpful for revising and improving our paper, as well as the important guiding
significance to our researches. We have studied comments carefully and have made
correction which we hope meet with approval. Revised portion are marked in red in
the paper. The main corrections in the paper and the responds to the reviewer’s
comments are as flowing:</p>

<p>Responds to the reviewer’s comments:</p>

<p>Reviewer #1:</p>

<ol>
<li><p>Response to comment: (……简要列出意见……)</p>

<p>Response: ××××××</p></li>
<li><p>Response to comment: (……简要列出意见……)</p>

<p>Response: ××××××
……</p></li>
</ol>


<p>逐条意见回答，切忌一定不能有遗漏</p>

<p>针对不同的问题有下列几个礼貌术语可适当用用：</p>

<pre><code>We are very sorry for our negligence of ……...
We are very sorry for our incorrect writing ……...
It is really true as Reviewer suggested that……
We have made correction according to the Reviewer’s comments.
We have re-written this part according to the Reviewer’s suggestion
As Reviewer suggested that……
Considering the Reviewer’s suggestion, we have ……
</code></pre>

<p>最后特意感谢一下这个审稿人的意见：</p>

<p>Special thanks to you for your good comments.</p>

<p>Reviewer #2:</p>

<pre><code>同上述
</code></pre>

<p>Reviewer #3:</p>

<pre><code> ××××××
</code></pre>

<p>Other changes:</p>

<pre><code>1. Line 60-61, the statements of “……” were corrected as “…………”
2. Line 107, “……” was added
3. Line 129, “……” was deleted
××××××
</code></pre>

<p>We tried our best to improve the manuscript and made some changes in the
manuscript. These changes will not influence the content and framework of the
paper. And here we did not list the changes but marked in red in revised paper.
We appreciate for Editors/Reviewers’ warm work earnestly, and hope that the
correction will meet with approval.</p>

<p>Once again, thank you very much for your comments and suggestions.</p>

<h3>例 3：</h3>

<p>Dear Professor XXX,</p>

<p>Many thanks for your email of 24 Jun 2013, regarding the revision and advice of the
above paper in XXX 杂志. Overall the comments have been fair, encouraging and
constructive. We have learned much from it.</p>

<p>After carefully studying the reviewer’ comments and your advice, we have made
corresponding changes to the paper. Our response of the comments is enclosed.</p>

<pre><code>(1)
(2)
(3)
(4)
(5)
(6)
</code></pre>

<p>Besides the above changes, we have corrected some expression errors.</p>

<p>Thank you very much for the excellent and professional revision of our manuscript.
If you need any other information, please contact me immediately by email. My email
account is <strong><em>, and Tel.is </em></strong>, and Fax is +***.</p>

<p>Yours sincerely,</p>

<h3>例 4：</h3>

<p>Dear Professor XXX,</p>

<p>We very much appreciate the careful reading of our manuscript and valuable
suggestions of the reviewer. We have carefully considered the comments and have
revised the manuscript accordingly.</p>

<p>The manuscript is revised submission (×××－××××) with new line and
page numbers in the text, some grammar and spelling errors had also been corrected.
Furthermore, the relevant regulations had been made in the original manuscript
according to the comments of reviewers, and the major revised portions were marked
in red bold. We also responded point by point to each reviewer comments as listed
below, along with a clear indication of the location of the revision.</p>

<p>Hope these will make it more acceptable for publication.</p>

<p>List of Major Changes:</p>

<pre><code>1).........
2).........
3).........
</code></pre>

<p>Response to Reviewers:</p>

<pre><code>1).........
2).........
3).........
</code></pre>

<h3>例 5：</h3>

<p>Thank you very much for your letter and advice on our manuscript. We have
resubmited new version of graphsin accordance with recommendations of the
technical editor. We have addressed the comments raised by the reviewers, and the
amendments are highlighted in red in the revised manuscript. We hope that the
revision is acceptable and look forward to hearing from you soon.</p>

<p>Below, please find the comments in black, followed by our responses in red.
Exact changes in the manuscript are also presented in red font.</p>

<h3>例 6：</h3>

<p>Dear editors,</p>

<p>Thank you for your kind comments on our manuscript entitled “XX 文章名”. We have
carefully revised the manuscript according to the reviewer’s comments. Based on the
suggestions, we have made an extensive modification on the revised manuscript.
Detailed revision was shown as follows. The changes to our manuscript within the
document were aslo highlighted by using red colored text.</p>

<ol>
<li><p>As to the related articles published in Asian Pacific Journal of Cancer Prevention,
we have always been reading the latest papers that were published in APJCP. In fact, several high-quality papers arouse us great interest before we drafted our manuscript. From our intensive reading of these papers published in APJCP, we get better understanding of the hotspots in breast cancer research. We also get a
wider view of the regulatory networks that contribute to XXXX. For example, one
paper entitled “XXXX” showed that metastasis-related molecules could be
regulated by microRNAs in human tumor metastasis process. This paper led us to
hypothesize that XXX, a metastasis-associated protein, might also be linked to
microRNA regulations in breast cancer. Hence, this paper provided a novel clue
for us to uncover the mechanisms underlying XXXX cancer metastasis. Based on
all these instructive papers, we have herein added these references to our article in
the revised version (please see P6, Line 15; P12, Line17; P14, Line 21-22; P15,
Line 1-4).</p></li>
<li><p>For the reference format within the article, we are sorry for our incorrect citation
format. And in this revised version, we have checked carefully of all the citations.
All citations within the article were formatted into “Family Name et al., Year” for
over two-author papers, or “Family Name, Year” for only one-author papers.</p></li>
<li><p>For the reference format after the text, we also feel sorry for our carelessness.
Previously, we didn’t notice the special format of APJCP. In the revised version,
we have corrected all the reference formats to meet the requirements of APJCP.
All the detailed corrections could be seen in the Reference section in which
changes were marked by red.</p></li>
</ol>


<p>Thank you again for your positive comments on our manuscript. APJCP is an
influential journal which aims to improve our understanding of cancer prevention.
From all the papers published in your journal, readers have been learning a lot.
Hopefully, we could have our article been considered of publication in your
journal. Should there been any other corrections we could make, please feel free
to contact us.</p>

<p>Name</p>

<p>Date</p>

<p>此文转载与<a href="http://pan.baidu.com/s/1gdEbG4r">实验室万事屋</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SCI写作不得不说的经典替换词]]></title>
    <link href="http://secdr.github.io/2015/05/18/sci-replace-words/"/>
    <updated>2015-05-18T00:24:38-07:00</updated>
    <id>http://secdr.github.io/2015/05/18/sci-replace-words</id>
    <content type="html"><![CDATA[<p>具体规则如下：</p>

<ul>
<li>individuals, characters, folks 替换 people , persons.</li>
<li>positive, favorable, rosy, promising, perfect, pleasurable, excellent, outstanding, superior 替换 good.</li>
<li>dreadful, unfavorable, poor, adverse, ill 替换 bad（如果bad做表语，可以有be less impressive替换。）</li>
<li>an army of, an ocean of, a sea of, a multitude of, a host of, if not most 替换 many.</li>
<li>a slice of, quiet a few 替换 some.</li>
<li>harbor the idea that, take the attitude that, hold the view that, it is widely shared that, it is universally acknowledged that 替换 think。</li>
</ul>


<!--more-->


<ul>
<li>affair, business, matter 替换 thing.</li>
<li>shared 替换 common .</li>
<li>reap huge fruits 替换 get many benefits.</li>
<li>for my part ,from my own perspective 替换 in my opinion.</li>
<li>Increasing(ly), growing 替换 more and more（注意没有growingly这种形式。所以当修饰名词时用increasing/growing修饰形容词，副词用increasingly.）</li>
<li>little if anything或little or nothing 替换 hardly.</li>
<li>beneficial, rewarding 替换 helpful.</li>
<li>shopper, client, consumer, purchaser 替换 customer.</li>
<li>overwhelmingly, exceedingly, extremely, intensely 替换 very.</li>
<li>hardly necessary, hardly inevitable…替换 unnecessary, avoidable.</li>
<li>indispensable 替换 necessary.</li>
<li>sth appeals to sb, sth exerts a tremendous fascination on sb 替换sb take interest in / sb. be interested in.</li>
<li>capture one&rsquo;s attention 替换 attract one&rsquo;s attention.</li>
<li>facet, demension, sphere 替换 aspet.</li>
<li>be indicative of, be suggestive of, be fearful of 替换 indicate,suggest, fear.</li>
<li>give rise to, lead to, result in, trigger 替换 cause.</li>
<li>There are several reasons behind sth 替换…reasons for sth.</li>
<li>desire 替换 want.</li>
<li>pour attention into 替换 pay attention to.</li>
<li>bear in mind that 替换 remember.</li>
<li>enjoy, possess 替换 have（注意process是过程的意思）。</li>
<li>interaction 替换 communication.</li>
<li>frown on sth 替换 be against , disagree with sth .</li>
<li>as an example 替换 for example, for instance.</li>
<li>next to / virtually impossible 替换 nearly / almost impossible.</li>
<li>regarding / concerning 替换 about.</li>
<li>crucial /paramount 替换 important.</li>
<li>第一（in the first place/the first and foremost）；第二（there is one more point, I should touch on, that…）；第三（the last but not the least）.</li>
<li>assiduous 替换 hard-working.</li>
<li>arduous 替换 difficult.</li>
<li>underdeveloped / financially-challenged 替换poor（因为poor通常含有贬义）.</li>
<li>demonstrate / manifest 替换 show</li>
<li>invariably 替换 always.</li>
<li>perilous / hazardous替换 dangerous.</li>
<li>formidable 替换 difficult</li>
<li>quintessential 替换 typical（举例时常用，例如：a quintessential example should be cited that=for example; for instance）.</li>
<li>distinguished 替换 famous.</li>
<li>feasible 替换 possible.</li>
<li>consequently, accordingly替换 so.</li>
<li>通常，由数据推断出一定的结论，用Results indicate, infer, suggest, imply that……</li>
</ul>


<p>最常见的引述别人观点的词汇</p>

<p>Much of the research  in sexual selection in the last two decades  has examined  how a female’s preference that does not influence her immediate reproductive success can still evolve if it is genetically correlated with another character under direct selection.(不要每次写到研究时总用study，可以用些其它的词汇，比如examine，work。)</p>

<p>Two hypotheses  for female preference evolution—runaway sexual selection and good genes selection—state that  preferences evolve indirectly because they are genetically correlated with male traits that are under direct selection; that is, the preferences themselves are not under direct selection.(在引述别人的观点时，如果不能完全同意，使用state 比show更加中立些。)</p>

<p>Studies of receiver biases suggest  that such analogies might not be broadly applicable.(suggest,又一种较为客观的引述观点的表达方法。)</p>

<p>Burley argued that the preference for red beaks is adaptive because it indicates male health, and this preference is then transferred to leg-band color.(argue,引用别人观点的又一表述。)</p>

<p>According to the anti-monotony hypothesis, habituation plays an important role in the evolution of complex vocalizations in songbirds: Increased song complexity reduces habituation of neighboring males and courting females.(根据…)</p>

<p>Previous studies of acoustic and bioluminescent interactions had emphasized potential advantages to group-signaling organization, such as minimizing predation, preserving species-specific signal characters, or increasing the attractiveness of the group.(带有小小的强调)</p>

<p>48.常见的连接词有，However, also, in addition, consequently, afterwards, moreover, Furthermore, further, although, unlike, in contrast, Similarly, Unfortunately, alternatively, parallel results, In order to, despite, For example, Compared with, other results, thus, therefore……用好连接词能使文章层次清楚，意思明确。比如，叙述有时间顺序的事件或文献，最早的文献可用AA advocated it for the first time.接下来可用Then BB further demonstrated that. 再接下来，可用Afterwards, CC……如果还有，可用More recent studies by DD……</p>

<p>原文地址：<a href="http://mp.weixin.qq.com/s?__biz=MjM5NjI5MTI3Mw==&amp;mid=201597125&amp;idx=1&amp;sn=ba98f6ac64cba9cf33fcc2769675f59b">PETD亚洲善待博士组织</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[学术论文的摘要该怎么写才能吸引眼球]]></title>
    <link href="http://secdr.github.io/2015/05/14/how-to-write-abstract/"/>
    <updated>2015-05-14T10:36:52-07:00</updated>
    <id>http://secdr.github.io/2015/05/14/how-to-write-abstract</id>
    <content type="html"><![CDATA[<p>大多数科研人员认为简短、精练、简单是在撰写学术论文摘要时要遵循的几个要素，但芝加哥大学（University of Chicago）的研究人员在研究了100万篇学术论文摘要之后发现：长篇幅、辞藻华丽、大量运用专业术语的摘要反而会使论文的引用率更高。</p>

<p>相关研究结果发表在PLoS Computational Biology上，研究表明，常见的写作规则并不适用于科技论文的撰写，这一现象也可能反映了在线搜索对当今科学领域的发展所造成的多方面影响。</p>

<p>该研究的作者之一、芝加哥大学进化生态学教授兼计算研究所研究员Stefano Allesina说道：“有趣的是，我们发现科研人员所引用的内容实际上并不是读者真正想要了解的。这一现象带来的启发是，我们不应该相信那些我们认为理所当然的写作技巧。”</p>

<!--more-->


<p></p>

<p>在一个指导毕业生如何撰写学术论文摘要的研讨会上，Allesina想知道是否有确凿的证据表明以往被认定的通用写作规则真的有效。于是Allesina和Cody Weinberger（芝大本科生）收集了数百条关于学术论文写作的建议并将这些建议浓缩成十条简单的写作规则，包括：简短、简单、突出新颖性和重要性、亮出自信等。</p>

<p>该校社会学系副教授兼计算研究所高级研究员James Evans也是该研究的作者之一。研究团队收集了一百万篇各学科（包括生物学、化学、地理学和心理学）的学术论文摘要并检测上述法则对论文引用率的影响（与同一期刊中的其他论文进行对比）。例如，检测“简短”规则时，考察的是摘要中单词或句子的数量与论文引用率之间的关系。</p>

<p>分析结果表明，不管是哪种学科，摘要篇幅较短都会导致论文引用率较低，这与之前人们的普遍认知（篇幅越短越好）背道而驰。尽管不被看好，但大量使用形容词、副词、不常见词汇以及突出新颖性和重要性的摘要会大大提高论文引用率。</p>

<p>综上所述，从字面意思上看，似乎只要将摘要写得冗长、复杂、易于检索、自我描述性强就能提高引用率。但实际上研究人员并不推荐这么做。Allesina说道：“如果你完全遵守这些规则，结果又会适得其反。将你所得到的建议打个折扣并且不要盲目遵从我们的建议才是最好的方法。写出好的学术论文没有捷径可走，用心才能写出好作品。”</p>

<p>然而，Evans表示：“在线浏览的时代已经到来，越是复杂的描述就越能吸引眼球，并最终在获得更多关注和赞誉的同时被最大程度的检索到。”</p>

<p>研究人员认为，研究结论同时反映出随着科研人员浏览论文方式的改变（在线浏览逐渐代替了纸质版浏览），科学领域相关的一些模式也在发生改变。许多常用数据库（如PubMed、Web of Science）在用户提交查询请求时只会通过摘要进行检索。从而导致长篇幅、含有较多与论文原文有关的特定词汇的摘要更易被检索到，从而更易被引用。</p>

<p>研究结果侧面表明，学术期刊强制限定摘要字数会在一定程度上对研究人员及其论文产生不利影响。Allesina提议，相比限定字数的方法，对论文全文进行检索会帮助科研人员更有效地检索到想要的信息。</p>

<p>Allesina表示：“我认为对字数限制越严格，引用效果就会越差。在论文几乎不再被打印浏览的当今时代，这样做完全没有必要。”（募格首译，译审：HH Lang）</p>

<p>原文网址：
<a href="http://phys.org/news/2015-05-short-science-abstracts-jargon-hype.html">http://phys.org/news/2015-05-short-science-abstracts-jargon-hype.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IEEE S&P 2015会议论文预读]]></title>
    <link href="http://secdr.github.io/2015/05/05/ieeesp2015papers/"/>
    <updated>2015-05-05T12:28:40-07:00</updated>
    <id>http://secdr.github.io/2015/05/05/ieeesp2015papers</id>
    <content type="html"><![CDATA[<p>作者及原文：<a href="http://www.vonwei.com/post/IEEESP2015Papers1.html">微月信-IEEE S&amp;P 2015会议论文预读</a></p>

<p>IEEE S&amp;P是Rank A的国际信息安全顶级会议，又称Oakland会议，尽管今年（2015）的会议召开还在五月份，不过<a href="http://www.ieee-security.org/TC/SP2015/program.html">官网</a>已经给出了会议程序列表，将进行三天，每天4个Session，每个Session都会将相似方向的最新安全研究成果进行展示。关注顶会的论文和Session方向对安全研究人员是非常必要的。在程序列表中，出现了三篇国内相关的文章，一篇一作来自中科院的Le Guan（本科室友，在国内读博期间分别发了两篇顶会了，很不错的成果，恭喜，另一篇在NDSS 2014上）；另一篇一作来自浙江大学的Boyuan He,看了下他们<a href="http://list.zju.edu.cn/">实验室主页</a>，果然也是有真正学术大牛在引导；最后一篇非一作，来自上海交大。</p>

<p>下面分别列出各个Session的论文，对于感兴趣的部分会简单的介绍一下。由于Session太多，将分三个博文分别进行介绍。由于会议主要论文将分三天报告完，因此每篇博文将介绍一天的论文。这篇先介绍第一天的论文，四个Session，共20篇文章。</p>

<!--more-->


<h3>Session 1：Hardware-Aided Security</h3>

<p>这个Session主要讨论硬件辅助的安全，如使用处理器比较新的硬件事务内存HTM，SGX等技术。该Session共五篇论文，其中第一个作报告的就是Le Guan。</p>

<p>（1）Protecting Private Keys against Memory Disclosure Attacks using Hardware Transactional Memory</p>

<p>第一篇来自中科院的Le Guan。现在很多密码系统的实现都是将密钥明文加载到内存中进行密码运算，这样私钥容易遭受内存泄露攻击，这种攻击可以通过软件方式实现（如OpenSSL的心血漏洞），也可以通过硬件方式实现（如冷启动攻击）。这篇论文提出的解决方案可以保护RSA私钥免遭上面的两类攻击。使用的方法就是基于硬件事务内存（hardware transactional memory - HTM），该论文是最先想到用HTM来保护敏感数据，以防止内存泄露攻击。论文实现的系统称为Mimosa，含羞草，很有意思的名字，这里就不猜测了。</p>

<p>（2）CHERI：A Hybrid Capability-System Architecture for Scalable Software Compartmentalization</p>

<p>（3）VC3: Trustworthy Data Analytics in the Cloud using SGX</p>

<p>本文提出了第一个实用的框架：允许用户在云上运行分布式的MapReduce计算，同时保证代码和数据的机密性，以及计算结果的正确性和完整性。该框架VC3运行在没有修改的Hadoop上，不过将Hadoop、OS和Hypervisor都排除在TCB（可信计算基）之外，这样即便Hadoop、OS和Hypervisor这些大系统组件被攻破，也不会影响VC3的机密性和完整性。VC3使用SGX处理器进行内存区域隔离，并部署新的协议来保证分布式MapReduce计算的安全。</p>

<p>（4）Virtual Proofs of Reality and Their Physical Implementation</p>

<p>虚拟现实证明及其物理实现，之前没有接触过这个概念，不过看起来很有意思。讨论的问题是：如何通过数字通信通道来证明物理语句（或者物理陈述），证明在两个隔离的本地系统之间进行（一个为证明者prover，另一个为验证者verifier）。证明的物理语句例子如，“证明者系统的一个特定对象的温度是X摄氏度”，“证明者系统的两个特定对象的距离为X”，“证明者系统的一个特定对象已经被不可逆的改变或者毁坏”。通过对这些例子的分析，本文的处理方法超越了经典安全传感器的范围。本文另一个独特的方面是其底层安全模型：既不假设证明者系统的安全密钥，也不假设其系统传感器硬件的防篡改和可信性（verifier不一定信任这些传感器硬件）。本文将这类新安全协议称为“虚拟现实证明”，或者“虚拟证明”，记为VP协议。为了分析提出的新概念，本文基于温度敏感的集成电路、无序光散射媒体以及量子系统来给出VPs例子。相应的协议向verifier证明prover系统特定物理对象的温度、相对位置，或者毁坏/修改。这些物理对象通常由verifier准备，并在VP协议之前交给prover。本文工作触及（部分进行了扩展）密码和安全领域的几个概念，包含物理不可克隆函数（PUF，physical unclonable functions），量子密码学（quantum cryptography），交互证明系统（interactive proof systems），以及最近的物理零知识证明（physical zero-knowledge proofs）。</p>

<p>（5）Using Hardware Features for Increased Debugging Transparency</p>

<h3>Session 2: Cryptocurrencies and Cybercrime</h3>

<p>第二个session主要关注密码货币和网络犯罪方面。这个session也是跟踪最近一段时间比较热门的比特币，安全研究者主要分析其系统属性。也有五篇论文，如下</p>

<p>（1）Every Second Counts: Quantifying the Negative Externalities of Cybercrime via Typosquatting</p>

<p>每天都有很多人称为网络犯罪的受害者，通常我们对受害系统的数量或者攻击者的利润都有比较好的了解，但是对人们承担的危害却了解不够。实际上，减少这种危害才是很多安全干预的最终目标。这些危害是如何犯下的，哪些犯罪造成这种危害，哪类攻击需要导致承受多少危害，为了有效减小危害的发生，这些都是需要了解的问题。本文提出了一种策略，可以对网络犯罪导致的危害进行量化，开发的新技术称为“意图推断（intent inference）”。意图推断可以达到三个目标：定义一个新的度量标准对用户遭受的危害进行量化；开发一个新的方法用来确定伪造域名；量化由各种伪造域名攻击者造成的危害。</p>

<p>（2）SoK: Bitcoin and second-generation cryptocurrencies</p>

<p>提到密码货币当然不可不提比特币Bitcoin，可以说是历史上最成功的密码货币，但是其大起大落确实富了不少人，也估计让不少人破产。比特币的经济价值就不多说了，在学术界很多论文开始研究比特币的安全性，发现攻击并提出替代方案。对比特币的兴趣形成了很多开源社区，而且很多修改或者扩展版本也被提出来。本文第一个提出对第二代密码现金的系统阐述，包含比特币以及很多变种。通过本文，可以对密码现金的系统属性有更加深刻的认知。</p>

<p>（3）The Miner&rsquo;s Dilemma</p>

<p>比特币火起来时，很多人开始去炒币，但据说真正赚钱的还是最早一批的挖矿者。挖矿形成了很多矿池（Pool），每个成员贡献其计算能力并分享奖励。而且很多大型的矿池都是开放性的，也就是任何人都可以参与进去分一杯羹。不过已经被证明矿池也是存在攻击的，一个成员可以无缝加入矿池中，但却不贡献其力量，这样矿池的收益被攻击者恭喜，每个真正参与计算的会有所损失。本文通过定义和分析游戏，对矿池的攻击进行了分析。</p>

<p>（4）Bitcoin over Tor isn&rsquo;t a good idea</p>

<p>这篇文章主要考虑比特币的匿名性。为了达到匿名性，有研究者提出可以通过Tor来连接比特币网络。Tor（<a href="https://www.torproject.org/%EF%BC%89%E6%98%AF%E7%AC%AC%E4%BA%8C%E4%BB%A3%E6%B4%8B%E8%91%B1%E8%B7%AF%E7%94%B1%EF%BC%88onion">https://www.torproject.org/%EF%BC%89%E6%98%AF%E7%AC%AC%E4%BA%8C%E4%BB%A3%E6%B4%8B%E8%91%B1%E8%B7%AF%E7%94%B1%EF%BC%88onion</a> routing）的一种实现，用户通过Tor可以在因特网上进行匿名交流。这篇文章证明组合Tor和比特币并不是一个好主意，容易导致新的攻击。</p>

<p>（5）Ad Injection at Scale: Assessing Deceptive Advertisement Modifications</p>

<p>这篇文章主要关注Web Injection。</p>

<h3>Session 3: Protocols and Network Security</h3>

<p>这个session主要是关注网络安全，研究网络中的一些安全协议的安全性，找到攻击并提出改进建议。不管怎样，网络安全也是很传统也永远不会过时的一个安全领域。不过，网络安全研究的范围很广，远不是下面五篇文章能涉及全面的。</p>

<p>（1）Connection-Oriented DNS to Improve Privacy and Security</p>

<p>DNS看起来对非链接的UDP协议来说很完美，实际上这个选择会导致很多问题：窃听，破坏隐私；源地址欺骗，使得DoS攻击更容易；注入攻击等。这篇文章提出DNS-X来解决这些问题。</p>

<p>（2）SoK: Secure Messaging</p>

<p>斯诺登事件发生后，关于国家对个人通信信息的窃听已经引起大家的重视，很多解决方案也声称能够提供安全和隐私信息。这包含很多新项目的出现，而且很多广泛使用的工具也增加了安全特征。过去两年巨大的压力要求快速交付安全解决方案，这导致了各种不同的威胁模型，不完整的目标，可疑的安全要求，对安全通行方面存在的密码相关文献缺乏广泛的视角。这篇文章，作者系统化总结并评估了当前的安全消息解决方案，并提出了一个评估框架来分析它们的安全性、可用性、容易接受等属性。本文既考虑学术界的解决方案，也考虑其它非学术文献但创新且有意思的方法。主要考虑了三个关键的挑战：可信建立（trust establishment）、安全会话（conversation security）和传输隐私（transport privacy）。可信建立方法提供强大的安全和隐私保护功能，但是在可用性和接受方面却表现很糟糕；不过，一些没有在学术界得到仔细研究的混合方法有可能在实际中提供更好的平衡。相比起来，一旦可信建立起来，大部分两方会话安全也能得到保证，不过多方会话还需要更加实际的解决方案。最后，传输隐私在不损失太多性能的情况下看起来是最难实现的问题。</p>

<p>（3）Temporal Lensing and its Application in Pulsing Denial-of-Service Attacks</p>

<p>Temporal Lensing 这个技术也是第一次听说，先科普一下。&#8221;temporal lensing&#8221;: a technique that concentrates a relatively low-bandwidth flood into a short, high-bandwidth pulse. 怎么用到DoS攻击里面就不是很了解了。</p>

<p>（4）How Secure and Quick is QUIC? Provable Security and Performance Analyses</p>

<p>QUIC（Quick UDP Internet Connections）是Google 2013年开发的一个安全传输协议，能减少网络延迟同时提供类似TLS的安全属性。本文主要是对该协议进行分析，包含可证明安全和性能评估。分析发现了QUIC协议存在的一些安全问题。</p>

<p>（5）Secure Track Verification</p>

<p>The paper proposes a new approach for securely verifying sequences of location claims from mobile nodes. 安全位置验证机制。</p>

<h3>Session 4: Cryptographic Protocols</h3>

<p>第四个session介绍密码协议方面的最新成果了，密码协议表面简单，可以里面的密码机制却很难，因此一般研究这块的主要以偏理论为主了。对于搞工程的，可以了解一下这些密码机制的作用还是很重要的，说不定哪天真能用上。</p>

<p>（1）Riposte: An Anonymous Messaging System Handling Millions of Users</p>

<p>这篇文章介绍了一个新的匿名广播消息系统，称为Riposte，并进行了原型实现，理论中比较偏工程的了。该系统可以防止流量分析攻击（traffic-analysis attacks），防止恶意客户端的匿名拒绝服务攻击，而且规模能达到百万级用户的匿名集合。使用了PIR（Private Information Retrieval）和安全多方计算MPC中的相关技术。</p>

<p>（2）Geppetto: Versatile Verifiable Computation</p>

<p>云计算引发了对可验证计算（Verifiable Computation）协议的兴趣，通过VC，一个弱客户端可以安全地外包计算给远程方。最近理论和实际上的改进已经大大降低了客户端验证计算结果正确性的开销，不过提供证明的开销还是不实际。这篇文章提出了一系列的补充技术来减少证明者的负担，同时增加证明者的灵活性。</p>

<p>（3）ADSNARK: Nearly Practical and Privacy-Preserving Proofs on Authenticated Data</p>

<p>认证数据的隐私证明，方法很理论，不过应用场景却比较实际（如可穿戴计算wearable computing, 智能计量smart metering, or 通用的B2B交互general business-to-business interactions）。凡是与隐私相关的研究都需要一定的密码积累吧。</p>

<p>（4）Secure Sampling of Public Parameters for Succinct Zero Knowledge Proofs</p>

<p>非交互式零知识证明（NIZKs）是一个非常有用的密码学工具，具有很多有前景的应用。不过，简单的NIZKs机制需要一个可信方来生成和发布公共参数，这些参数供所有证明者和验证者使用。这就出现一个问题，该可信方在实际可能并不可信或者根本不存在。本文主要关注这个问题，提出如何安全发布公共参数的解决方案。</p>

<p>（5）Forward Secure Asynchronous Messaging from Puncturable Encryption</p>

<p>本文提出一个新的机制，能实现forward secure encryption和forward messaging systems（如email和SMS）。</p>

<p>In a forward secure encryption scheme, a user periodically updates her secret key so that past messages remain confidential in the event that her key is compromised. A primary contribution of our work is to introduce a new form of encryption that we name puncturable encryption（提出了一种新的加密形式）. Using a puncturable encryption scheme, recipients may repeatedly update their decryption keys to revoke decryption capability for selected messages, recipients or time periods. Most importantly, this update process does not require the recipients to communicate with or distribute new key material to senders. We show how to combine puncturable encryption with the forward-secure public key encryption proposal of Canetti et al. to achieve practical forward-secure messaging with low overhead. We implement our schemes and provide experimental evidence that this new construction is practical.</p>

<h3>Session 5: ORAM and Secure Multi-Party Computation</h3>

<p>安全多方计算的研究可以说已经有了快30年的历史了，可谓经久不衰，可见其重要性。不过研究安全多方计算需要很好的理论基础，虽然很多方案提出来，但至今并没有很实用的方案。最近几年的方向好像是开始更多的关注实用方案。ORAM称为“Oblivious RAM”，该机制在让客户端访问远程存储时可以隐藏其访问模式，特别在云存储兴起后，研究ORAM的人也日益趋多。不管怎样，进入这个方向是需要理论基础的，比较难，不过每年在各种安全顶会上，这个方向的论文总是不少。先看看下面五篇论文。</p>

<p>（1）Privacy and Access Control for Outsourced Personal Records</p>

<p>云存储已经成为很多IT架构的基石，为备份、同步和大数据共享提供一个无缝的解决方案。不过，直接将用户数据交给云服务商控制，总会出现不少安全和隐私问题，如外包数据的完整性如何保证、敏感信息是否会意外或者故意泄露、用户活动是否被分析等等。而且，即便相信云服务商是可信，访问外包文档的用户也可能存在恶意行为。对于个人健康记录和信用评分等敏感应用，这些安全问题尤为严重。为了解决这个问题，这篇文章提出了一个密码系统，称为GORAM，即便云服务不可信且存在恶意客户端，该系统能保证外包数据的机密性和完整性，保证对访问这些数据的匿名性和不可链接性，而且允许数据拥有者将外包数据与其他客户端进行共享，选择性的给予他们读或者写的权限。GORAM声称是第一个在外包存储领域能达到如此广范围安全和隐私属性的密码系统。在构造该系统过程中，开发了两个新且通用的密码机制，分别为batched zero-knowledge proofs of shuffle 和 an accountability technique based on chameleon signatures。最后，为了评估有效性，作者在Amazon EC2云上对GORAM进行了实现。</p>

<p>（2）TinyGarble: Highly Compressed and Scalable Sequential Garbled Circuits</p>

<p>安全多方计算最早由华人Yao提出，当时他提出的解决方案为混淆电路，即Garbled Circuit（GC），这个方法堪称最有效的方案，一直研究至今。这篇论文的TinyGarble也是在Yao GC上的改进，提出了一个新的自动化方法来产生压缩布尔电路。</p>

<p>（3）GraphSC: Parallel Secure Computation Made Easy</p>

<p>使用机器学习的优势，同时提供用户数据隐私性，需要对一组广泛的数据挖掘算法的安全计算模型。这篇文章将安全计算引入到对大规模并行体系进行数据挖掘的编程框架中。总之，机器学习、数据挖掘、安全计算在这里结合了，能达到这样的效果：开发了一个编程范式使得非密码专家也可以编写安全代码；将并行带入这些算法的安全版本；满足茫然（obliviousness）的需求，即不泄露任何隐私信息。并以如何隐藏图结构为例子进行了分析。感觉消化这篇不容易，不过如何结合确实有点意思。</p>

<p>（4）Malicious-Client Security in Blind Seer</p>

<p>Blind Seer系统是SP 2014上提出一个有效可扩展的DBMS，能同时提供客户查询隐私和服务器数据保护。这篇文章对其进行改进，解决面对恶意客户端是如何解决的问题。使用了一个新的技术，称为SPF-SFE（a semi-private function secure function evaluation），SFE其实本质上就是安全多方计算，而半隐私函数SPF也是在这里第一次听说了。</p>

<p>（5）ObliVM: A Programming Framework for Secure Computation</p>

<p>只看介绍感觉这篇文章很牛，设计和开发了新一代自动安全计算框架，能够修补通用性和自定义之间的间隙，而且代码将对安全社区开源。看起来很有吸引力，到时一睹真容后再来分析分析。</p>

<h3>Session 6: Security du Jour</h3>

<p>“du jour”通常在餐馆形容今日特色菜，是今日特色、当今流行的意思，这个session的paper可能并不能划归为具体哪个方向，就全放在一起，形成今日特色安全吗？先看看这些特色在研究啥吧，有兴趣的也可以跟踪：</p>

<p>（1）SurroundWeb: Mitigating Privacy Concerns in a 3D Web Browser</p>

<p>将数字世界与真实世界的物体混合起来达到身临其境的体验正在成为现实。通过体感游戏Kinect，这些体验已经在智能手机和游戏设备中出现（如微软的XBOX游戏机），相信最终也会出现在设备无关的Web平台上。尽管炫酷，这些体验也带来了严峻的隐私问题，因为它们需要实时传感器输入来适当的混合数字和真实世界物体。之前的研究方法通过过滤、访问控制以及沙盒等来控制应用程序对传感器输入的访问，无法直接解决这种体验内部的显示任务。而且，这些低级解决方案无法整合到Web平台的高级GUI工具集中。这篇文章描述了如何扩展已有的Web平台，使得通过最小特权达到身临其境的呈现，并且在一个3D Web浏览器（微软研究院正在开发的SurroundWeb 3D浏览器）中实现了这些扩展。</p>

<p>（2）&#8221;I know what you did last summer&#8221; – Towards Making Systems Forget with Machine Unlearning</p>

<p>初看题目以为这篇会讲时下最热门的机器学习，仔细看发现是“Machine Unlearning”。不禁想起倚天屠龙中张三丰教张无忌太极拳的那一段，最高境界不是记住了多少招式，也是忘记了所有招式，随意出招。这里的“机器反学习”难道是要达到这个效果吗？这里的机器反学习就是要达到遗忘的效果，来保护用户的隐私，出发点很有意思，有空可以看看全文。In this paper, we focus on making learning systems forget, the process of which is defined as machine unlearning or unlearning. To perform unlearning upon learning system, we present general unlearning criteria, i.e., converting a learning system or part of it into a summation form of statistical query learning model, and updating all the summations to achieve unlearning.</p>

<p>（3）GenoGuard: Protecting Genomic Data Against Brute-Force Attacks</p>

<p>这篇似乎是安全与生物的一个结合，关注基因组数据的安全存储。提供了一个工具（称为GenoGuard）来对基因组数据进行当下和长期的强保护。</p>

<p>（4）SoK: A comprehensive analysis of game-based ballot privacy definitions</p>

<p>又是一篇关注隐私的文章，不过比较理论。作者以批判性思维（研究者需要具备的基本要素，但有时却很难达到）重新审视了投票方案中关于隐私的基于游戏的安全定义，除了发现之前的一些问题外，还揭露了一些没有注意到的缺陷。分析后，作者的总结是现有的定义没有一个满足要求，因此提出了一个新的基于游戏的隐私定义（a new game-based definition of privacy），称为BPRIV。</p>

<p>（5）Cracking-Resistant Password Vaults using Natural Language Encoders</p>

<p>“Password vaults”可以叫做“密码保险库”，用户记忆多个不同的密码是很困难的一件事，密码保险库通过将多个密码加密存储起来，用户只需要记住一个主密码即可。我之前的博文介绍的KeePass工具可以说也是这样的一个密码保险库。这样对用户非常方便，但是却很自然导致一个问题，即单点故障。攻击者获得用户的密码保险库后可能进行离线穷举攻击（offline brute-force attacks），一旦成功，那用户所有的密码都泄露了。这篇论文研究如何构建加密的保险库来抵制这种攻击，强制攻击者必须进行在线攻击。本文还介绍了一个新的安全编码机制，称为自然语言编码器natural-language encoders (NLEs)。</p>

<h3>Session 7: Protocols</h3>

<p>之前的Session有关注网络协议的，也有关注密码协议的，这个Session就叫协议，应该是各种协议都有吧，且看看先。</p>

<p>（1）Security of the J-PAKE Password-Authenticated Key Exchange Protocol</p>

<p>这篇文章分析J-PAKE协议的安全性，J-PAKE全称password-authenticated key exchange protocol（密码认证密钥交换协议），这个协议来自开源的OpenSSL密码库，已经在实际中得到了很多应用。</p>

<p>（2）Post-quantum key exchange for the TLS protocol from the ring learning with errors problem</p>

<p>结合格密钥交换和传统的基于RSA或者ECC的认证，研究公钥的人应该比较关心这个问题。</p>

<p>（3）A Messy State of the Union: Taming the Composite State Machines of TLS</p>

<p>这篇分析传输层安全协议TLS，分析的是其开源实现版本中的问题，发现攻击并提出解决方法。</p>

<p>（4）Vetting SSL Usage in Applications with SSLINT</p>

<p>这是第二篇国内研究机构的论文，来自浙江大学的Boyuan He。论文也是分析传输层安全协议SSL和TLS的，不过分析的不是协议本身，而是分析对其API的使用。对SSL/TLS APIs的不正确使用可能造成攻击，很多可能是由于API本身设计的问题，或者是应用开发者经验不足导致的，造成数据泄露或者中间人攻击。为了保证应用程序使用SSL/TLS时的代码质量和逻辑正确性，该论文提出了一个可扩展的自动检测系统SSLINT，可以检测对SSL/TLS APIs的不正确使用。该系统基于静态分析技术，通过分析Ubuntu系统中的应用，找到了27个未知的SSL/TLS漏洞。</p>

<h3>Session 8: Side Channels</h3>

<p>侧信道（或者边信道）攻击也是很经典的密码问题，研究也几十年的历史了。这种攻击并不是密码分析或者暴力破解，而是分析密码系统的物理实现中获得的信息，如时间信息、功耗、电磁泄露或者甚至声音都可能提供一个额外的信息源，从而被利用来攻击密码系统。由于笔者并不研究这一块，主要简介一下，以科普为主。</p>

<p>（1）Controlled-Channel Attacks: Deterministic Side Channels for Untrusted Operating Systems</p>

<p>这篇介绍控制信道攻击Controlled Channel attacks，一种新类型的侧信道攻击，该攻击中一个不可信的操作系统可以从Overshadow、lnkTag或者Haven保护的应用程序中提取大量的敏感信息。</p>

<p>（2）S$A: A Shared Cache Attack that Works Across Cores and Defies VM Sandboxing—and its Application to AES</p>

<p>这是关于虚拟平台上的一个侧信道攻击。In this work, we introduce a fine-grain cross-core cache attack that exploits access time variations on the last level cache. The attack exploits huge pages to work across VM boundaries without requiring deduplication.</p>

<p>（3）Last-Level Cache Side-Channel Attacks are Practical</p>

<p>We present an effective implementation of the Prime+Probe side-channel attack against the last-level cache. We measure the capacity of the covert channel the attack creates and demonstrate a cross-core, cross-VM attack on multiple versions of GnuPG. Our technique achieves a high attack resolution without relying on weaknesses in the OS or hypervisor or on sharing memory between attacker and victim.</p>

<p>（4）On Subnormal Floating Point and Abnormal Timing</p>

<p>这篇关于时间信道攻击。We identify a timing channel in the floating point instructions of modern x86 processors: the running time of floating point addition and multiplication instructions can vary by two orders of magnitude depending on their operands. 现在大部分PC还是采用x86处理器，这个攻击如果能够实用也是非常危险的。</p>

<h3>Session 9: Malware and Program Analysis</h3>

<p>这个Session是恶意代码分析，比较实用，大家常关注的黑客或者极客主要是这块了。恶意代码分析过程绝对是个枯燥的过程。</p>

<p>（1）Cross-Architecture Bug Search in Binary Executables</p>

<p>With the general availability of closed-source software for various CPU architectures, there is a need to identify security-critical vulnerabilities at the binary level to perform a vulnerability assessment. Unfortunately, existing bug finding methods fall short in that they i) require source code, ii) only work on a single architecture (typically x86), or iii) rely on dynamic analysis, which is inherently difficult for embedded devices. In this paper, we propose a system to derive bug signatures for known bugs. We then use these signatures to find bugs in binaries that have been deployed on different CPU architectures (e.g., x86 vs. MIPS). The variety of CPU architectures imposes many challenges, such as the incomparability of instruction set architectures between the CPU models. We solve this by first translating the binary code to an intermediate representation, resulting in assignment formulas with input and output variables. We then sample concrete inputs to observe the I/O behavior of basic blocks, which grasps their semantics. Finally, we use the I/O behaviors to find code parts that behave similar to the bug signature, effectively revealing code parts that contain the bug. We have designed and implemented a tool for cross-architecture bug search in executables. Our prototype currently supports three instruction set architectures (x86, ARM, and MIPS) and can find vulnerabilities in buggy binary code for any of these architectures. We show that we can find Heartbleed vulnerabilities, regardless of the underlying software instruction set. Similarly, we apply our method to find backdoors in closed- source firmware images of MIPS- and ARM-based routers.</p>

<p>（2）The Attack of the Clones: A Study of the Impact of Shared Code on Vulnerability Patching</p>

<p>Vulnerability exploits remain an important mech- anism for malware delivery, despite efforts to speed up the creation of patches and improvements in software updating mech- anisms. Vulnerabilities in client applications are often exploited in spear phishing attacks and cannot be discovered using network vulnerability scanners. Analyzing their lifecycle is challenging because it requires observing the deployment of patches on hosts around the world. Using 5-year data collected on 8.4 million hosts, available through Symantec’s WINE platform, we present the first systematic study of patch deployment in client-side vulnerabilities. Our analysis of the vulnerability lifecycle of 10 popular client applications identifies several new threats presented by multiple installations of the same program and shared libraries that may be distributed with multiple applications. We find that 80 vulnerabilities in our data set affect common code shared by two applications. In these cases, the time between patch releases in the different applications is up to to 118 days (with a median of 11 days). Furthermore, as the patching rates differ between applications, many hosts patch the vulnerability in one application but not in the other one. We demonstrate two novel attacks that enable exploitation by invoking old versions of applications that are used infrequently, but that remain installed. We also find that the patch rate is affected by user-specific and application-specific factors; for example, hosts belonging to security analysts and applications with an automated updating mechanism have significantly lower median times to patch.</p>

<p>（3）SoK: Deep Packer Inspection: A Longitudinal Study of the Complexity of Run-Time Packers</p>

<p>Run-time packers are typically used by malware-writers to obfuscate their code and hinder static analysis. The packer problem has been widely studied, and several solutions have been proposed in order to generically unpacked these protected binaries. Nevertheless, these solutions commonly rely on certain assumptions that may not necessarily be met by certain types of packers. In this paper, we propose a taxonomy to measure runtime packer complexity, and evaluate it over two datasets composed of both off-the-shelf packers and custom packed binaries. Also, we propose a set of heuristics to improve the feasibility of multi-path exploration approaches for recovering the code of packers that unprotect their code on demand.</p>

<p>（4）A Generic Approach to Automatic Deobfuscation of Executable Code</p>

<p>Malicious software are usually obfuscated to avoid detection and resist analysis. When new malware is encountered, such obfuscations have to be penetrated or removed (&ldquo;deobfuscated&rdquo;) in order to understand the internal logic of the code and devise countermeasures. This paper discusses a generic approach for deobfuscation of obfuscated executable code. Our approach does not make any assumptions about the nature of the obfuscations used, but instead uses semantics-preserving program transformations to simplify away obfuscation code. We have applied a prototype implementation of our ideas to a variety of different kinds of obfuscation, including emulation-based obfuscation, emulation-based obfuscation with runtime code unpacking, and return-oriented programming. Our experimental results are encouraging and suggest that this approach can be effective in extracting the internal logic from code obfuscated using a variety of obfuscation techniques, including tools such as Themida that previous approaches could not handle.</p>

<p>（5）Program-Adaptive Mutational Fuzzing</p>

<p>In this work, we propose a novel way to maximize the number of bugs found for black-box mutational fuzzing given a program and a seed input. The major intuition is to leverage a white-box symbolic analysis on an execution trace for a given program-seed pair to optimize parameters for mutational fuzzing. The result is promising: we found 25% more bugs than the state- of-the-art fuzzers over 8 applications, given a limited resource. We make our code publicly available to foster open science.</p>

<h3>Session 10: Memory Integrity</h3>

<p>内存完整性，这个session的技术都比较难，需要多年的积累。内存完整性分析都与实际攻击相关，如内存泄露攻击、代码重用攻击、ROP攻击等等。用到的解决技术都需要对系统底层了解比较透彻。</p>

<p>（1）Micro-Policies: Formally Verified, Tag-Based Security Monitors</p>

<p>Recent advances in hardware design have demonstrated mechanisms allowing a wide range of low-level security policies micro-policies to be expressed using rules on metadata tags. We propose a methodology for defining and reasoning about such tag-based reference monitors in terms of a high-level &ldquo;symbolic machine,&rdquo; and we use this methodology to define and formally verify micro-policies for dynamic sealing, compartmentalization, control-flow integrity, and memory safety; in addition, we show how to use the tagging mechanism to protect its own integrity. For each micro-policy, we prove by refinement that the symbolic machine instantiated with the policy&rsquo;s rules embodies a high-level specification characterizing a useful security property. Last, we show how the symbolic machine itself can be implemented in terms of a hardware rule cache and a software controller.</p>

<p>（2）Counterfeit Object-oriented Programming: On the Difficulty of Preventing Code Reuse Attacks in C++ Applications</p>

<p>Code reuse attacks（代码重用攻击） such as return-oriented programming (ROP) are prevalent and powerful and are widely used to exploit memory corruption vulnerabilities in software programs. Recently, many defenses were proposed to mitigate code reuse attacks, but some of them have already been successfully broken. In this paper, we perform a systematic assessment of recently proposed CFI solutions and other defenses against code reuse attacks in the context of object-oriented languages. We focus on C++ since this programming language is used by a large number of today&rsquo;s most attacked software projects (e.g., web browsers, document viewers, and other programming languages&#8217; runtime interpreters). We demonstrate that almost all CFI solutions and many other defenses that do not consider object-oriented C++ semantics can be bypassed in practice. Our novel attack technique, denoted as COOP (counterfeit object-oriented programming), induces malicious program behavior by only invoking chains of a program&rsquo;s existing virtual functions through legitimate call sites. COOP is Turing complete under realistic conditions and we demonstrate its viability by developing complex, real-world exploit codes for Internet Explorer 10 on Windows and Firefox 36 on Linux. We also show that even recently proposed defenses (Code-Pointer Separation, T-VIP, vfGuard, and VTint) that specifically target C++ are vulnerable to COOP. Our observation is that no strong defense against COOP exists today that does not require access to source code, and constructing such a defense seems to be challenging. We believe that our investigation and results are helpful contributions to the design and implementation of future defense systems against the severe threat of control-flow hijacking attacks that has sustained in the wild for more than two decades.</p>

<p>（3）Automatic Inference of Search Patterns for Taint-Style Vulnerabilities</p>

<p>Taint-style vulnerabilities are a persistent problem in software development, as the recently discovered &ldquo;Heartbleed&rdquo; vulnerability strikingly illustrates. In this class of vulnerabilities, attacker-controlled data is passed unsanitized from an input source to a sensitive sink. While simple instances of this vulnerability class can be detected automatically, more subtle defects involving data flow across several functions or project- specific APIs are mainly discovered by manual auditing. Different techniques have been proposed to accelerate this process by searching for typical patterns of vulnerable code. However, all of these approaches require a security expert to manually model and specify appropriate patterns in practice. In this paper, we propose a method for automatically inferring search patterns for taint-style vulnerabilities in C code. Given a security-sensitive sink, such as a memory function, our method automatically identifies corresponding source-sink systems and constructs patterns that model the data flow and sanitization in these systems. The inferred patterns are expressed as traversals in a code property graph and enable efficiently searching for unsanitized data flows—across several functions as well as with project-specific APIs. We demonstrate the efficacy of this approach in different experiments with 5 open-source projects. The inferred search patterns reduce the amount of code to inspect for finding known vulnerabilities by a factor of 19.5 (94.9%) and also enable us to uncover 8 previously unknown vulnerabilities.</p>

<p>（4）Readactor: Practical Code Randomization Resilient to Memory Disclosure</p>

<p>Code-reuse attacks such as return-oriented programming (ROP) pose a severe threat to modern software. Designing practical and effective defenses against code-reuse attacks is highly challenging. One line of defense builds upon fine-grained code diversification to prevent the adversary from constructing a reliable code-reuse attack. However, all solutions proposed so far are either vulnerable to memory disclosure or are impractical for deployment on commodity systems. In this paper, we address the deficiencies of existing solutions and present the first practical, fine-grained code randomization defense, called Readactor, resilient to both static and dynamic ROP attacks. We distinguish between direct memory disclosure, where the attacker reads code pages, and indirect memory disclosure, where attackers use code pointers on data pages to infer the code layout without reading code pages. Unlike previous work, Readactor resists both types of memory disclosure. Moreover, our technique protects both statically and dynamically generated code. We use a new compiler-based code generation paradigm that uses hardware features provided by modern CPUs to enable execute-only memory and hide code pointers from leakage to the adversary. Finally, our extensive evaluation shows that our approach is practical&mdash;we protect the entire Google Chromium browser and its V8 JIT compiler&mdash;and efficient with an average SPEC CPU2006 performance overhead of only 6.4%.</p>

<p>（5）Missing the Point: On the Effectiveness of Code Pointer Integrity</p>

<p>Memory corruption attacks （内存泄露攻击）have been known for decades, but they are still a major vector of attack for compromising modern systems. Numerous defenses have been proposed against memory corruption attacks, but they all have their limitations and weaknesses. Stronger defenses such as complete memory safety incur a large overhead, while weaker ones such as practical control flow integrity have been shown to be ineffective. A recent technique called code pointer integrity (CPI) promises to provide the best of both security and performance worlds, preventing control hijacking attacks while maintaining low overhead. In this paper, we show that the assumptions made by CPI are fundamentally flawed and in fact CPI can be bypassed using existing, known types of vulnerabilities. We show that CPI’s safe region can be leaked and then maliciously modified by using data pointer overwrites. Although many other implementation bugs exist in CPI, for this work we assume the weakest assumptions for the attacker and the strongest implementation of CPI and show that just by controlling the stack, an attacker can easily bypass CPI. Our attack was implemented as a proof-of-concept against Nginx and could successfully bypass CPI in 6 seconds with 13 observed crashes. We also present an attack that generates no crashes and is able to bypass CPI in 98 hours.</p>

<h3>Session 11: Security du Jour II</h3>

<p>这是第二个特色安全Session了，通过对之前特色论文的了解，论文应该都具有一定的新颖性和吸引力。</p>

<p>（1）Securing Multiparty Online Services via Certified Symbolic Transactions</p>

<p>现在很多在线服务（如单点登录、第三方支付等）都存在安全缺陷，对程序进行形式化验证变得很需要。不过程序验证在现实世界中存在很多障碍：协议规范通常很模糊，如果描述其安全属性；如何对攻击者和运行时平台建模；如何处理交易中的无限集合（the unbounded set）。这篇文章介绍认证符合交易Certified Symbolic Transaction (CST)，可以大大降低程序验证方法使用的障碍。</p>

<p>（2）Caelus: Verifying the Consistency of Cloud Services with Battery-Powered Devices</p>

<p>云存储服务，如Amazon S3、DropBox、Google Drive、Microsoft OneDrive、百度云等已经日益流行。不过，用户不可能完全相信云服务。目前提出的对云存储的解决方案，当用到电池供电的设备中都存在不足，如或者需要设备长期开启以便通信，或者需要依赖一个可信服务来传递消息，或者无法提供及时的攻击检测。这篇论文提出Caelus，可以解决这些不足。The key insight that enables Caelus to do this is having the cloud service declare the timing and order of operations on the cloud service. Our experiments show that Caelus can detect consistency violations on Amazon’s S3 service when the desired consistency requirements set by the user are stricter than what S3 provides. Caelus achieves this with a roughly 12.6% increase in CPU utilization on clients, 1.3% of network bandwidth overhead and negligible impact on the battery life of devices.</p>

<p>（3）High System-Code Security with Low Overhead</p>

<p>由于编写安全系统代码是非常困难的，导致安全漏洞长期困扰着现代各种系统。好的方法通过运行时检测实现期望的安全策略能够自动改造安全，不过诱发的系统变慢导致很多用户难以接受，使得这些工具很少被使用。这样，现实系统的不安全性就一直存在。这篇文章就帮助开发者如何优雅的处理性能问题，在安全性和性能上达到一种平衡。We present an approach in which developers/operators can specify what level of overhead they find acceptable for a given workload (e.g., 5%); our proposed tool ASAP then automatically instruments the program to maximize its security while staying within the specified &ldquo;overhead budget.&rdquo; Two insights make this approach effective: most overhead in existing tools is due to only a few &ldquo;hot&rdquo; checks, whereas the checks most useful to security are typically &ldquo;cold&rdquo; and cheap. We evaluate ASAP on programs from the Phoronix and SPEC benchmark suites. It can precisely select the best points in the security-performance spectrum. Moreover, we analyzed existing bugs and security vulnerabilities in RIPE, OpenSSL, and the Python interpreter, and found that the protection level offered by the ASAP approach is sufficient to protect against all of them.</p>

<p>（4）Understanding and Monitoring Embedded Web Scripts</p>

<p>Web浏览器经常使用各种第三方脚本，安全隐患自然而来。这篇文章介绍他们开发的一些工具，可以帮助站点管理员来理解、监控和限制嵌入到他们站点的第三方脚本的行为。关注Web安全的研究者可以学习使用下这篇文章的工具，看看是否能有很好的效果。</p>

<h3>Session 12: Android Security</h3>

<p>移动互联网应该是时下最热门的，移动安全自然也不例外，不过SP上居然最后一个session才讨论这一块，而且局限于安卓安全。一方面可以看到Android系统在移动市场中的地位，另一方面可以发现在移动安全这块的研究才刚刚起步。这里的论文都是关于移动Apps可能访问移动设备上的用户敏感信息的。</p>

<p>（1）Effective Real-time Android Application Auditing</p>

<p>这篇文章也有来自国内研究机构的作者，来自上海交大的Lu Gong（二作）。</p>

<p>移动Apps可以访问移动设备上的各种私人数据，如通讯录、短信等。这容易造成数据泄露，App审计是一个基本的程序分析任务，可以发现数据泄露的代码路径。目前，静态分析技术用的比较多，因为其可以精确找到整个程序中有问题的数据流。不过，静态分析也容易产生错误报警，需要手动确认；而且存在的静态分析方法可能需要数分钟或者甚至几个小时才能检查完一个App，这是很不实际的。为了克服这些限制，本文设计了AppAudit，结合静态分析和动态分析技术。They design AppAudit to use an efficient but over-estimating static API analysis first and then relies on a dynamic analysis to prune its false positives. Overall, AppAudit achieves a low false positive rate as the dynamic analysis only explores possible code paths during real execution. AppAudit also achieves short analysis time by combining an efficient static stage with a highly parallelizable dynamic stage.</p>

<p>（2）What the App is That? Deception and Countermeasures in the Android User Interface</p>

<p>用户只能通过视觉外观来识别一个App是存在安全风险的。这篇文章进行更加本质的分析和识别，帮助用户以免误信其它App。In this paper, we analyze in detail the many ways in which Android users can be confused into misidentifying an app, thus, for instance, being deceived into giving sensitive information to a malicious app. Our analysis of the Android platform APIs, assisted by an automated state-exploration tool, led us to identify and categorize a variety of attack vectors (some previously known, others novel, such as a non-escapable fullscreen overlay) that allow a malicious app to surreptitiously replace or mimic the GUI of other apps and mount phishing and click-jacking attacks.</p>

<p>（3）Leave Me Alone: App-level Protection Against Runtime Information Gathering on Android</p>

<p>Stealing of sensitive information from apps is always considered to be one of the most critical threats to Android security. Recent studies show that this can happen even to the apps without explicit implementation flaws, through exploiting some design weaknesses of the operating system, e.g., shared communication channels such as audio and Bluetooth, and side channels like CPU, memory, network-data usages, etc. In all these attacks, a malicious app needs to run side-by-side with the target app (the victim) to collect its runtime information. Examples include recording phone conversations from the phone app, gathering network-data usages of WebMD to infer the disease condition the user looks at, etc（攻击例子）. This runtime-information-gathering (RIG) threat is both realistic and serious, as demonstrated by prior research and our new findings, which reveal that the adversary monitoring daily operations of popular Android-based home security systems can easily figure out when the house is empty and the user is not looking at surveillance cameras, and even turn off the alarm delivered to the user&rsquo;s phone. To defend against this new category of attacks, we propose a novel technique that changes neither the operating system nor the target apps, and provides immediate protection as soon as an ordinary app (with only normal and dangerous permissions) is installed（本文提出的防止攻击的新技术）. This new approach, called App Guardian（称为App守卫）, thwarts a malicious app&rsquo;s runtime monitoring attempt by pausing all suspicious background processes when the target app (called principal) is running in the foreground, and resuming them after the app stops and its runtime environment is cleaned up. Our technique leverages a unique feature of Android, on which third-party apps running in the background are often considered to be disposable and can be stopped anytime with only a minor performance and utility implication. We further limit such an impact by only focusing on a small set of suspicious background apps, which are identified based upon their behaviors inferred from their side channels, such as thread names, CPU scheduling data and kernel time. App Guardian is also carefully designed to choose the right moments to start and end the protection procedure, and effectively protect itself against malicious apps. Our experimental studies show that this new technique defeated all known RIG attacks, ranging from phone taping to keylogging through various side channels. In the meantime, the inconvenience it introduces is found to be minimal, with negligible impacts on the utility of legitimate apps and the performance of the OS.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何在国际学术期刊上发表论文]]></title>
    <link href="http://secdr.github.io/2015/05/05/how-to-publish-in-top-journals/"/>
    <updated>2015-05-05T12:24:51-07:00</updated>
    <id>http://secdr.github.io/2015/05/05/how-to-publish-in-top-journals</id>
    <content type="html"><![CDATA[<p>[摘要]将论文都投在一流期刊上是风险很大的；将论文都寄到低质量的期刊也不是好的选择，一但论文被接受，你就会感到后悔。一个人的简历中应包括一些一流期刊的论文。发表的质量也是很重要的。</p>

<p>1.目的</p>

<p>决定一片论文是否可以发表的最重要因素是论文中所阐述思想的好坏。实际中，非实质性的因素，如论文的包装，也会成为论文是否发表的影响因素。</p>

<!--more-->


<p>1.1.为什么期刊的接受率这么低</p>

<p>提交给国际有影响的期刊论文，一般只有1/3的作者能够受到略微积极的反馈；其他则都为否定。如果有两个匿名评审人评审一篇论文，那么一篇平均质量的论文被两个评审人同时接受的可能性只有11%。计算机和激光打印的发展，导致论文数量迅速增加，一流期刊积存了大量的论文。</p>

<p>期刊的主编变得非常谨慎，他们宁愿拒绝一篇可能是高质量的论文，也不愿承担接受一篇低质量论文的风险。在国际学术期刊上发表论文，靠运气并不能成功，必须依靠实力，并有冒险的精神。在国际学术期刊的评审中，评审人的意见并不都是等同的，有名的评审人的意见份量更重要。因此，你应该了解哪一个评审人更加重要。当一篇论文被拒之后，总编更关注的是论文消极一面，而不是积极的一面。如果能消除论文中的缺点，那末再次提交成功的可能性就会提高。</p>

<p>1.2.为什么你的论文的接受率这样低</p>

<p>也许由于种族、性别、国籍或学历等原因，你受到歧视。例如，如果一所大学的期刊为自己的教师预留出一半的版面，那么，如果你是这所大学的教师，论文的接受率就会提高很多。</p>

<p>2.发表的一般策略</p>

<p>2.1.研究成果的组合要多样化</p>

<p>接受决定的平均等待时间是3年；拒绝决定的平均等待时间是6-8个月；在你学术生涯的起步阶段，生存比辉煌更重要；美国从教的前5-6年，如果每篇发表成果在评估时权重相同，那么，使你的成果组合多样化非常重要，应争取使研究的题目越多越好；如果在某一方面的发表有出色的表现，把研究兴趣转向其他方面之前，应加倍努力树立自己在这一方面的名声。</p>

<p>在一个非常窄的问题上发表篇论的文风险很大，就像把所有的鸡蛋放在一个篮子里一样。持续研究一个窄的问题而不能发表，是一个不详的兆头。</p>

<p>2.2.专注于一个或两个专业领域</p>

<p>通常，一个人选择的专业领域不应超过两个，研究的规模经济一般要求学者们将全部注意力放在一个领域里。在一个专业领域里，选择两到三个题目，勤奋耕耘，直至发表几篇论文。如果针对某一个题目，3年没有发表一篇论文，此时应该考虑更换题目。</p>

<p>2.3.从博士论文中产生出1至2篇论文</p>

<p>一篇博士论文，通常要投入了2年甚至更长的时间；努力从博士论文重要的章节中派生出几篇论文；这比从头开始写新的论文要来的容易的多；同导师合作，推出你的论文。</p>

<p>2.4.手中要有几篇论文供周转</p>

<p>如果一流期刊的接受率为15%，那么一个人手中应有7篇论文不断处在被评审状态，这样才能保证每年有一篇论文被锁定的期刊接受；如果想在任教后的前5年发表10篇论文，那么必须有约12篇论文要不断处在被评审状态；对于一个没有终身教职的人，应该有约6篇论文不断处在被评审状态。</p>

<p>2.5.几个好的观点不要放在一篇论文里</p>

<p>把两个好的观点分放在两篇论文中。不要把关于某一问题的所有观点都放在一篇论文里，保留一些给今后的论文。如果论文的长度超过15页，被接受的概率呈几何级数下降。如果将一个题目分解成两篇论文，一篇论文被接受的概率会超过一倍，接受的速度也会加快。</p>

<p>用x表示论文的长度， p表示论文被接受的概率，则：</p>

<p>P(x/2) = 2 p(x) + a， a>o. x&lt;15页</p>

<p>A包括的因素有：</p>

<p>主编喜欢短论文；</p>

<p>评审人发现数学错误的概率降低；</p>

<p>评审人错误理解论文内容的概率也降低.</p>

<p>2.6.向不同期刊投稿</p>

<p>将论文都投在一流期刊上是风险很大的；将论文都寄到低质量的期刊也不是好的选择，一但论文被接受，你就会感到后悔。一个人的简历中应包括一些一流期刊的论文。发表的质量也是很重要的。如果论文质量相同，将3篇论文投到3种不同的期刊要优于都投到一个期刊。</p>

<p>2.7.表述清楚</p>

<p>假设和结果要解释清楚；如果有许多假设，将它们放在一起，不要分放在段落中，也不要造成让评审人四处找符号含义的局面。第一次使用的符号要定义清楚，否则评审人会不满意，发表的可能性从而降低；论文结论中要清楚地表陈述论文对现有文献有哪些贡献。</p>

<p>2.8.经常浏览最新期刊</p>

<p>紧跟文献的当前变化(如使用EconLit)。利用关键词核实相同或类似的题目，，他人是否已经写过。不要重复他人已经做的工作，这可以节省许多时间。</p>

<p>订购一些所在领域的专业期刊，不要订购综合性期刊。综合性期刊不能最有效地提供你所在领域的信息来源，同你研究者兴趣直接相关的论文正变得越来越少。其他期刊可以利用图书馆，一旦一篇论文被接受，Social Science Research Network会刊登出相关的消息，这样可以了解到某一领域的最新发表。</p>

<p>2.9. 提交前在研讨会上宣读论文</p>

<p>在地区性、全国和国际研讨会上宣读自己的论文，也许可以获得非常有价值的反馈建议。是认识同行的一个极好机会。在自己所在的系里宣读论文效果不明显，除了一流的院系，大多数学系只有20甚至更少的教师，他们一般不熟悉你的研究，也缺少提出带有根本性建议的能力。</p>

<p>2.10. 不要将未发表的论文送给陌生人</p>

<p>如果这样做，也许可以暂时出名，但随后会付出代价；一些人可能剽窃你的观点，并先于你提交一篇类似的论文；在一个大家都彼此认识的圈子里，散发论文是可以的。</p>

<p>2.11. 越挫越勇</p>

<p>一般收到拒绝频率会超过接受，这是很自然的。脸皮要厚，学会作一个失败者。如果不能接受拒绝的打击，最好不要向期刊提交论文。一篇好的论文，至少可以在高质量的期刊有3次发表的机会。如果在一个月内，对一篇被拒绝的论文不做任何处理，你很可能会对它丧失兴趣，因此，要抓紧时间采取行动。</p>

<p>2.12. 认识100个所在领域发表最活跃的人</p>

<p>一个领域中，可能成为你的论文评审人的数量大约是100左右。拟定一份本领域最活跃的学者的名单，用5年的时间全部认识他们。每年至少两次在专业研讨会上宣读论文，或至少参加两次这样的研讨会。</p>

<p>本文节选自Kwan Choi所写的《How to Publish in Top Journals》</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[发表SCI或EI类英文文章的一些投稿经验]]></title>
    <link href="http://secdr.github.io/2015/05/04/experiment-with-submit-paper/"/>
    <updated>2015-05-04T12:07:44-07:00</updated>
    <id>http://secdr.github.io/2015/05/04/experiment-with-submit-paper</id>
    <content type="html"><![CDATA[<ol>
<li><p>首先一定要注意杂志的发表范围, 超出范围的千万别投,要不就是浪费时间;另外，每个杂志都有他们的具体格式要求，一定要按照他们的要求把论文写好，免得浪费时间，前些时候，我的一个同事向一个著名的英文杂志投稿，由于格式问题，人家过两个星期就退回来了，而且说了很多难听的话，说投稿前首先就应该看清楚他们的格式要求；</p></li>
<li><p>论文写作一定要言简意赅,特别是摘要,引言和结论部分,特别是摘要和结论不能重复,发现有很多论文这两部分没有差别, 个人认为, 摘要是引人入胜的&#8221;药引子&#8221;,要留悬念;而结论是你论文得出的有证据的东西,要简单明了(很多人写了一大堆,把推测的结果都写上,这种论文质量很差); 另外,很多人认为数据越多, 发表的可能性越大,但经过读一些论文, 发现很多人的论文很烂, 感觉就是数据的简单堆积,所以,论文的重点应该在观点上,保证一篇论文一个新观点,已经足够了.</p></li>
<li><p>投稿时,一定要找和你做研究内容相近领域的专家作评阅人,最好是国外的,不是说国内的不好,但就怕有人和你(或你老板)有过节,而且国内的很多所谓专家水平一般,且小心眼;</p></li>
</ol>


<!--more-->


<ol>
<li><p>cover letter要简单介绍你的工作的创新性,这样便于论文的快速发表, 当然也应该客气几句,让编辑感到心里舒服,主要是夸杂志好之类的话; 有人写coverletter，就是写上题目、然后说很荣幸投稿之类地话，也有人干脆把摘要全写上，这样个人认为不好，一定用两到三句话说明你论文“新”在哪，这个非常重要。</p></li>
<li><p>前些时候看到论坛上很多人说不能写信催编辑,个人认为没关系,必要催信能够让人重视你的论文,一定要让人感到,你的论文在这发不了,好多地方在等着发呢(但很多牛杂志,可不吃这套哟，人家不缺稿，嘿嘿). 当然写信的时候要客气,说一些快速发表对于学术讨论和促进工作等方面的重要性之类的话;</p></li>
<li><p>能写英文,就不投中文稿, 特别是不投中文杂志英文版, 好不容易憋了篇英文,还投到低水平的杂志,很不甘心; 最重要的是国内杂志要钱，而国外很多不要。自从国内某杂志告诉我他们之所以收我很高的版面费是为了他们的生存时，我发誓包括以后我的学生就不再投中文杂志了（如果要投，对做材料的人，个人认为金属学报不错，目前收费低）；</p></li>
<li><p>坚持就是胜利, 按照审稿人的建议好好改你的论文, 只要坚持投稿, 就一定能够被接收的, 如果论文被某杂志拒稿, 但不提倡降低杂志质量再投（应该根据审稿人意见修改后找合适的杂志）;有人认为低影响因子的杂志一定中的几率高, 我也这么认为,但一般低影响因子的杂志论文出稿比较慢!</p></li>
<li><p>英语不好没关系，是人都知道我们英语没英国和美国人地道，但只要能表达清楚你要表达的意思就好了，而且等审稿人提出来时，一定要从头到尾改一遍，你会发现，这样多次发论文后，你的英语写作水平在一天天提高，拿两年前的论文过来，自己都感觉写得很烂。哈哈。（有好几次，一些审稿人总说我英语不好，这肯定是母语为英语的审稿人，但回信中，我只能说俺英语不好，地球人都知道，但个人认为英语在科技论文里主要是能让人懂我们的思想就够了，而且我也没有太多的钱去让某些改论文的公司帮我做这些事）。</p></li>
</ol>


<p>再加两封催稿信!英语不好，但意思表达到了。</p>

<p>第一封,客气点!</p>

<p>Dear Prof. Dr. Editor ***</p>

<p>I submitted our latest work to your journal *** last November. I want to know the review process. If there are some reponses from the reviewers. Would you please tell me the results so that I can deal with it as early as possible? Please understand me that fast publication of our work is important for me.</p>

<p>I appreciate your contribution to the publication of the high quality papers.</p>

<p>Kind thanks to you for your care.</p>

<p>Best Regards
Yours sincerely</p>

<p>第二封, 很不客气了,他们刚开始说他们的审稿周期很短,但近四个月了,也没消息,所以打算投别的地方.</p>

<p>Dear Dr. Prof. ***</p>

<p>I am sorry to make you in trouble. It takes too long for reviewing my manuscript (<strong><em>) which was submitted to Journal &ldquo;</em></strong>&rdquo;. Generally, only about two months are necessary for the reviewing process on my usual submissions to other Journals. Hence, I decide to withdraw this submission.</p>

<p>I am sorry to make this decision. Please understand my condition because the rapid publication of my work is important for me and our group.</p>

<p>I hope that I have chance to get a rapid publication in this Journal in future.</p>

<p>Thank you for your attention and kind help.</p>

<p>Best Regards
Yours sincerely</p>

<p>from:<a href="http://chl033.woku.com/article/2721025.html">http://chl033.woku.com/article/2721025.html</a></p>

<p>1、对于我们工科的学生，要想写出论文来，必须有充足的数据及结论作为支撑，这里所说的数据不一定要很多，主要看你这些数据是否可以证明你论文中的结论。</p>

<p>2、在写论文时，不要把实验数据或图表往论文上面一放，只有描述而没有解释，这是编辑或审稿人最不想看到的文章，如果论文属于这一类，评论信中多半会说这样的论文为实验报告，其实编辑和审稿人他们有时也想知道你是如何做出来的，为什么，也在学习。</p>

<p>3、在做实验前，就要考虑写论文了，不要等到作了很多试验，到头来全是：无用！那就惨了。我的经验就是，在试验前，你要考虑为什么要做这试验（实验背景及目的），怎么来做（实验步骤），根据自己的经验猜测可能会得到什么样的结果（结论），通过这样考虑之后，一篇论文的结构基本上出来了，就等着看结果到底如何了，如果和自己猜想的一样，自然可以写论文按照预先设好的步骤。一旦结果不一样，那就要恭喜你了，因为其中有很多东西需要你更深入的研究，可能还会有更大地创新内容。</p>

<p>4、对于写文章，文笔也相当重要，有很好的数据结论但是表达不清楚也不行，应为编辑和审稿人必须为他们的杂志前途着想，他们想让更多的人来读他们的杂志从而提高影响力，所以表达必须很清楚，能够让专业人士和相关学科的人都能够看明白你的论文意思。如果你的文笔不是很好，那就先看一看和你论文类似的文章，档次越高越好，看看别人如何表达的，相似的地方可以模仿。</p>

<p>5、在论文经过自己几次修改后，放他一两天，再回过头来看看，如果自己觉得没有问题，那就给自己课题组有经验的老师或同学看看，看他们给你提出的意见（自己要判断是否可取了）。</p>

<p>6、选择期刊很重要，要不然你投出去后，好消息的就几天退回，怀消息就是几个月退回说不符合杂志范围。选择期刊要根据自己论文的内容，是否和期刊的作者指南相符，此时你最好选者几个不同档次的期刊，从高到低排列，预备被退稿。选择好期刊后，严格按照期刊的投稿要求对论文进行排版，否则你的论文会被编辑退回（这样的论文不在少数），然后大胆地投出去，不管它中不中。</p>

<p>7、等待，特别是第一篇，等待是一个难熬的日子，总是希望投稿后很快就能够收到消息，我曾经也经历过，这也是一个成长过程。</p>

<p>8、收到消息有三种情况，一、接收，恭喜！二、拒绝，不要气馁，你可以认为编辑或审稿人不识货，当然要认真看拒绝信，看编辑或审稿人给你的评论，这就是你论文向能够发表前进了一步（一定要坚持，成为“拒无霸”就差不多了），修改后投向预先选好的档次低一点的杂志，命中率就提高了。三、修改后再看，这就是一种无定性条件，这种情况一定要认真对待，认真修改，有条件叫有经验的老师帮助。</p>

<p>9、如果你的论文曾经被一个期刊发表过，接下来所作的工作继续投向这个期刊，命中率就大多了。
我写出来我的经验，仅供大家参考，结合自己的情况进行处理。
1. 对于影响因子。有的影响因子（IF）很高，50／60.比《Science》和《Nature》的还要高。可能有一下原因：
1）排名靠前的，一般都是综述类期刊被引用率当然高。多为一些学会的年度报告什么的，大多是一些综述性文章，一年也就一期，一期也就几十篇
2）“综合类”的排名一般比“专业类”的高。
3）有些“不要钱”的比要钱的高，像《Science》和《Nature》上的文章一般30美元／一篇。而很多其他国家、政府和其他机构给于经济支持的都不要钱。但并不是说要钱的都不是好文章。</p>

<ol>
<li><p>如何选择期刊。是不是只看影响因子高的？
个人认为肯定不是，上面说了。“综合类”的一般比“专业类”的IF高。所以，即使你投的专业类的IF没有综合的高，但是这个综合类的杂志在“业内”人士心中比较高。所以可以选择你所做领域的“权威级”刊物。
发文章的目的是为了能有更多的人可以看到你的工作，所有一定要发到跟你的研究方向最吻合的杂志。</p></li>
<li><p>一般美国的杂志对语言要求最低，文风很自由.，你只要没有什么太大的语法错误，一般审稿人都不会说什么．对语言要求最苛刻的就是英国德国</p></li>
<li><p>很多好杂志是不要版面费的，就算要版面费，好像学校有规定可以报销，所以大家可以放心大胆的投。不要因为版面费的问题而顾虑。并不说要版面费的都是差的杂志，但有的可以申请减免。</p></li>
<li><p>一定要选对杂志！每个杂志都要他的侧重点和内容要求。比如：有的相似的两种杂志，有的侧重“理论”像美国的《PHYTOPATHOLOGY》，而有的侧重于“应用”和其他方面。如《PLANT DIS》.
   其次还有格式，每个杂志都它自己的格式（包括图表什么样，图片什么样），要看清楚投稿须知。</p></li>
<li><p>一些误区：
a）是不是国外的杂志都是SCI，这点肯定不是，有很多人见到一篇英文的文章就以为是SCI，还有写杂志的中文版是被SCI收录的。有人把《Science》杂志认为是SCI。有人拿本重大学报上的问我影响因子是多少？我真的无法回答。好像我国某个部门好像也在给个杂志算什么影响因子，都是时候把我都搞晕了。好像各个学报在国内是有个什么影响因子。对于这个我也不是很清楚。</p></li>
</ol>


<p>  b）SCI是不是高不可攀。这个各个专业、各个学科差距确实很大，有的就非常好发这个没办法。只怪我们选错行了。就我这个方向来说没有那么难。</p>

<p>一般高水平的文章需要有些创新。最好是方法学的创新，但是方法学的创新没有那么容易。一般可以改进一下。其次，中国是一个大国，别人要发文章一般要看国内外研究现状，也需要中国的研究现状，就需要我们的论文发出去。所以，如果你没法进行方法学的创新那就在实验材料上占优势，中国这么大的地方，很可能别人收集的实验材料没有你齐全，所以你再材料上就有了优势，就做了别人没有做过的工作，就极有可能发高水平的论文。</p>

<p>再次.写论文其实就相当讲故事，你如何讲一个平淡无奇的故事讲的趣味昂然．一定要把自己的卖点突出来。所以大家如果觉得自己的工作做的不错都可以试试往好的杂志投。</p>

<p>7 大胆投稿的好处
   不管你写的好不好（当然不能太差，错误一大堆），一定要大胆的投稿。老外审稿都是非常认真的，一般你打一些小的拼写错位都会帮你指出来。需要补做那些实验，还有很多好的建议。他们会一一给你指出来。所以即使你的论文没有被接收，也会得到大量的修改和建议。这样你的就可以接着补做实验，而且文章也变的更好了。说不定论文就上了一个新的层次，可以投更高水平的杂志。
   当然，有很多人不愿意补做实验，或者做实验不划算，赶时间毕业，混文凭&hellip;&hellip;就把自己的论文降一个档次。投在了较低的刊物上。感觉不可取。</p>

<p>8 如何安排写论文的时间。
   一般SCI从提交稿件到审结束大概要1～2个月，所以一般大多数人都是做完实验之后再写的，而我们刚开始写英文的论文时很慢，一般要一两个月，这样周期就长了。所以我们可以一般做实验一般写论文。因为论文有的部分是固定的，一旦你的实验技术路线出来了你的材料与方法，前面的引言中的国外内外研究现状、背景，所用的方法部分，都可以写了，然后出来一个什么结果就可以像“填空“一样往里面加，最后讨论，摘要，编排格式。
    『注意』：论文的讨论部分很重要，不要说空话。平时做实验室就要留心，多想想出现的现象，问题应该怎么解释。</p>

<p>9 参考文献。
   如果你参考的文章很多，到时候可能找你的论文中引用的参考文献可能都要一个月，而又不能胡乱写，老外是很看重这个的，他通常会抽取一篇你的参考文献，看看你是不是引用的上面的，有没有引用错误等等。所以在你读文先的时候，可以做读书笔记，把好的，你认为有用的部分摘抄下来或者用电脑粘贴复制下来，注好是那篇文章、那些作者。这样就会节约很多时间。</p>

<p>『注意』：不要乱写参考文献，只要引用的都要要注明，没有引用的不要往里面写。把有价值的东西做好“读书笔记”，节约写论文中编排参考文献的时间。</p>

<p>『注意』：a 参考文献最好有1／3甚至1／2以上是近5年内的文献，这样的论文会让人感觉有水平些。b 其次，最好找一手的文献，不要那种二手的文献。</p>

<p>10.如何应对和回答审稿人提出的问题。
   对于审稿人提出的问题，要认真回答，你可以不同意他的看法，但要注意措辞，做到“不卑不亢”！就行，把你的观点论据陈述好。
a.所有问题必须逐条回答。
b.尽量满足意见中需要补充的实验。
c.满足不了的也不要回避，说明不能做的合理理由。
d.审稿人推荐的文献一定要引用，并讨论透彻。</p>

<p>再就是格式上要些清楚：
1.           2.
Q:&hellip;&hellip;    Q:&hellip;&hellip;
A:&hellip;&hellip;    A:&hellip;&hellip;</p>

<p>要一目了然，让评审看的舒服。不要吧所有的问题混在一块回答。自己看的都烦，不知道回答的是哪个。</p>

<p>下面几楼还有本人收集的一些资料，大家共享下。（由于来源比较杂，各个网络没法列出出处，见谅）</p>

<p>*补充：</p>

<ol>
<li><p>对于选杂志
对于选杂志确实比较困难，首先要选“对口的杂志”，对于影响因子暂不提。杂志从接受手稿到发表的周期很重要。很多你做的工作别人也在同时进行着。很可能你的工作先完成的，而你投的杂志周期很长，别人后完成的，但是投的杂志周期很短，可能会先于你的发表。这就很郁闷的。所以选杂志要注意周期。至于怎么选确实很困难。
首先：你可以看看发表的论文从接收到正式出版要多少时间。  其次：那就是问问投过那些杂志的人。可以问下和你做相似实验，并且投过你感兴趣的那些杂志的师兄师姐们。也可以在网上求助和搜集信息。  总之，选择杂志是很很复杂的事情，要综合考虑。</p></li>
<li><p>写论文时，首先：不要一味的贬低别人的论文的价值，不要动不动就拿自己的“优点”与他人的“缺点”比。要对别人的工作做“客观的评价”。
其次：忌讳用最高级，什么最先进、原创&hellip;.除非你实实在在的、从根本上是原创的。
from:<a href="http://chl033.woku.com/article/2718239.html">http://chl033.woku.com/article/2718239.html</a>
如果你希望你的会议论文被EI收录，请参照以下经验：
一、会议论文出版社：会议EI收录其实与主办方关系很小，甚至没有任何关系，第一要素主要处决于论文会议集的出版单位，根据经验，例举全球著名出版社如下：
1、德国斯普林格出版社（SPRINGER）：100%EI收录
2、美国机械工程学会出版社（ASME）：100%EI收录
3、美国土木工程学会出版社（ASCE）：100%EI收录
4、美国电子电气工程计算机学会出版社（IEEE CS）：99%EI收录
5、美国电子电气工程出版社（IEEE）：90%EI收录
6、英国工程技术出版社（IET）：90%EI收录
7、法国Atlantis Press：70%
二、在确定第一要素后，请考察会议主席的诚信度
1、国际一级学会发起：如IFAC、IEEE等。如果IEEE发起的会议IEEE要占51%的注册费，因此，该类会议注册费均在500美元以上。请注意中国2007年只有一个是IEEE发起的，即ICMA2007，其他均不是，2008年目前中国没有一个会议是IEEE发起。
2、国家一级学会发起：如中国计算机学会、中国自动化学会、中国通讯学会等，如WCICA、CCC等
3、各大学校级领导：中国大学校级领导作为主席办国际会议具有中国特色（如ICTE等）。
4、国际一级学会技术支持：如IEEE CS、IEEE、IET、ASME、ASCE等。如ICIC、ICNC）
5、其他学者
三、掌握以上两点后，请注意你的论文格式与英文摘要的书写，
四、EI自然OK！
1、我仅仅讨论的是EI收录的技巧，不是讨论会议的水平。会议仅仅是一个交流的平台，不像期刊，每个都有一个影响因子。
2、ICMA2007确实是2007年唯一在中国由IEEE发起的会议。另外，它不是由IEEE CS出版，而是由IEEE出版，区别于其他会议有三点（1）会议常规注费费高500美元，因IEEE要占大头。（2）设有IEEE会员注册费，这是IEEE会员的权利，因为他们每年交纳500-1000元的会费。（3）EI收录快，两个月全部搞定，这是组织方与IEEE的约定。
3、德国斯普林格出版社确实是全球最高水平的出版社，尽管LNCS被SCI淘汰，但在国外，还是得到同行的认可。LNCS仍然被EI和ISTP双收录，收录的时间处决于出版商论文集递交的时间与EI对论文进行加工时间。由于LNCS出版量太大，且这两年大部分集中在东亚，由于担心被EI也淘汰，所以在大量减少出版量的同时，现在开始延迟递交，获取一个每年的EI收录的平衡，不至于全部集中有2006和2007年，另外他们也希望在2009年重返SCI。所以LNCS出版的论文EI收录肯定没问题，只是时间问题。另外，国内知名大学学报均想向斯普林格出版社靠拢，如武汉大学学报英文版和中南大学英文版均改由斯普林格出版，已从EI中国收录期刊中消失，不过他们已成功被SCI收录。这也从侧面说明了斯普林格出版社的影响力。
3、如果你只是希望论文能被EI，建议你不要投欧美国家的会议，因为他们对EI检索根本不重视，因此，有些会开完后论文集根本不送EI总部，或者拖得很迟。作者曾参加23次国际会议，其中的21次被SCI/EI/ISTP收录，唯一的两次没有被收录的恰恰是2004年美国举办的两个知名国际会议，所以，如果你的目的是希望论文被收录，没必要舍近求远，况且欧美国家的会议注册费在500-800美元间，特贵。
4、英国的IET出版的能EI，一般9个月左右，我06年曾参加了一次国际会议，只发表了论文摘要，居然也被收录了，成了我最短的EI收录论文，仅仅约500字。
5、上面只是我的经验，当然你们无法考证，我发表的5篇斯普林格出版社全部EI、ISTP收录，其中3篇SCI收录。发表在IEEE CS上的6篇全部EI、ISTP收录，发表在IEEE上的5篇中全部ISTP收录，4篇EI收录，一篇没被EI收录是2003年的ICNNSP。发表在IET上的两篇全部EI、ISTP收录。发表在ASCE上的两篇全部EI、ISTP收录。我同学发表在ASME上的3篇全部EI、ISTP收录。
6、国际一级学会发起的会议诚信度应该不需要说明。
7、国家一级学会成员主席一般都是院士，他们的诚信度也应该不需要说明。
8、各大学校级领导做主席，由于他们的特殊身份，因此，发布的会议信息可靠信更高。
from:<a href="http://chl033.woku.com/article/2816120.html">http://chl033.woku.com/article/2816120.html</a>
文献检索技巧
文献检索是非常麻烦的事情，一般都是通过各种数据库进行检索，但由于购买的电子数据库基本都只有1997年以后的文献，文献量比较少，而且很多领域属于落后于国外20-30年的研究，一般很难查到，即使能查到出处，但无原文。文献查找是个费时费力的事情，需要细心和耐心，反复查找，以下谈谈个人关于如何利用网络进行文献查找的一些经验。</p></li>
</ol>


<p>① 搜索引擎的高级功能
搜索引擎主要www.google.com和scholar.google.com，www.baidu.com则仅在检索中文时稍好点，英文很差，用处不大。我们常用的google侧重于网页的检索，Scholar则主要针对学术类文献进行检索，格式主要是pdf，对于论文的引用也会显示，对于知道文献名和作者的情况比较容易直接找到pdf文档，一般这两个搜索引擎要联合使用。
Google的高级检索功能中有几个常用的功能：</p>

<p>（1）锁定关键词检索：使用双引号如”停车”，则所有检索结果均包含双引号中的内容，以减少检索结果量；</p>

<p>（2）文件类型检索：文件类型主要是.pdf和.doc文档，国外文献大部分以pdf格式发布，使用格式限制可以排除很多不必要的检索结果，如输入：停车 filetype:pdf，当然其它google识别的格式都可使用；</p>

<p>（3）指定网址检索：如果发现某个网站有需要的文献，则可以直接指定到该网站检索，以获得需要的资料，如输入：停车 site:www.parknride.com。
Google的详细功能请参照google的高级检索，百度在使用上相同。</p>

<p>② 关键词的使用
检索结果如何，和关键词的使用直接相关，所以，首先要弄清楚在英文中关键词有哪几种表达方式，分别进行检索，而对于文献综述类，可以使用：review、overview、literature review、history、development、trend等和关键词一起检索。</p>

<p>关键词的检索并不是一次就能确定下来的，刚开始选用几个看能否找到，如果找到一些，先初步看看那些文献，对内容有了更深一些的认识后同时也对检索关键词增加了了解，实际上是不断调整检索关键词的过程</p>

<p>③ 参考文献的使用
检索到一些文章后，先要看看文献后的参考文献，国外文献一般都会很详细的列出，可根据参考文献相应的进行有目的的检索，如找到指定数据库的期刊，或者检索作者，作者的个人主页一般提供作者本人发表文献的下载（最好的资源），有些还提供作者的E-mal，可直接写信给作者，一般对方都会提供。
另外，利用google的强大功能，对论文题名、期刊和作者进行检索，期刊的检索经常能发现该期刊被那个数据库收录，则可直接到相应的数据库找到，检索作者则最好加关键词、年等信息以缩小检索范围，而且不要用缩写，会忽略很多信息。
如果找到某个期刊历年的电子数据库，虽然网站有自己的检索功能，但最好不要检索之后其它就放弃了，实际上很多文献不一定检索得到，需要有耐心的一期一期的去看（当然实际上这个工作量并不大，国外的期刊一般每期也就10篇左右），但如果错过了需要的文献则损失大了。</p>

<p>④ 网站回溯
一般找到某个网站有需要的资料后，不要把那篇下下来就关了，通常还有很多资源呢。一种是回到该文献的上层目录，即将文献名删除，保留反斜杠回车即可，如：<a href="http://www.parknride/com/documents/prdemand.pdf%EF%BC%8C%E5%88%99%E5%BA%94%E8%AF%A5%E5%86%8D%E5%9B%9E%E6%BA%AF%E5%88%B0%E4%B8%8A%E5%B1%82%E7%9B%AE%E5%BD%95%EF%BC%9Ahttp://www.parknride/com/documents/%EF%BC%8C%E6%9C%89%E4%BA%9B%E7%BD%91%E7%AB%99%E6%B2%A1%E6%9C%89%E8%AE%BE%E9%99%90%E5%88%B6%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E5%BE%88%E5%A4%9A%E7%9B%B8%E5%85%B3%E6%96%87%E7%8C%AE%EF%BC%8C%E6%88%96%E8%80%85%E4%BC%9A%E6%89%BE%E5%88%B0%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E8%BF%9E%E6%8E%A5%EF%BC%8C%E6%9C%89%E5%BF%85%E8%A6%81%E5%8F%AF%E4%BB%A5%E5%86%8D%E5%BE%80%E4%B8%8A%E5%B1%82%E8%B5%B0%EF%BC%8C%E4%B8%80%E8%88%AC%E9%83%BD%E4%BC%9A%E6%9C%89%E6%94%B6%E8%8E%B7%E3%80%82">http://www.parknride/com/documents/prdemand.pdf%EF%BC%8C%E5%88%99%E5%BA%94%E8%AF%A5%E5%86%8D%E5%9B%9E%E6%BA%AF%E5%88%B0%E4%B8%8A%E5%B1%82%E7%9B%AE%E5%BD%95%EF%BC%9Ahttp://www.parknride/com/documents/%EF%BC%8C%E6%9C%89%E4%BA%9B%E7%BD%91%E7%AB%99%E6%B2%A1%E6%9C%89%E8%AE%BE%E9%99%90%E5%88%B6%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E5%BE%88%E5%A4%9A%E7%9B%B8%E5%85%B3%E6%96%87%E7%8C%AE%EF%BC%8C%E6%88%96%E8%80%85%E4%BC%9A%E6%89%BE%E5%88%B0%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E8%BF%9E%E6%8E%A5%EF%BC%8C%E6%9C%89%E5%BF%85%E8%A6%81%E5%8F%AF%E4%BB%A5%E5%86%8D%E5%BE%80%E4%B8%8A%E5%B1%82%E8%B5%B0%EF%BC%8C%E4%B8%80%E8%88%AC%E9%83%BD%E4%BC%9A%E6%9C%89%E6%94%B6%E8%8E%B7%E3%80%82</a>
还有一种就是很多图书类使用章节编号的，而且使用上面的方法也看不到，则可根据章节顺序编号用支持断点续传的下载软件直接进行下载，如：
<a href="http://www.parknride/com/documents/ch01.pdf">http://www.parknride/com/documents/ch01.pdf</a>
则可改成<a href="http://www.parknride/com/documents/ch02.pdf%E7%AD%89%EF%BC%8C%E7%9B%B4%E5%88%B0%E4%B8%8D%E8%83%BD%E4%B8%8B%E4%B8%BA%E6%AD%A2%EF%BC%8C%E5%B0%81%E9%9D%A2%E7%94%A8cover%EF%BC%8C%E7%9B%AE%E5%BD%95contents%EF%BC%8C%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AEreference%E6%88%96bibliography%E3%80%82">http://www.parknride/com/documents/ch02.pdf%E7%AD%89%EF%BC%8C%E7%9B%B4%E5%88%B0%E4%B8%8D%E8%83%BD%E4%B8%8B%E4%B8%BA%E6%AD%A2%EF%BC%8C%E5%B0%81%E9%9D%A2%E7%94%A8cover%EF%BC%8C%E7%9B%AE%E5%BD%95contents%EF%BC%8C%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AEreference%E6%88%96bibliography%E3%80%82</a></p>

<p>⑤ 通过bbs资源查找相关资料和资源
专业bbs上有很多资源是可以下载的，需要有耐心去找，但国内很多bbs提供下载的资源都是有积分限制的，找到有用的资料后，即可利用搜索引擎的功能直接找。</p>

<p>⑥ 使用代理
国外各大学都有自己的电子数据库，有些是免费，对于有限制的则只好使用代理，一般这种代理需要到专业相关的bbs才可以找到，国内比较好的文献查询资源bbs有：网上读书园地www.readfree.ne和零点花园<a href="http://ldbbs.512j.com/bbs/%EF%BC%8C%E5%8F%A6%E5%A4%96%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86%E6%9C%80%E5%A5%BD%E7%94%A8Myie%E6%AF%94%E8%BE%83%E6%96%B9%E4%BE%BF%E3%80%82">http://ldbbs.512j.com/bbs/%EF%BC%8C%E5%8F%A6%E5%A4%96%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86%E6%9C%80%E5%A5%BD%E7%94%A8Myie%E6%AF%94%E8%BE%83%E6%96%B9%E4%BE%BF%E3%80%82</a>
from:<a href="http://chl033.woku.com/article/2840905.html">http://chl033.woku.com/article/2840905.html</a>
1.? SCI/EI/ISTP/一级期刊的基本知识;
2.? 如何利用数据库和查找文献；
3.? 如何寻找领域前沿；
4.? 如何撰写高水平论文和投稿；
5.? 把握数量和质量的平衡。
1.1 SCI
1.1.1  SCI索引
    SCI（科学引文索引，英文全称Science Citation Index）是美国科学情报研究所（Institute for Scientific Information，简称ISI）拥有的世界著名的期刊文献检索工具。
SCI是SCI的光盘核心库；而SCI-Expanded (简称SCIE)是SCI的扩展库。国内高校在统计论文索引情况时一般对SCI和SCIE都认可为SCI索引。</p>

<p>1.1.2 ISTP会议录索引
    ISI Proceedings (ISTP - Index to Scientific &amp; Technical Proceedings)，ISTP科学技术会议录索引是美国ISI编辑出版的查阅各种会议录的网络数据库。目前国内很多高校也在统计ISTP索引的数量。
? 一般而言SCI索引的会议必然会被ISTP同时索引，但是反之不然。</p>

<p>1.1.3  影响因子IF
? 期刊引用报告JCR(Jorunal Citation Reports)是ISI对其SCI索引的期刊进行的参数化评价，影响因子IF(Impact Factor) 是其中一项最有代表性的参数。
? IF是当年其它SCI论文引用该刊此前2年所发表文章次数除以该刊前2中发表的文章数目，其值越大，说明该期刊越重要。
影响因子IF举例
? 2004年计算机软件工程大类方面的76种期刊中，影响因子最大的是JOURNAL OF MACHINE LEARNING RESEARCH(5.952),最小的是COMPUTER GRAPHICS WORLD为0,国内最高水平的JOURNAL OF COMPUTER SCIENCE&amp;TECHNOLOGY为0.28，2004年LNCS的影响因子为0.513
? 需要强调单篇文章的引用次数问题，自引与他引的问题。</p>

<p>1.1.4  SCI收录期刊分区
   随SCI在国内的普遍使用，高影响因子期刊的论文刊发量逐渐成为学术评价的关注重点。但是一个刊物的影响引子每年有变动，各个领域刊物影响引子也不具可比性。因此，中科院根据影响因子大小，按学科对SCI收录期刊进行年度分区，水平从高到低分为1234四个区。这样对一个刊物水平高低的认定维持在相对稳定的定义上。不论什么领域，只要论文发表的刊物在同一分区上，就可以认为这些论文水平相当。2004年版SCI分区目录<a href="http://10.11.32.135/cglw/scie_2004FQ.asp">http://10.11.32.135/cglw/scie_2004FQ.asp</a></p>

<p>1.1.5  会议是否SCI索引
? 最直接的方法是看会议主页上的说明。如果说明中没有明确肯定，则可以写信给会议的组织方咨询，一般老外答复都是比较含蓄的（例如我师兄的ICCS经历），而国内的答复就会非常直接（其实国内会议如果是SCI的都会在主页上隆重注明的）。
? 另外还可以直接查询看这个会议前几年是否都是SCI索引，但是有的会议会隔年索引，所以这个办法不是非常可靠。使用这个办法还要注意SCI索引中会议的缩写格式，以免漏查。
1.1.6  LNCS会议被SCI收录
? 目前计算机领域的LNCS系列会议基本会被SCI收录。</p>

<p>1.1.7?最后要说明的是索引周期，即从论文出版到被SCI索引需要一段时间，会议论文一般大概是三个月左右。</p>

<p>1.2 EI索引
1.2.1? 美国《工程索引》 EI（Engineering Index），由美国工程信息公司（Engineering Information Inc.）创办，主要收录工程技术期刊文献和会议文献的大型检索系统。</p>

<p>1.2.2 EI-Compendex和Page One
? Ei Compendex标引文摘收录论文的题录、摘要、主题词和分类号，进行深加工；有没有主题词和分类号是判断论文是否被Ei正式收录的唯一标志。
? 据说2006年起EI取消光盘版，只有EI Village2，即 Compendex和Page One合并。
Ei PageOne
? Ei PageOne题录不列入文摘，没有主题词和分类号，不进行深加工。有的PageOne也带有摘要，但没有主题词和分类号。所以带有文摘不一定算做正式进入Ei。
? 请注意学校里面说的EI一般是指前者！在数据库中检索时，要主要看清楚检索结果中的检索序列号是否11位，并且数据库源是否Compendex。</p>

<p>1.2.3 SCI和EI会议
? 目前学校更认可SCI索引，虽然很多很高级别的会议也只被EI收而不被SCI收。从这一点来说，其实文章最好先投SCI的会议，以免“浪费”。
? 对期刊而言，SCI有一个评价标准例如影响因子等，而EI则不然，所以这对EI也是一个不太好的因素。
索引的周期
? 对会议来说，SCI的索引周期前面说过一般是三个月左右，而EI就没有固定规律，从一两个月到将近一年的都曾经碰到过。</p>

<p>1.2.4 确定会议是否EI索引
? 对一个会议来说，是否确定EI收很难，即使是会议的主办方，一般也不可能百分百确定本届全部几册都会被索引（依据：我师兄投CE2004时电话咨询的过程）。但是一般来说，如果一个会连续几届都被EI全收，那么这届就不会有问题。另外，有些会议会在海报上注明自己是会被EI收的，这种也是可以投的。</p>

<p>比较有用的LN系列
? 德国Springer出版社的LNCS（Lecture Notes in Computer Science）和荷兰的Brill Academic出版社的LSCCS (Lecture Series on Computer and Computational Sciences)都确定被SCI全收。
? 注意：同一个出版社的其他会议论文集系列不一定会被SCI收！例如Springer的Lecture Notes in Computational Intelligence。
推荐的一些国际会议
? 周围同学和一些老师公认的评价原则（重要性依次递减）：针对性、届数、录用篇数、录用率、特邀嘉宾的影响力。
? 网络上大家公认新加坡南洋理工的一个帖子，网址如下：
? <a href="http://www.ntu.edu.sg/home/assourav/crank.htm">http://www.ntu.edu.sg/home/assourav/crank.htm</a>
? 请注意这些会议级别和SCI、EI并无直接关系，也就是说，顶级不见得SCI或者EI。
? Rank 1的文章1篇，胜过普通会议10篇。
AREA: System Technology
SIGCOMM: ACM Conf on Comm Architectures, Protocols &amp; Apps
INFOCOM: Annual Joint Conf IEEE Comp &amp; Comm Soc
SOSP: ACM SIGOPS Symp on OS Principles
SOSDI: Usenix Symp on OS Design and Implementation
CCS: ACM Conf on Comp and Communications Security
IEEE Symposium on Security and Privacy
MOBICOM: ACM Intl Conf on Mobile Computing and Networking
USENIX Conf on Internet Tech and Sys
ICNP: Intl Conf on Network Protocols
以上都是本人关注的网络、系统和安全的顶级会议，许多论文后来都被推荐到IEEE 或ACM Transactions系列。
关于LNCS
? 如果只是认准SCI的话，推荐，相关的会议列表可在其主页上下载，一般比较完整详细，但也有计划外指标（这几年国内主办了不少）。
? 如果感觉你自己的文章很有感觉，或者觉得你的idea过于新奇，不妨投投顶级会议看看最权威的评价，对于你的研究将会有莫大的帮助。
? 按照前几届师兄的提法，不要投业内知名的垃圾会议如ICMLC和SMC，LNCS也有此倾向。</p>

<p>中文期刊级别
? 一级与A类，一级要比A类的范围小些。一级其实是校人事处定的，估计最初是定给学校的教职员工的；而A类是明确定给研究生教育的，所以从两者的选取原则上有一定差别。
? 请注意，这里列出的一级是某高校的一级，各个学校和单位的目录可能会有所差别
本学科一级名单
? 原有的：计算机科学与技术学报(英文版)、电子学报(中、英文版)、计算机学报(中、英文版)、软件学报、计算机研究与发展、自动化学报、系统工程理论与实践(中、英文版)、模式识别与人工智能、计算机辅助设计与图形学学报、中国图象图形学报。
? 去年学校新增加的：计算机集成制造系统、控制与决策。
其它相关学科一级名单
? 科学通报(中、英文版)、中国科学(A-E辑)(中、英文版)、制理论与应用、通信学报、电子与信息学报等。具体目录可参考学校人事处文件。</p>

<p>2 如何使用文献数据库
? IEL:即IEE和IEEE，最具知名度和影响力；
? Elsevier Science Direct On Site (SDOS)：荷兰的一个出版集团，也极其影响力；
? ACM Digital Library：ACM的所有文献；
? Lecture Notes in Computer Science：即Springer公司的LNCS系列会议，虽是SCI但水平不高，作为文献价值不大。
? CNKI：清华的中国期刊网，能全文检索。</p>

<p>SCI数据库的使用
? ISI Web of Knowledge：即SCI检索库；
? 熟练使用SCI数据库非常有用，请务必掌握；
? 除查找被收录的文献外，还可以使用JCR;</p>

<p>JCR和影响因子
? Journal Citation Report,包括各类期刊的影响因子。
? 建议找到一个学科，按影响因子IF排序，一般来说，IF高的难度大，低的难度小，不过太低的，如&lt;0.1比较危险，可能被淘汰。
? 注意IF可以通过计算得到，国内有些期刊如《计算机学报》、《计算机研究与发展》等得出自己的IF，但我们所谈论的是SCI期刊间的引用，不可同日而语。</p>

<p>利用GOOGLE
? 其实，从某种意义上讲，GOOGLE也很有效。直接输入全部或部分文献名，作者名等均可；
? 我来浙大前，在自己这个方向搜集了大约200篇文献，95％从因特网上获取；
? 无法从因特网上直接获取的文献，往往被引用率也不高，因为别人难以得到。
? 建议至少读500篇外文文献，其中100篇精读。</p>

<p>3.1 如何寻找领域前沿
  确定方向，读一些国内一级或IEEE Magazine的综述;
  熟悉本领域最具影响的国际期刊（IEEE Transactions）和顶级会议(Rank 1)；
  在最近3年的期刊或论文集中寻找自己感兴趣方向的文章5篇左右;
  认真反复读懂（可能需要较长时间）；</p>

<p>3.2 如何寻找领域前沿
  跟踪国际会议，把握前沿脉搏；（Hotnets）
  熟悉领域大牛，争取和他们建立通信，定期访问他们的主页，了解最新动向；（我的体会）；</p>

<p>4.1 如何撰写高水平论文
  话题要新，紧跟前沿；
  文献要新、丰富、高水平；投国外一般不引用国内期刊，投国内则必须；
  最好有数学公式，体现理论深度；
  试验环境和结果要介绍清楚；
  性能最好和前人方案比较，有说服力；
  投国外多用图表，投国内多用定义。</p>

<p>4.2 如何投稿
 找到网站，国外一般可以电子投稿；国内则一般电子和书面文档均需要；
 国外无需审稿费，国内期刊要审稿费，一般100-200元，会议一般不要；
 发表费用，国外期刊基本不用，国内一级一般>1000元，国际会议一般2000－4000，学生注册可以便宜些。
 投稿后，隔1、2个月可以催一下。</p>

<p> 如何投稿
 不论是否要求，建议另起一页，写清所有作者的学校、身份、简历和研究方向；
 如投中文一级期刊，不妨写一份简单的说明，如文章成果的一些解释等，言词尽量客气。
 如果投会议，可以自己选择一些会议并设定时间表，投A如被拒改B,接着CDE等，时间安排好一年至少可以投6-8轮。
 和老板沟通投稿事宜
 有些老板希望发高水平国际期刊或顶级会议；
 有些老板可能不在意，只要SCI/EI就行；
 无论如何，投稿前务必和老板沟通一下，避免不必要的麻烦。
 把握数量和质量的平衡
 清楚老板对自己的要求；
 先易后难，循序渐进。先发1－2篇会议，再1－2篇国内期刊，最后1－2篇国际高水平期刊或顶级会议。
 多发文章：损失太多经费、一稿多投道德风险、浪费宝贵的时间和精力。
 注意事项：
 不要一稿多投，但尚无明确定义，一中一英？一个会议一个期刊？
 不要伪造数据，胡编乱造。
 如果今后想在学术上继续发展，更要注意文章质量而非数量。（SCI删除的例子）。
from:<a href="http://chl033.woku.com/article/2893317.html">http://chl033.woku.com/article/2893317.html</a></p>

<p>计算机学术期刊排名：Computer Science Journal Rankings
AREA: Databases</p>

<p>  Premium:
Information Systems
ACM Trans on Database Systems
IEEE Trans on Knowledge &amp; Data Engineering
VLDB Intl Journal
ACM Trans on Information Systems
Jnl of Intell. Info Systems: Integrating AI and DB Tech</p>

<p>Leading:</p>

<p>Distributed and Parallel Databases
Data &amp; Knowledge Engineering
Jnl of Systems Integration
Jnl. of Data Mining &amp; Knowledge Discovery
Intl Jnl of Computer &amp; Information Sciences
Intl Jnl of Cooperative Information Systems
Intl Jnl of Intelligent &amp; Cooperative Info. Systems
Intl Jnl of Geographic Information Systems
Journal of Information Processing and Cybernetics
Geoinformatica
Journal on Digital Libraries
Journal of the American Society for Information Science
Journal of Intelligent Information Systems</p>

<p>Reputable:</p>

<p>Data Engineering
Knowledge and Information Systems
Advances in Engineering Software
Information &amp; Software Technology
Data Base
Data Base Management
Database and Network Journal
Journal of Data Warehousing
Journal of Combinatorics, Information and System Sciences
International Journal of Information Technology
Transactions of Information Processing Society of Japan
SIGMOD Record
IEICE Data Engineering</p>

<p>  Others:</p>

<p>Journal of Computing Information Science
Journal of Information Science and Engineering
European Journal of Information Systems
Journal of Databases Management
Database for Advances in Information Systems
Data Management
Datamation
Government Data Systems
Journal of Database Administration
Journal of the Association for Education Data Systems
Information Processing and Management
Journal of Information Science: Principles and Practice
Database Programming and Design
Scandinavian Journal of Information System</p>

<p>AREA: Artificial Intelligence
Premium:</p>

<p>Artificial Intelligence
Computational Linguistics
IEEE Trans on Pattern Analysis and Machine Intl
IEEE Trans on Robotics and Automation
IEEE Trans on Image Processing
Journal of AI Research
Neural Computation
Machine Learning
Intl Jnl of Computer Vision
IEEE Trans on Neural Networks</p>

<p>Leading:</p>

<p>Artificial Intelligence Review
ACM Transactions on Asian Language Information Processing
AI Magazine
Annals of Mathematics and AI
Applied Artificial Intelligence
Applied Intelligence
Artificial Intelligence in Medicine
Autonomous Agents and Multi-Agent Systems
Computational Intelligence
Complex Systems
Computer Speech and Language
Computer Support for Collaborative Learning (CSCL)
Computer Vision and Image Understanding
Connection Science
CVGIP: Graphical Models &amp; Image Processing
CVGIP: Image Understanding
Expert Systems with Applications: An Intl Jnl
IEEE Transaction on Speech and Audio Proc
IEEE Trans on Systems, Man, &amp; Cybernetics, Part A &amp; B
Intl Jnl on Artificial Intelligence Tools
Jnl of Experimental &amp; Theoretical AI
Journal of East Asian Linguistics
Knowledge Engineering Review
Machine Translation
Neural Networks
Network Computing in Neural Systems
Pattern Analysis and Applications
Pattern Recognition
Neurocomputing
User Modelling &amp; User-Adapted Interaction: an Intl Jnl</p>

<p>Reputable:</p>

<p> Communications of COLIPS
Computer Processing of Chinese &amp; Oriental Languages
Computers and Artificial Intelligence
Cybernetics and Systems
Engineering Intelligent Systems for EE and CS
Expert Systems
Evolutionary Computation
Intelligent Instruments &amp; Computers
Intl Jnl for AI in Engineering
Intl Jnl of Applied Expert Systems
Intl Jnl of Approximate Reasoning
Intl Jnl of Intelligent Systems
Intl Jnl of Neural Systems
Intl Jnl of Pattern Recognition &amp; AI
Intl Journal of Document Analysis and Recognition
IEEE Transactions on Fuzzy Systems
Journal of Intelligent and Fuzzy Systems
Knowledge Acquisition Jnl
Knowledge-Based Systems
Kybernetika
Natural Language Engineering
Neural Computing &amp; Applications
Network Society
Neural Processing Letters
Pattern Recognition Letters
IEE Proceedings: Vision, Image and Signal Proc
Speech Communications
Journal of Neural Network Computing
Minds and Machines: Jnl for AI, Philosopy and Cog. Sc
Intl Jnl of Uncertainty, Fuzziness and KBS
Heuristics: Jnl of Knowledge Engineering
Engineering Applications of AI
Jnl. of Japanese Soc. of AI
Australian Jnl of Intelligent Information Proc Sys
Intelligent Data Analysis
Image and Vision Computing
Journal of Artificial Neural Networks
Neural, Parallel and Scientific Computations
 Robotica</p>

<p>Others:</p>

<p> AIAA Journal
Canadian Artificial Intelligence
Journal of Advanced Robotics
Journal of Artificial Intelligence in Education
Journal of Artificial Intelligence in Engineering, Automation, and Manufacturing
Journal of Artificial Intelligence, Neural Networks and Complex
Journal of Computational Acoustics
Journal of Computational Neuroscience
Journal of Computational Vision
Journal of Card. Imaging
Journal of Cybernetics
Journal of Cybernetics and Information Science
Journal of Design Automation of Embedded Systems
Journal of Knowledge-Based Intelligent Engineering Systems
Journal of Intelligent Robotic Systems: Theory and Applications
Journal of Systems Automation: Research and Applications
Journal of Automation and Remote Control
Journal of Intelligent Automation &amp; Soft Computing
Journal of Intelligent Control and Systems
Journal of Intelligent and Robotic Systems
Journal of Intelligent Manufacturing
Journal of Intelligent Systems Engineering
Journal of Intelligence System
Journal of Intelligent Technology
Journal of Literary and Linguistic Computing
Journal of Machine Vision and Applications
Journal of Man-Machine Studies
Journal on Neural and Mass-Parallel Computing and Information Systems
Journal of Robotics and Mechatronics
Journal of Robotic Systems
Journal of Robotics and Autonomous Systems
Journal of Robotics Research
Journal of the Robotics Society of Japan
Journal of Computational Neurology
International Journal of Lexicography
Journal of intelligent Computing
International Journal of Intelligent Systems in Accounting Finance and Management
International Journal of Speech Technology
Engineering Design and Automation Journal
International Journal of Machine Tools &amp; Manufacturing
International Journal of Corpus Linguistics
Journal of Chinese Information Processing
AREA: Algorithms, Theory and Related Areas</p>

<p>  Premium:</p>

<p> Algorithmica
Computational Complexity
Discrete &amp; Computational Geometry
IEEE Trans on Information Theory
Information &amp; Computation
Jnl of Algorithms
Jnl of Computer and System Sciences
Jnl of the Association for Computing Machinery
SIAM Jnl on Computing
ACM Trans on Computational Logic (TOCL)</p>

<p>Leading:</p>

<p> Acta Informatica
Chicago Journal of Theoretical Computer Science
Designs, Codes and Cryptography
Jnl of Symbolic Computation
Journal of Automated Reasoning
Journal of Graph Algorithms and Applications
Journal of Complexity
Journal of Cryptology
JOTA - J. of Optimization: Theory and Applications
Mathematics of Computation
Mathematical Programming
Optimization: A J. of Mathematical Programming and Operations Research
ORSA Journal of Computing
Nordic J of Computing (BIT)
SIAM Journal on Optimization
Random Structures &amp; Algorithms
Theoretical Computer Science</p>

<p>Reputable:</p>

<p> Applicable Algebra in Eng., Comm., and Computing
Applied Maths and Computation
BIT: Computer Science and Numerical Mathematics
Bulletin of the European Assoc. for Theoretical CS
Computational and Applied Maths
Computers &amp; Mathematics With Applications
Combinatorics, Probability &amp; Computing
European Journal of OR
Journal of Computer and System Sciences International
Intl Jnl of Foundations of Computer Science</p>

<p>Others:</p>

<p>  Problem Solving Technologies
Journal of Algebraic Combinatorics
Journal of Combinatorial Designs
Journal of Combinatorial Optimization
Journal of Experimental Algorithmics
Journal of Electronic Imaging
Intl Jnl for Numerical Methods in Engineering
SIAM Journal of Algorithms and Discrete Methods
SIAM Journal on Algebraic and Discrete Methods
SIAM Journal on Numerical Analysis
SIAM Journal on Matrix Analysis and Applications
Naval Journal of Operations Research
Journal of Scheduling
Electronic Journal of Combinatorics
Journal of Mathematical Modeling and Scientific Computing
Journal of Mathematical Structures in Computer Science
International Journal on Mathematical and Computer Models
Journal of Global Optimization
Journal of Computational Statistics and Data Analysis
AREA: Hardware and Architecture</p>

<p>Premium:</p>

<pre><code>      IEEE Trans on Circuits and Systems I
      IEEE Trans on Computers
      Integration: The VLSI Jnl
      VLSI Design
</code></pre>

<p> Leading:</p>

<pre><code>      IEEE Trans on Circuits and Systems II
      Jnl of Microcomputer Applications
      Microprocessing and Microprogramming
</code></pre>

<p>  Reputable:</p>

<pre><code>      Computer Design
      Digital Processes
      Electronics Letters,
      EUROMICRO Jnl
      Jnl of Circuits, Systems and Computers
      Jnl of Electronics, Information and Systems
      Microprocessors and Microsystems
      Supercomputer
      IEEE Journal on Computer Architectures for Intelligent Machines
</code></pre>

<p>  Others:</p>

<pre><code>  Signal Processing
  Technical Journal of Digital Equipment Corporation
  The Linux Journal
  IBM Application System/400 Technology Journal
  Journal of System Architecture
  NEC Technical Journal
  International Journal of Computer Aided VLSI Design
  MRS Internet Journal of Nitride Semiconductor Research
  Standards and Interface Journal
  International Journal of Mini and Microcomputers
  Journal of Microelectronic Systems Integration
  User Modeling and User-Adapted Interaction
  The X Resource: A Practical Journal of the X Window System
  Hewlett-Packard Journal
</code></pre>

<p>AREA: Programming Languages and Software Engineering</p>

<p>  Premium:</p>

<p> ACM Trans on Programming Languages &amp; Systems
IEEE Trans on Software Engineering
Jnl of Functional Programming
ACM Trans on S/W Eng and Methodology
Formal Methods in System Design</p>

<p>  Leading:</p>

<p>Theory and Practice of Logic Programming (past: Jnl of Logic Programming)
IEE Procs - Software
Jnl of Software Maintenance: Research and Practice
Higher-Order and Symbolic Computation (previously known as
LISP and Symbolic Computation)
Software: Practice and Experience
Jnl of Functional and Logic Programming
The Constraints Journal
Journal of Logic and Computation
Journal of Programming Languages
Empirical Software Engineering
Automated Software Engineering
Formal Aspects of Computing
Object-Oriented Systems
Theory and Practice of Object Systems
Journal of Object-Oriented Programming
IEEE Transactions on Reliability
Future Generations Computer Systems: FGCS
Science of Computer Programming</p>

<p>  Reputable:</p>

<p> Programming and Computer Software
Jnl of Systems and Software
Intl Jnl on Software Engineering and Knowledge Eng
New Generation Computing
Software Quality Journal
Software Testing, Verification and Reliability
Computer Languages
Requirements Engineering Journal
IEE Software Engineering Journal</p>

<p> Others:</p>

<p>Journal of the Interest Group in Pure and Applied Logic
Notre Dame Journal of Formal Logic
Journal of Computer and Software Engineering
Journal of Structured Programming
International Journal on Software Tools for Technology Transfer
Chinese Journal of Advanced Software Research
Journal of Computing Systems in Engineering
Journal of Symbolic Logic
Project Management Journal
International Journal of Reliability, Quality, and Safety
Journal for Applied Nonclassical Logic
The Journal of Defense Software Engineering
Computer &amp; Control Engineering Journal
Journal of Logic, Language and Information
Computer Systems Engineering Journal
Journal of Automata, Languages and Combinatorics
The C Users Journal
Information Design Journal
Java Developer&rsquo;s Journal
C++ Journal
Fortran Journal
Journal of Scientific Programming
Logic Journal of the IGPL
Journal of Philosophical Logic
Journal of Quality Technology
International Journal of Technology Management
Software Process Modeling and Technology
Journal of Computers and Translation
Journal of C Language Translation
Journal of Electronic Testing
Software Engineering Notes</p>

<p>AREA: Media &amp; Software Technology</p>

<p>  Premium:</p>

<p> ACM Trans on Graphics
ACM Trans on Modeling &amp; Computer Simulation
Computer Aided Geometric Design
Computer-Aided Design
IEEE Trans on Visualization and Computer Graphics
SIAM Jnl on Scientific and Statistical Computing
Multimedia Systems
Performance Evaluation
Journal of Visual Communication and Image Representation
  Leading:</p>

<p> Computers &amp; Education
ACM Trans on Mathematical Software
Hypermedia
Intl Jnl of Modelling &amp; Simulation
Intl Jnl of Shape Modelling
Intl Jnl on Computational Geometry &amp; Apps
Simulation &amp; Games
Simulation &amp; Gaming
Visual Computer
Computational Geometry - Theory and Applications
Simulation
Multimedia Tools &amp; Applications
Intl Jnl in Computer Simulation
Integrated Computer-Aided Engineering
Information Retrieval</p>

<p>Reputable:</p>

<p> Computer Graphics Forum: Jnl of the Europ As. for CG
Computer &amp; Graphics
Intl Jnl of Applied Software Technology
Jnl of Computational and Applied Mathematics
Mathematical and Computer Modelling
Mathematics and Computers in Simulation
International Journal of Computer Mathematics
Simulation Practice and Theory
The New Review of Hypermedia &amp; Multimedia: Apps &amp; Res
Trans of the Intl Assoc for Math and Comps in Simuln
Computer Simulation: Modeling &amp; Analysis
Trans of the Society for Computer Simulation
Journal of Visual Languages and Computing
Engineering Computations
Software - Concepts and Tools
Journal of Visualization and Computer Animation
The International Journal of The Eurographics Association</p>

<p>Others:</p>

<p>  Iranian Journal of Electrical and Computer Engineering
Journal of Digital Imaging
Journal of Concurrent Engineering: Applications and Research
Digital Technical Journal
Interface Journal of New Music Research
SPIE Journal of Electronic Imaging
The Journal of Electronic Commerce
Journal of Graphics Tools
International Journal of Information Processing and Management
Journal of Library Automation
The Journal of Computer Game Design
Journal of Documentation
Virtual Prototyping Journal
Journal of Computing and Information Technology
SIAM Journal on Scientific Computing.
Journal of the Virtual Reality Society
Journal of Virtual Reality Research, Development and Applications
Journal of Computational and Graphical Statistics</p>

<p>AREA: System Technology</p>

<p>  Premium:</p>

<p>  IEEE Trans on Communications
Jnl of Parallel and Distributed Computing
ACM Trans on Computer Systems
IEEE/ACM Trans on Networking
ACM Trans on Information Systems
IEEE Trans on Parallel and Distributed Systems
Distributed Computing
IEEE Jnl on Selected Areas in Communication
Computer Networks (Previously &ldquo;&amp; ISDN Networks&rdquo;)
Real-time Systems
IEEE Trans on Computers
Integration: The VLSI Jnl
VLSI Design</p>

<p>Leading:</p>

<p> International Journal of Parallel Programming
Networks
Internet Research - Electronic Networking Applications and Policy
Computer Communications
Jnl of Computer Communications
Jnl of Network and Computer Applications
Parallel Computing
Mobile Networks and Applications
Jnl of High Speed Networks
Wireless Networks
Queueing Systems
The Intl Jnl of Supercomputer Applications
Concurrency - Practice and Experience
IEEE Journal of Internet Computing
ACM Transactions on Information and System Security
Jnl of Microcomputer Applications
Journal of Systems Architecture (past: Microprocessing and Microprogramming)</p>

<p> Reputable:</p>

<p> Computers &amp; Security
IEE Proc. - Communications
IEICE Trans on Fundamentals of Elec., Comm., and Comp.
IEICE Trans on Communications
Mobile Computing and Communicatons Review
Distributed Systems Engineering Jnl
Intl Jnl of High Speed Computing
World Wide Web Journal
Electronic Networking
Intl Jnl of Communication Systems
Signal Processing: Image Communication
Telecommunication Systems
International Journal of Systems Science
Journal of Cryptography
Internet Security Journal
Journal of Networks and Systems Management
International Journal of Wireless Information Networks
An Interactive Journal of Mobile Computing
Computer Design
Digital Processes
EUROMICRO Jnl
Jnl of Circuits, Systems and Computers
Jnl of Electronics, Information and Systems
Microprocessors and Microsystems
Supercomputer
IEEE Journal on Computer Architectures for Intelligent Machines</p>

<p>Others:</p>

<p>  Information &amp; Systems Technology
Jnl of Computer Security
Parallel Processing Letters
IBM Systems Journal
The International Journal of Computer and Telecommunications Networking
USENIX Computing Systems Journal
AT&amp;T Technical Journal
Journal of Internetworking: Research and Experience
Fujitsu Scientific and Technical Journal
Computer Music Journal
Journal of Computer-based Instruction
ICL Technical Journal
International Journal of Imaging Systems and Technology
International Journal of Digital and Analog Communication System
Journal of Supercomputer Application of High Performance Computing
Journal of Decision Support Systems
Journal of Computer Research and Development
British Telecommunications Technology Journal
The Journal of Interactive Media and Education
International Journal of Time-Critical Computing Systems
International. Journal of CAD/ CAM &amp; Comp. Graphics
Educational Communication and Technology Journal
The International Journal on the Development and Application of Standards for Computers, Data Communications and Interfaces
Journal of Electronic Publishing
Web Journal
Microsoft Systems Journal
Journal of Data &amp; Computer Communication
Journal of Supercomputing
Journal of Imaging Technology
INESC Journal on Junior Activities in Science and Technology
The Journal of Electronic Data Interchange
ISPRS Journal of Photogrammetry and Remote Sensing
International Journal of CIM
International Journal of Circuit Theory and Applications
Journal of Digital Systems
IVHS Journal
Journal Design Automation and Fault Tolerant Computing
Journal of the American Voice I/O Society
Journal of the Communications Research Lab
International Journal of Construction information Technology
Journal of Computer Communication Review
Real-Time Imaging Journal
Journal of Lightwave Technology
Journal of Advanced Automation Technology
Journal of Technology Transfer
TI Technical Journal
Journal of Imaging Science and Technology
Journal of Mathematical Imaging and Vision
The journal of the Interactive Multimedia Association
Transputer Communication Journal
Bell System Technical Journal
Journal of Combinatorial Designs
Journal of Combinatorial Optimization
Journal of Reliable Computing
Journal of Digital Library Research
Signal Processing
Technical Journal of Digital Equipment Corporation
The Linux Journal
IBM Application System/400 Technology Journal
Journal of System Architecture
NEC Technical Journal
International Journal of Computer Aided VLSI Design
MRS Internet Journal of Nitride Semiconductor Research
Standards and Interface Journal
International Journal of Mini and Microcomputers
Journal of Microelectronic Systems Integration
User Modeling and User-Adapted Interaction
The X Resource: A Practical Journal of the X Window System
Hewlett-Packard Journal</p>

<p>AREA: Biomedical</p>

<p>  Premium:</p>

<p> Jnl of the American Medical Informatics Assoc (JAMIA)
Journal of Computational Biology
 Leading:</p>

<p> Computers in Biomedical Research
Methods of Information in Medicine
Medical Decision Making
Bioinformatics</p>

<p>Reputable:</p>

<p> Computer Applications in the BioSciences: CABIOS
Computers in Biology and Medicine
Medical Informatics
International Journal of Medical Informatics</p>

<p>Others:</p>

<p> Journal of Applied and Computational Harmonic Analysis
International Journal of Bio-Medical Computing
Australian Journal of Biological Sciences
Journal of Computer Aided Surgery
Journal of Computer-Aided Molecular Design
International Journal of Clinical Monitoring and Computing
Journal of Chemical Information and Computer Sciences</p>

<p>AREA: General Computer Science and Related Journals</p>

<p>  Premium:</p>

<p> SIAM Jnl on Discrete Mathematics
Operations Research</p>

<p> Leading:</p>

<p> Communications of the ACM
ACM Computing Surveys
Procs of the IEEE
Information Processing Letters
IBM Journal of R &amp; D
International Journal of General Systems
Adaptive Behavior
Discrete Applied Mathematics
Discrete Mathematics</p>

<p>  Reputable:</p>

<p>Computer Journal
Computing
Fuzzy Sets and Systems
IBS Computing Quarterly
Information Sciences
Intl Jnl of Computer Applications in Technology
Intl Jnl of Computer System Science &amp; Engineering
Jnl of Computer Science and Technology
Jnl of Computing and Information
Jnl of Information Processing
Australian Computer Jnl
Journal on Universal Computer Science
IEICE Trans on Infomation and Systems
Computer Methods and Programs in Biomedicine
Finite Fields and their Applications
Instructional Science</p>

<p>Others:</p>

<p>Journal of Computational Chemistry
Computers and Geosciences: An International Journal
Computer/Law Journal
Journal of Law and Information Science
Journal of Combinational Mathematics and Combinational Computer science
International Journal of Computers and Mathematics
Journal of Computational Physics
Journal of Computational Physiology
Journal of Computing and Electronics in Agriculture
Journal of Computing in Civil Engineering
The Journal of Engineering with Computers
Social Science Computing Journal
International Journal of Computer Integrated Manufacturing
Journal of the National Academy of Sciences
Journal of Indian Institute of Science
British Journal of Educational Technology
International Journal of Mathematical Education in Science and Technology
Computer and High Technology Law Journal
Japan Journal of Science, Technology and Society
Journal of Computers in the Humanities
Cybermetrics: International Journal of Scientometrics, Informetrics and Bibliometrics
Journal of Research of the National Institute of Standards and Technology
International Journal of Computer Science and Information Management
Chinese Journal of Computers
Journal Educational Computing Research
International Journal of Human-Computer Studies
Journal of Computer Assisted Learning
AICHE Journal
South African Journal of Computer Science
Journal of the Brazilian Computer Society
SMPTE Journal
CSCW-Journal
ICCA Journal
Journal of ASIS
Journal of Computer Assisted Tomography
URISA Journal
INFORMATIK Journal of the Swiss Informaticians Society
Journal of KISS, The Korea Information Science Society
Journal of Informatics in Primary Care
AIEDAM journal
NCR Journal of Research and Development
JSME International Journal
Journal of the Swiss Computer Science Society
The Canadian Journal of Information Science
Australian Computer Science Communications
Interacting with Computers
ISPRS Journal
Journal of RTS
Abakus, The Journal of the Computer Science Dept., University College Cork
International Journal of Human-Computer Studies
Advances in Computers
Design Automation of Electronic Systems (TODAES)
Letters on Programming Languages and Systems (LOPLAS)
SIGIR Forum
SIGPLAN Notices
Operating Systems Review
Mathematical Structures in Computer Science
Electronic Notes in Theoretical Computer Science
Information Fusion
AI Communications
Artificial Intelligence and Law
Computing Systems
Markup Languages
International Journal of Intelligent Systems
Software Focus
Software Process: Improvement and Practice
Systems and Computers in Japan
Acta Cybernetica
Colombian Journal of Computation (RCC)
Informatica (Lithuanian Academy of Sciences)
Informatica (Slovenia)
DBMS - The Database &amp; Client/Server Solutions Magazine
Journal of Computer-Mediated Communication (JCMC)
JQL - Journal of Quantitative Linguistics
<a href="http://chl033.woku.com/article/2816381.html">http://chl033.woku.com/article/2816381.html</a>
影响因子&ndash;国外优秀计算机科学期刊50种
1 BIOINFORMATICS    1367-4803  4.615
 2 J MACH LEARN RES  1532-4435  3.818
 3 IBM J RES DEV   0018-8646  3.700
 4 IEEE NETWORK   0890-8044  3.400
 5 IEEE PERS COMMUN  1070-9916  3.048
 6 J COMPUT AID MOL DES  0920-654X  2.931
 7 IEEE T PATTERN ANAL  0162-8828  2.923
 8 IEEE T MED IMAGING  0278-0062  2.911
 9 J CHEM INF COMP SCI  0095-2338  2.902
 10 MIS QUART   0276-7783  2.872
 11 ACM COMPUT SURV  0360-0300  2.769
 12 MED IMAGE ANAL   1361-8415  2.680
 13 IEEE T IMAGE PROCESS  1057-7149  2.553
 14 USER MODEL USER-ADAP  0924-1868  2.524
 15 IEEE ACM T NETWORK  1063-6692  2.408
 16 COGNITIVE BRAIN RES  0926-6410  2.404
 17 NEURAL COMPUT   0899-7667  2.313
 18 HUM-COMPUT INTERACT  0737-0024  2.310
 19 J MOL GRAPH MODEL  1093-3263  2.293
 20 IEEE T INFORM THEORY  0018-9448  2.045
 21 INT J COMPUT VISION  0920-5691  2.034
 22 INFORM SYST   0306-4379  2.000
 23 MACH LEARN   0885-6125  1.944
 24 IEEE INTELL SYST   1094-7167  1.905
 25 CHEMOMETR INTELL LAB  0169-7439  1.841
 26 ANNU REV INFORM SCI  0066-4200  1.778
 27 J AM SOC INF SCI TEC  1532-2882  1.773
 28 ARTIF INTELL   0004-3702  1.769
 29 IEEE T VIS COMPUT GR  1077-2626  1.741
 30 NETWORK-COMP NEURAL  0954-898X  1.733
 31 J ACM    0004-5411  1.708
 32 J CRYPTOL   0933-2790  1.647
 33 NEURAL NETWORKS  0893-6080  1.557
 34 J COMPUT PHYS   0021-9991  1.553
 35 ARTIF LIFE   1064-5462  1.526
 36 BIOL CYBERN   0340-1200  1.511
 37 INFORM PROCESS MANAG  0306-4573  1.506
 38 COMMUN ACM   0001-0782  1.497
 39 IEEE T EVOLUT COMPUT  1089-778X  1.486
 40 IEEE T COMPUT   0018-9340  1.484
 41 IEEE T NEURAL NETWOR  1045-9227  1.404
 42 ACM T INFORM SYST  1046-8188  1.385
 43 J STRATEGIC INF SYST  0963-8687  1.346
 44 COMPUT FLUIDS   0045-7930  1.344
 45 AI MAG    0738-4602  1.328
 46 IEEE T FUZZY SYST   1063-6706  1.324
 47 INFORM MANAGE-AMSTER  0378-7206  1.299
 48 J INFORM TECHNOL  0268-3962  1.268
 49 CMES-COMP MODEL ENG  1526-1492  1.256
 50 J MOL MODEL   0948-5023  1.235
from:<a href="http://chl033.woku.com/article/2893387.html">http://chl033.woku.com/article/2893387.html</a>
SCI论文全攻略之构思与撰文
推荐一、写作框架和各部分要求</p>

<p>Title: Be short, accurate, and unambiguous; Give your paper a distinct personality; Begin with the subject of the study.</p>

<p>Introduction: What is known; What is unknown; Why we did this study?</p>

<p>Methods: Participants, subjects; Measurements; Outcomes and explanatory variables; Statistical methods.</p>

<p>Results: Sample characteristics; Univariate analyses; Bivariate analyses; Multivariate analyses.</p>

<p>Tables and figures: No more than six tables or figures; Use Table 1 for sample characteristics (no P values); Put most important findings in a figure.</p>

<p>Discussion: State what you found; Outline the strengths and limitations of the study; Discuss the relevance to current literature; Outline your implications with a clear &ldquo;So what?&rdquo; and &ldquo;Where now?&rdquo;</p>

<p>References: All citations must be accurate; Include only the most important, most rigorous, and most recent literature; Quote only published journal articles or books; Never quote &ldquo;second hand&rdquo;; Cite only 20-35 references.</p>

<p>Formatting: Include the title, author, page numbers, etc. in headers and footers; Start each section on a new page; Format titles and subtitles consistently; Comply with &ldquo;Instructions to authors&rdquo;.</p>

<p>二、英文写作的语言技巧</p>

<ol>
<li><p>Introduction：</p></li>
<li><p>如何指出当前研究的不足并有目的地引导出自己研究的重要性？在叙述前人成果之后，用However来引导不足，提出一种新方法或新方向。如：However, little information(little attention/little work/little data/little research……)(or few studies/few investigations/few researchers/few attempts……)(or no/none of these studies……)has(have)been done on(focused on/attempted to/conducted/investigated/studied(with respect to))。如：Previous research (studies, records) has (have) failed to consider/ ignored/ misinterpreted/ neglected to/overestimated, underestimated/misleaded. thus, these previous results are inconclisive, misleading, unsatisfactory, questionable, controversial. Uncertainties (discrepancies) still exist……研究方法和方向与前人一样时，可通过以下方式强调自己工作：However, data is still scarce(rare, less accurate)，We need to(aim to, have to) provide more documents(data, records, studies, increase the dataset). Further studies are still necessary(essential)……</p></li>
</ol>


<p>强调自己研究的重要性，一般还要在However之前介绍与自己研究问题相反或相关的问题。比如：(1)时间问题；(2)研究手段问题；(3)研究区域问题；(4)不确定性；(5)提出自己的假设来验证。如果你研究的问题在时间上比较新，你可大量提及时间较老问题的研究及重要性，然后(However)表明“对时间尺度比较新的问题研究不足”；如果你的是一种新的研究手段或研究方向，你可提出当前流行的方法及其物质性质，然后(However)说对你所研究的方向方法研究甚少；如果研究涉及区域问题，就先总结相邻区域或其它区域的研究，然后(However)强调这一区域的研究不足；虽然前人对某一问题研究很多，但目前有两种或更多种观点，这种uncertainties或ambiguities值得进一步澄清；如果自己的研究是全是新的，没有前人的工作可对比，你就可以自信地说“根据假设提出的过程，存在这种可能的结果，本文就是要证实这种结果”等等。We aim to test the feasibility (reliability) of the……It is hoped that the question will be resolved (fall away) with our proposed method (approach).</p>

<ol type="a">
<li><p>提出自己的观点：We aim to//This paper reports on//This paper provides results//This paper extends the method//This paper focus on……The purpose of this paper is to……Furthermore, Moreover, In addition, we will also discuss……</p></li>
<li><p>圈定自己的研究范围：introduction的另一个作用就是告诉读者(包括reviewer)，你文章的主要研究内容。如果处理不好，reviewer会提出严厉的建议，比如你没有考虑某种可能性，某种研究手段等。为减少这种争论，在前言的结尾就必须明确提出本文研究的范围：(1)时间尺度；(2) 研究区域等。如涉及较长的时序，你可明确提出本文只关心某一特定时间范围的问题，We preliminarily focus on the older (younger)……如有两种时间尺度 (long-term and short term)，你可说两者都重要，但是本文只涉及其中一种。研究区域的问题，和时间问题一样，也需明确提出你只关心某一特定区域！</p></li>
<li><p>最后的圆场：在前言的最后，还可以总结性地提出“这一研究对其它研究有什么帮助”；或者说further studies on……will be summarized in our next study (or elsewhere)。总之，其目的就是让读者把思路集中到你要讨论的问题上来。尽量减少不必要的争论(arguments)。</p></li>
<li><p>Discussion：</p></li>
<li><p>怎样提出观点：在提出自己的观点时，采取什么样的策略很重要，不合适的句子通常会遭到reviewer置疑。(1)如果观点不是这篇文章最新提出的，通常要用We confirm that……(2)对于自己很自信的观点，可用We believe that……(3)通常，由数据推断出一定的结论，用Results indicate, infer, suggest, imply that……(4) 在极其特别时才可用We put forward(discover, observe)……&#8221;for the first time&#8221;来强调自己的创新……(5) 如果自己对所提出的观点不完全肯定，可用We tentatively put forward (interrprete this to…)Or The results may be due to (caused by) attributed to resulted from……Or This is probably a consequence of……It seems that……can account for (interpret) this……Or It is posible that it stem from……要注意这些结构要合理搭配。如果通篇是类型1)和5)，那这篇文章的意义就大打折扣。如果全是2)，肯定会遭到置疑。所以要仔细分析自己成果的创新性以及可信度。</p></li>
<li><p>连接词与逻辑：写英文论文最常见的毛病是文章的逻辑不清楚，解决方法如下。</p></li>
</ol>


<p>(1)注意句子上下连贯，不能让句子独立。常见的连接词有，However, also, in addition, consequently, afterwards, moreover, Furthermore, further, although, unlike, in contrast, Similarly, Unfortunately, alternatively, parallel results, In order to, despite, For example, Compared with, other results, thus, therefore……用好连接词能使文章层次清楚，意思明确。比如，叙述有时间顺序的事件或文献，最早的文献可用AA advocated it for the first time.接下来可用Then BB further demonstrated that. 再接下来，可用Afterwards, CC……如果还有，可用More recent studies by DD……如果叙述两种观点，要把它们截然分开AA put forward that……In contrast, BB believe or Unlike AA, BB suggest or On the contrary (表明前面观点错误)，如果只表明两种观点对立，用in contrast BB……如果两种观点相近,可用AA suggest……Similarily, alternatively, BB……Or Also, BB or BB allso does……表示因果或者前后关系可用Consequently, therefore, as a result……表明递进关系可用furthermore, further, moreover, in addition……写完一段英文，最好首先检查是否较好地应用了这些连接词。</p>

<p>(2) 注意段落布局的整体逻辑：经常我们要叙述一个问题的几个方面。这种情况下，一定要注意逻辑结构。第一段要明确告诉读者你要讨论几个部份……Therefore, there are three aspects of this problem have to be addressed. The first question involves……The second problem relates to……The third aspect deals with……清晰地把观点逐层叙述。也可以直接用First, Second, Third, Finally……当然，Furthermore, in addition等可以用来补充说明。</p>

<p>(3) 讨论部份的整体结构：小标题是把问题分为几个片段的好方法。通常第一个片段指出文章最重要的数据或结果；补充说明部份放在最后一个片段。一定要明白，文章的读者分为多个档次；除了本专业的专业人士读懂以外，一定要想办法能让更多的外专业人读懂。所以可以把讨论部份分为两部份，一部份提出观点，另一部份详细介绍过程以及论述的依据。这样专业外的人士可以了解文章的主要观点，比较专业的讨论他可以把它当成黑箱子，而这一部份本专业人士可以进一步研究。</p>

<p>C.讨论部分包括什么内容？(1)主要数据及其特征的总结；(2)主要结论及与前人观点的对比；(3) 本文的不足。对第三点，一般作者看来不可取，但事实上给出文章的不足恰恰是保护自己文章的重要手段。如果刻意隐藏文章的漏洞，觉得别人看不出来，是非常不明智的。所谓不足，包括以下内容：(1)研究的问题有点片面，讨论时一定要说，It should be noted that this study has examined only……We concentrate (focus) on only……We have to point out that we do not……Some limitations of this study are……(2)结论有些不足，The results do not imply……The results can not be used to determine(or be taken as evidence of)……Unfortunately, we can not determine this from this data……Our results are lack of……但指出这些不足之后，一定要马上再次加强本文的重要性以及可能采取的手段来解决这些不足，为别人或者自己的下一步研究打下伏笔。Not withstanding its limitation, this study does suggest……However, these problems could be solved if we consider……Despite its preliminary character, this study can clearly indicate……用中文来说这是左右逢源，把审稿人想到的问题提前给一个交代，同时表明你已经在思考这些问题，但是由于文章长度，试验进度或者试验手段的制约，暂时不能回答这些问题。但通过你的一些建议，这些问题在将来的研究中有可能实现。</p>

<ol>
<li><p>Others：</p></li>
<li><p>为使文章清楚，第一次提出概念时，最好以括弧给出较详细解释。如文章用了很多Abbreviation可用两种方法解决：(1) 在文章最后加上个Appendix，把所有Abbreviation列表；(2)在不同页面上不时地给出Abbreviation的含义，用来提醒读者。</p></li>
<li><p>绝对不能全面否定前人的成果，即使在你看来前人的结论完全不对。这是对前人工作最起码的尊重，英文叫做给别人的工作credits.所以文章不要出现非常negative的评价，比如Their results are wrong, very questionable, have no commensence, etc.遇到这类情况，可以婉转地提出：Their studies may be more reasonable if they had……considered this situation.Their results could be better convinced if they……Or Their conclusion may remain some uncertanties.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何选择和阅读研究文献]]></title>
    <link href="http://secdr.github.io/2015/05/04/how-to-select-and-read-paper/"/>
    <updated>2015-05-04T09:39:34-07:00</updated>
    <id>http://secdr.github.io/2015/05/04/how-to-select-and-read-paper</id>
    <content type="html"><![CDATA[<p>我们很多的时候，闷在实验室闭门造车，实在不如稍抽出一点时间看看文献，看看别人是否有同样的困惑。我们的大老板说，要想有成绩别无他法只有读，读，大量的读文献，尤其国外的。</p>

<h3>阅读文献的来源</h3>

<p>A精研数据库，对于文献数据库和专业数据库应该深入研究。重要的如ISI，Medline,Ncbi等了。因人而异添加数据库到你的收藏夹。</p>

<p>B做一个课题首先是要看专利的！！这是我的经验之谈。通过研读专利正文，可以体会申请人的研发思路；研读专利权要求，可以少走弯路，还可以找出未覆盖的漏洞，进一步提出自己的专利；有的专利还有参考文献，可以了解这个专利的来龙去脉。</p>

<p>C了解与自己研究方向有关的机构,密切关注在该研究领域和方向的顶尖group所发表的论文并认真研读。对于本研究领域的国际领袖人物和实验室，应该多花一点时间去研究他们的主页。</p>

<p>D可以在google上免费订购你所感兴趣的alert,他24小时更新，会不间断的向你信箱发送网上出现该话题的文章。</p>

<p>E经常上网看看最新的资讯说不准会激发你一时的灵感。</p>

<!--more-->


<p>F定期读几篇cell ，nature,science还是很重要的，不要认为和自己专业无关的就不关心，其实目前生物医学界的许多方法和思路是相通的，nature,science上最新的方法用到自己的领域上完全可能豁然开朗。</p>

<p>G对于你从事的领域的重点杂志（NO.1）（&lt;&lt;国外医学>>各个分册每其都有许多可读的综述，注意自己专业的核心刊的专辑,增刊,很重要!），应该是每一期的每一篇文章都阅读一下，然后是重点阅读。如果没有那么多的时间，至少每篇的TITLE &amp; ABSTRACT应该阅读的。</p>

<p>H特别要注意中文综述文章后的英文参考文献，可以用回顾性的方法查找该问题的最初起源及奠基性文章。 查阅大量外文文献，然后从文献的文献再去查找，如此往复循环，你的idea不知不觉中就被启发开来。我们老板说过，看文献，最重要，最有权威，也最有深度的是什么，就是你查找的文献的文献。 读文献一定要注意文章后面列出的参考文献,按图索骥,就很易找到更多文献,而且被引次数越多的越重要!!通过搜索参考文献的作者,期刊目次找到更多该领域的文章。</p>

<h3>如何查找阅读文献</h3>

<p>课题未定：</p>

<p>我很是崇拜神经所蒲教授的观点，阅读文献从教科书开始-找到自己最感兴趣的问题，查找相关综述，你会发现书上一些所谓的成熟观点，在综述中是“推测”，然后找原始文献，你回发现，有许多实验证据是在当时条件不够的情况下的初步探索。如果你发现这样的问题，一个流行观点没有使用目前、最新技术验证，你去验证一下，回有两种结果：证实，那你就是用最新技术验证一个很正确的观点，给他提供了新证据，这属于好工作，另外你发现前人的观点有错误，那你就找到一条将来的科研方向，继续做下去，搞定！</p>

<p>一定得知道自己所作的方向现在世界上是个怎样的研究现状&mdash;做到了何种程度,还有那些关键问题急待解决.这一点对于自己找题目的战友,我觉得尤为重要!</p>

<p>课题已定：</p>

<p>首先要做的是寻找权威杂志上相关研究领域权威人士撰写的综述类文章。这类文章信息量大，论述精辟，读后不但有助于掌握相关研究的重点和焦点内容，而且能帮助我们掌握研究领域的大方向和框架，哪些人、哪个大学或研究所、在哪个方向比较强等等；其次是泛读摘要，挑选最相关的进行精读。精读文章同时做笔记和标记是非常关键的，因为好文章可能每读一遍就有不同的收获，每次的笔记加上心得最后总结起来就会对自己大有帮助；再次是针对不同的需要对论文进行泛读和跳读。</p>

<p>涉足一些和专业有点瓜葛但有相当距离的领域。</p>

<p>我一般研读相关文献的程序是：</p>

<p>1、对该领域有较多介绍的中文成书（资料一般是比较老，如果是新书通常汇集了最近5到10年 的主要研究内容和结果）读后可以对这个领域发展历史和近期状况有个全面的了解，一些专门的术语和英文单词也有了概念。</p>

<p>2、根据研究内容通查最近3年的中文期刊，主要是通过看综述了解最近进展和一些国外发表文章的人名和期刊名，还有国内做到什么程度了，为请该类项目打个基础。你可以知道国内那些同行在做这工作.如果实验中碰到一些具体的细节问题的话,你可以联系他们,这便可以使你避免走不必要的弯路。</p>

<p>3、根据上面的学习掌握的专业词汇，人名，期刊名查国外文献。我的体会是，如果那个领域和原来专业距离比较远，那么一来就去查外文的文献往往找不出好东东，特别是一些关键词常有臆断的情况，导致检索效果不好。</p>

<p>我觉得对于自己要研究的不熟悉的内容，例如某种疾病，那么你得首先翻翻中文教科书，要对这一种疾病有一个大概的了解，这样在你以后阅读文献时会很有帮助。</p>

<p>然后，在上网查一些你的老板或你自己想要做的题目的相关方面的中文综述，也算是对教科书内容的补充。同时也让你有可能触及到国内目前的此方面的前沿。</p>

<p>这时候，你可以开始阅读一些外文的综述，看一看国外的研究情况和进展。或许，此时你会对你想要研究什么有更进一步的了解。接下来，就可以阅读一些国外的原始论著，它将会告诉你如何去完成你要研究的题目。等到文献量积累到一定程度后就可以开始你的课题了。但千万别忘了，时刻关注你正在研究的相关内容研究进展，它可能会给你的课题新的补充。</p>

<p>最后一条，看文献，编上号，做好笔记。
对于一个尚不熟悉领域的课题,先找相关的综述,综述是了解该领域最快的途径,因为教材具有滞后性,而论著又偏重于某一点,优秀的综述可以作教材读的。</p>

<h3>读文献的顺序</h3>

<p>当然还是从中文到外文，毕竟，中文是自己的母语，容易看懂，也容易有成就感。</p>

<p>文章内容是从综述到论著。一般花上一两个小时，可以查一堆文献，先把它们的摘要整理出来，甚至打印出来，根据摘要，可以初步判断哪些是自己决定要的。然后再到网上找全文，找不到再去图书馆，还找不到就发E-mail给国外的同学，一般都能获取到。对于自己感兴趣的问题，不仅要看原文，还要看它的参考文献，一般深追上几篇文章，对于想了解的问题也就知道个大概了。在读文章的过程中，当然要做些笔记，建一个word文档，做些复制拷贝的工作便可，这样做的好处是，回头就不必再花好多时间去找你的论据或论点。</p>

<h3>如何阅读文献</h3>

<p>看文章时做笔记</p>

<p>阅读笔记本可按不同的内容进行分类摘录，如:进展,研究方法，实验方法，研究结果等，并可加上自己的批注。对于笔记要定期总结（总结过去已经做过什么&mdash;&mdash;-做到心中有数；现在进展到什么程度&mdash;&mdash;&mdash;做到知己知彼；从中发现别人的优点和不足。预测将来的热点和发展方向&mdash;&mdash;&ndash;才能准确出击，找到自己的方向和目标！）。我们要着眼于将自己的成果往SCI上发，所以对一些经典的陈述，要有选择性的标记并记下来。另外，有的时候想到的思路，闪过的想法，作笔记记下来，随时查一查，可能时间久了自然就有新的看法。</p>

<p>勤思考</p>

<p>不单单是了解别人做了什么，还要考虑别人没做什么，或者他的实验能不能和他的结论吻合，数据可不可靠等等。</p>

<p>用图表的方式将作者的整个逻辑画出来，逐一推敲，抱着一种挑的心态想。</p>

<p>带着挑剔的眼神去读文献，不要盲目崇拜，有些东东自己作作，发现并不是那么回事，自己要动手，自己更要动脑。</p>

<p>看文献中懂得抓重点，找思路。主要是学习别人的IDEA。也就是看了文献问几个问题，文章的技术突破口在那里。比如一大堆专利讲了很多种分离方法，关键不是看它先做什么后做什么，而是想这个分离方法的依据是什么，为什么人家会想到这个方法，是不是还有其他方面的物性可以利用为分离的依据。</p>

<p>多与人交流</p>

<p>和导师谈谈你的想法，交流一下各自所了解的所在领域某一方向的研究进展；与相关方向的牛人谈谈，对自己的启发要比看文献大的多。</p>

<p>不仅与本领域的牛人交谈，还抓住机会与其他领域的牛人交谈，牛人的一句话，有时你读半年书都读不来的。特别是其他领域的牛人，他没准就给你一个金点子，特别是在中国，牛人一般对外行人不怎么保守。</p>

<p>集体讨论非常必要，找几个志同道合的人一起，文献人人都有一份，每人分工读不同的文献，然后大家坐到一起。顺序开讲，互相讨论。这样，文献量是不是就成N次方增加了！！！</p>

<p>比较阅读</p>

<p>观点相反的论文可以参照来读，品味一下双方的观点。还有就是与原著同时发表的其他专家的述评、原著发表后的读者质疑，都应当和原著一起读。比较一下，就可以看到自己的差距了。</p>

<p>读论文的时候最有意思的事情是发现“一稿两投”。我的意思是不少作者把同一科研数据写成相似主题的不同论文，或是在前面的基础上又有了新的发展变化。这时，如果你的课题与此类似，你的好运也就来了。因为能通过深入比较这几篇文章的异同，发现作者（或科研小组）对同一组数据的不同看法、思路的演变，或者发现作者本想隐藏的“真正”方法。我就是在分析了同一科研小组的类似实验后，迅速发现自己实验失败的关键原因，短时间内成功完成动物模型制作的，为进一步实验打下了基础。</p>

<p>做技术的要善于比较和发现，一些技术含量高文献，不可能把要点都报道出来，中文如此，英文也是如此。比如一篇专利中有很多的Sample,而每个的条件或配方都不同，这时要多比较几个同类文献，看其共同点在那里。这点在制药和表面活性剂行业还是要注意的。</p>

<p>全面参考国外文献。一定要清楚,国外文献也有一些不可信的文章;另外一种现象就是关于重点的关键的东西他会略去不写,有时一些细节的东西他也不会写的.问题是各人省略的关键和细节不尽相同,你便从对比中发现他们研究的脉络和问题的关键所在。</p>

<p>单篇文章阅读顺序及侧重</p>

<p>论文阅读顺序：
1. 摘要 引文 引用的主要信息 研究背景。
2. 图表 了解主要数据和解释。
3. 讨论和结论 将图表和结论联系起来 根据图表判断结论是否恰当。
4. 结果 详细阅读结果 看数据是如何得到的，又是如何分析的。
5. 材料和方法 详细阅读材料和实验方法 看实验是如何进行的。
6. 讨论和结果 进一步掌握论文，注意讨论中的关于从已知的知识和研究如何解释本文获得的结果。另外对于论文中大量的图表来说，当你能够重新画出这张图，并且能用自己的语言解说这张图，表明就读懂了。</p>

<p>一篇论文中最重要的部分依次是: 图表，讨论，文字结果，方法。现在生命科学中的杂志对图表的要求都很高，必须做到仅通过阅读图表及其说明文字即能把握文章的方法、结果，再结合读者自己的原有知识，就大概知道其implication了。这符合现代人必须在最短的时间内把握最必要的信息的要求。因此，在某个领域做了一段工作后，定期查新得到的文章只须看摘要、图表即可，个别涉及新方法或突破性结果，再看讨论，文字结果和方法。这也提示我们在写外文文章时，注重图表及其说明文字，做到形象化、信息最大化。</p>

<p>自己熟悉的领域</p>

<p>最省事的是只看摘要，因为依靠背景知识通过摘要即可大致勾勒出文章内容，但有时这是不够的，相对省事的方法是细看摘要，略读前言，再看结果中的图表，最后读一下自己感兴趣的讨论部分。但如果文章对自己很有意义，那就应该通读全文了。</p>

<p>如在寻找课题阶段，重点读讨论和结论以及展望，在课题设计阶段，主要是材料和方法。若只需了解一下该研究的思路,可选取摘要及引文与结论进行泛读。 个人的经验是尽量去把握作者的研究思路，然后是学习他们的分析方法，最后是学习写作技巧和写作语言方式等。</p>

<p>文章的讨论部分真是很重要，如果时间稍微充裕点，建议研读和模仿牛人paper的讨论部分。不同的人对同样的数据可能有不同看法和分析方式，图表的趋势解析，论据的组合，都是非常看功力的部分，我们老板经常说：如果某篇SCI级别的文章让我们这些菜鸟来写，可能发国内核心都非常困难。</p>

<p>我觉的最重要的是理解讨论中的精髓，这是作者idea创新性以及与旧有的实验结果比较的关键部分，可以看出作者设计此实验的思路，在作出比较以后，对自己的课题会有很大启发。</p>

<p>除了文章内容，还要学习人家写作的方法和格式等等，比如同样一个观点，别人有可能表达的很地道，同样一个图表，别人做的很漂亮，尤其是老外的文章，给老外投稿，人家的修改意见要求文字通俗易懂，带有一定的科普性，即使不是本专业的人，也能大致看懂；然后还要求多用简单句，能用简单句说明的问题，就不要用复合句，在同一句子中，最好不要让同一个词汇或短语重复出现 &hellip;&hellip;</p>

<p>最后想说的一点，就是注意中文和外文的互相印证，注意一些专业词汇的翻译，注意用词的恰当和简洁，久而久之，对于提高自己的外语水平，也是大有裨益的。</p>

<p>文献追踪的重要性</p>

<p>在现在这个信息时代，往往你的idea别人也会有不谋而和的时候，所以要特别关注这个领域的最新动向。在抓紧使自己出成果的同时，随时根据有可能出现的“撞车”进行调整，做到心中有数。和自己课题相关的文章一定要勤跟踪，现在国外的科研做得又快又漂亮，我们在做到心中有数的情况下，可以扬长避短，作出新东西来。了解与自己研究方向有关的机构,密切关注在该研究领域和方向的顶尖group（研究团体以及牛人）所发表的论文。对于数据库的定题、定词地定期搜索，这样才能保证你不丢下每一篇重要的文献。文献总要紧密结合自己的方向为方向服务!</p>

<p>已定课题的实施</p>

<p>1、得到一个大概方向。
2、查相关中文综述，查看国内有谁或哪个单位在做相关内容。
3、查外文综述，比较一下，毕竟外文可能会更详尽一些，看看大家对什么感兴趣。
4、查较关键的参考文献，注意杂志和作者的权威性、引用次数
5、重检相关全文，注意研究方法、和技术路线，讨论中存在什么问题
6、根据本人所能控制的资金和本地技术资源考虑我能做什么，怎么做
7、再进一步紧缩范围，有一个框架图
8、根据框架图再进一步查外文原文以明细节。</p>

<p>实验思路永远要走在实验之前，凡事想好再作，一定没错！</p>

<p>在实验方案的设计和实验细节方面一定要多下功夫,力求用实验室最成熟的技术.对于一些自己没有做过的实验,一定要吃透原理,再下手不迟,切记盲目.有些实验若自己实验室确有困难,可以考虑合作,因为一个人不可能在短时间内把什么都做好.我的体会是,有时就需要请教专家!</p>

<p>作者：往北走 来源：知乎</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Writing Tips for Academics]]></title>
    <link href="http://secdr.github.io/2015/05/04/storytelling-101-writing-tips-for-academics/"/>
    <updated>2015-05-04T01:00:29-07:00</updated>
    <id>http://secdr.github.io/2015/05/04/storytelling-101-writing-tips-for-academics</id>
    <content type="html"><![CDATA[<p>Little did I know that a Ph.D. in computer science would teach me more about how to write than any other previous experience I’d had.  Indeed, research isn’t only about making new discoveries, but also about expressing those discoveries so that other people can appreciate them and their significance.</p>

<p>Below, I’ll present some thoughts on writing that I’ve picked up over the years and continually aim (and encourage students) to put into practice. I’ll focus on story-telling, presentation, and efficiency: how to write your paper so that it clearly, cleanly, and efficiently tells a good story.</p>

<p>What this post is not about.  At least in this post, I won’t write about grammar—there is too much English grammar to cover in a single post, and there are plenty of good courses one can take to learn grammar.  I also won’t talk about style (common phrases) or usage (e.g., commonly misused words).  For now, my only advice on the topic of learning English grammar and style—both for native speakers and foreigners—is to read daily.  Reading the New York Times, or The Economist are great places to start: the writing is generally of high quality, and you’ll also have something interesting to talk about outside of the lab.  I have the impression that foreign students can tend towards reading their local news from home; that’s understandable, but I would encourage those students to also read periodicals and publications that are written in the style of English that people are used to reading in the Western world (indeed, English in different parts of the world has different tones, styles, idioms, and turns of phrase).</p>

<!--more-->


<h3>Why Does Writing Well Matter?</h3>

<p>Writing is part and parcel of the research process.  Writing communicates your research results, and—perhaps contrary to intuition—writing well is even more important when the results that one wants to present are “strong” (after all, if the results are that great, you should want as many people as possible to benefit from understanding them).  But writing isn’t just something that happens at when the research is “done”; rather, writing should occur throughout the course of a research project.  Writing and thinking are tightly coupled—writing is a reflection of our own thoughts, and writing well can actually sometimes clarify our own thinking about a problem and lead us to a solution.</p>

<p>Communicating your results. A research finding or discovery that others cannot understand or appreciate is as good as no discovery in the first place.  A well-written paper with a half-baked idea that people can understand and appreciate will often be accepted to a conference over a paper with a (possibly) stronger result that nobody can understand or appreciate.  Cynics may dismiss this as “unfair”, as “laziness” on the reviewer’s part for not reading the details thoroughly, or as “accepting a paper because it was well-written” (insinuating that the results themselves might not be that strong).  The fact of the matter is that none of this matters: Independently of the quality of the research, the results must be written well, or people will not be able to appreciate the value of your work. Writing well is perhaps one of the most important skills that budding researchers must attain; it is equally important as learning how to conduct the research.</p>

<p>Clarifying your own thinking.  Writing is a reflection of your thinking.  You should never be content with vague language or imprecise descriptions.  Muddy writing often reflects muddy thinking.  An attempt to write down a concept, idea, or solution can actually help you realize that you don’t know what you are talking about!  (And, help you crystallize your thinking.)  You may have had the experience of realizing you don’t understand something as well as you thought you did when someone asks you to explain something and you have trouble.  Writing achieves the same effect: as you attempt to write something down, you may realize that you don’t know why you are working on something, why a particular phenomenon appears, and so forth.  If you don’t force yourself to try to write down your explanations and observations, you may never discover that you don’t know what you’re doing until it’s too late.  Therefore, start writing early in the course of a research project.  Most of the early text you write may not find its way into the final version of the paper, but taking the time to express your ideas on paper can help you crystallize your thoughts and guide your research.</p>

<h3>Tell Me a Story</h3>

<p>Every paper should tell a story.  For a given research result, there are many stories that a paper could tell, and it’s important to think about what the story should be.  This decision should be made early on in the writing process.  The story can be changed later on, to match the strongest results in the paper, or if the context for the research changes (for example, sometimes when working on a research problem, people can find it necessary to re-formulate the problem that they are solving).  But, it’s always good to figure out a story before you go too far down the path.</p>

<p>Determining the Big Picture: Composition and “Flow”. Composition is the structure and flow of your paper writeup, and how individual paragraphs fit together.  When people talk about the “flow” of a piece of writing, they’re talking about composition: how sentences flow together to form paragraphs, how paragraphs flow together to form sections, and how sections flow together to form a paper.  Composition (or “flow”) is the most important aspect of technical writing.  I’ve found that reviewers (and readers) are often forgiving of the occasional grammatical error, especially if a paper was written by non-native English speakers.  The human brain is pretty good at applying “error correction” on grammar.  Correcting “flow”, on the other hand, is extremely hard for a reader to do.  Often, the reader will complain that they “can’t understand where [the paper] is going” and simply give up.  Grammar is also easier to teach (and learn) than composition because there are fixed rules for grammar; composition is more of an art form, and it does involve a bit of intuition.  It involves thinking about the big picture, the story that you want to tell, and how the pieces fit together.  It takes practice to develop intuition for composition, and I’ve found that native English speakers are not necessarily any better at composition than foreigners are (that’s good news for Ph.D. students coming from abroad: the playing field is actually more level than it appears).  Even though composition is a bit of an art form, I’ve found that the following tips can be incredibly helpful for improving flow:</p>

<p>Build the scaffolding before filling in the details. Write sections and topic sentences first.  There is always the temptation to simply jump in and start writing full paragraphs.  This rarely ends well.  Nobody would build a house before first drawing plans.  After the plans comes a foundation, and scaffolding.  Only after the structure is in place can many of the details be filled in.  You should think about writing a paper in the same way: before you can fill in the details, you need to figure out how you want the paper to read when its done; this is your outline.  Start at a high level, by outlining sections.  Once you have an outline of sections, you can begin to slowly fill in more details: outline each paragraph within a section by writing only the topic sentence for the paragraph.  See whether your story makes sense if you read each topic sentence in sequence.  Your “paper” should roughly make sense if you read these topic sentences in sequence (in fact, some reviewers or readers may try to read your paper in exactly this fashion, by skimming topic sentences!).  If reading your topic sentences in sequence doesn’t make sense, something is wrong with your flow.   Determining which topic sentences to write takes a bit of practice, but I find that making a bulleted list of points that you want to include in the section and then clustering those points into related points and topics can help identify the topics you want to cover (and, hence, the topic sentences you want to write).  If you find that the topics you want to cover are not all related to one another, you may need to create additional subsections.  Once you have topic sentences, you can fill in paragraphs, which are groups of closely (and logically) related sentences.  If your sentences aren’t closely related, they don’t belong in the same paragraph and you may need to consider adding a new topic (and topic sentence).
Assess balance and budget pages accordingly.  Once you have your outline, it’s important to budget pages, to figure out how much you plan to write about each topic.  Topics of equal importance or equal relevance should receive “balanced” coverage in the paper.  If your system has two components of relatively equal importance, then the sections covering those components should be of approximately equal length in the paper.  Once you have your outline (from the previous step), you can assess how much space you want to budget for each point.  If some points in a section are more important than others (and hence require more page budget), you can go back and think about how to re-balance your writeup (e.g., by creating a new devoted section to the topic that’s more important, shortening or eliminating the less important point, and so forth).
Follow convention.  Continuing the analogy of a house or building, many designs follow convention: a restroom in a restaurant is often in the back.  A powder room in a house is often near the front door.  These common “design patterns” make life easier for us when we visit a new building or house.  Similarly, your reader is a visitor of your thought process.  A reader who has read (and written) many research papers will similarly expect the structure of your paper to follow certain conventions.  These conventions differ by field: some fields write papers completely in the passive voice, whereas others use active voice.  Some fields prefer related work sections at the beginning of the paper, and others prefer related work at the end.  Some fields expect an introduction that spends time framing the problem, and others expect an introduction that starts with a clear statement of the main result.  There may be an expectation of (or aversion) to mathematics in the main line of the paper.  Within a section, people may expect the introduction to flow in a particular way (in computer science, Jim Kurose’s description of how to write an intro is the best example I’ve seen for writing a conventional paper introduction).
Signpost your paper.  Even if your paper plan and outline make perfect sense to you, the reader doesn’t start out “on the same page” as you.  Even if the builders have built a house completely according to the blueprints, even if the design of the house follows convention, visitors still typically appreciate an explanation of where the bathroom is.  The reader needs instructions for how to read the paper and a clear view for how the paper and story will proceed.  Signposts throughout the paper help the reader understand how the paper is organized.  Examples of signposts include: an outline of the paper at the end of the introduction (“The rest of this paper proceeds as follows.”), a preamble to each section (“In this section, we discuss…”), declarative subsection titles, and (within reason) bold paragraph headings (such as those in this blog post).
Make a Good Impression
A reader forms an impression about your research based on your presentation of the work.  Just as people quickly form first impressions about other people that may be difficult to subsequently correct, your reader will quickly form a first impression of your work based on a quick read of the title, abstract, and introduction and perhaps a quick skim through other parts of the paper.  Therefore, it is important to make a good impression by writing a clear abstract and introduction (and also ensuring that the rest of the paper also is commensurate with the impression that you create).</p>

<p>Spend a lot of time on your introduction; start early.  The introduction summarizes the story of your paper (now, it should be doubly clear why you need a story!) and is the most important part of your paper.  Many people won’t read past the introduction, even if they find the work interesting.  Yet, if people don’t understand your “story” (the problem you’re solving, its importance, and your approach to solving it), they will never make it past the introduction into the details of the paper.  There are two schools of thought for writing the introduction: if you write it first, you ensure that you have a clear story.  If you write it last, then your introduction will clearly reflect the ultimate story and be bolstered by your results.  My advice is to do both.  Writing the introduction is probably the most difficult part of writing the paper, which may come as a surprise to new students.  After all, the introduction is high-level and often doesn’t reflect the nitty gritty details of how difficult that experiment was to run, and how much toil went into writing the system.  To the contrary, distilling your work from those details so that the rest of the world can digest the takeaways—stepping out of the weeds and trying to figure out why your work matters—can take more effort than anything.  The same results can be presented in many different ways, so you will likely need to perform many iterations on your story.  Typically, you can “test” your story out on other colleagues and readers with a draft introduction in parallel with completing the rest of your work.</p>

<p>Write the introduction first—and last. I typically try (and encourage students) to write a draft of the paper’s introduction before writing other parts of the paper.  You will most likely eventually discard this draft completely, since it’s very hard to predict what one should be emphasizing in the introduction before the “meat” of the paper is done.  Yet, writing an early introduction draft allows a researcher to put the work in context, and to argue (1) what the problem is, (2) why it is hard, and (3) why the solution (if it is achieved) will be interesting to readers.  If an introduction draft can’t articulate answers to these questions, even at an early stage in the research, then the work likely needs some focus, as well.  When you write the second version of your introduction (after the rest of the paper is written), you are in a good position to refine your story, making sure that any claims you make are clearly supported by your results and data.  Your results should be stated as clearly and specifically as possible.  You should neither understate your results (which might cause the reader to lose interest and stop reading) or overstate them (which might cause the reader to be annoyed or “let down” when they dig in and find that you don’t deliver on what you’ve promised).</p>

<p>Perform some “landscaping” on your paper.  Your paper should be pleasing to the eye.  Care in preparation of the paper suggests that you also cared about the research itself.   Conversely, if the preparation of the paper is sloppy, how can the reader trust that you were not similarly sloppy in writing code, setting up and running your experiments, and analyzing your results?  Therefore, take some time to make your paper look nice. Here are a few quick tips on “landscaping” your paper.</p>

<p>Eliminate widows.  Section headings at the bottoms of columns or pages look sloppy.  Depending on your word-processing tool, there are good ways to get rid of widows.  In Latex, you can always use a “\vfill” to kick the section heading to the top of the next column.  Similarly, widows on paragraphs (paragraphs that end with a single word on the last line) look sloppy.  Typically you can eliminate such widows by wordsmithing (see below on omitting needless words).  Latex also has macros such as “\widowpenalty” that help ensure that the text layout avoids widows whenever possible.
Place (and create) signposts, figures, and graphs to create whitespace and avoid “walls of text”.  Reading long installments of technical writing is tiring, and seeing a page of uninterrupted technical writing can psychologically tire the reader before they even begin to read.  Create whitespace and take other steps to break up large chunks of text.  Use paragraph headings to break up long strings of text (ensuring that your headings match the topics you’ve outlined, of course).  Try to space figures, tables, and graphs throughout the paper so that most pages have a mix of figures and text.  If you don’t have a figure to break up the text, consider making one.  Often, a table summarizing results can be useful.  Or, you might find that a figure (or block of pseudocode) describes a concept better than a paragraph in your writeup.  Take steps to ensure that your writeup is not a long stream of text.
Check your spelling.  Run a spell checker.  Every word-processing tool has one, and a writeup that is rife with spelling errors reflects carelessness.  Again, if you can’t be bothered to check your spelling, why should a reader trust that you spent time debugging your experiment or code?  While a reader can forgive grammatical errors, especially when the writeup comes from a non-native English speaker, anyone can run a spell checker, so spelling errors simply reflect carelessness.  That said, not all spell-checkers are perfect, and sometimes typographical errors actually manifest as real words; spell checkers won’t catch those, so they should be used only as a first pass.
Make the last page look decent.  If you’ve edited your text down to remove redundancy, you may find that you have some extra space at the end of your paper.  Try to adjust your formatting so that the last page of the paper looks decent.  If your paper is double-column and you end with references, balance the references across the two columns so that both columns are both equally (partially) filled.  Latex has a “\balance” command that you can use to balance the columns on the last page of your writeup.  If you have a bit more time, you can also make small adjustments to margins, space between columns, space around figures, sizes of figures, and so forth to ensure that the last page doesn’t look like you just suddenly decided to stop writing.
Be Efficient
“I’m sorry I have had to write you such a long letter, but I did not have time to write you a short one.” –Blaise Pascal</p>

<p>After you’ve made a good impression, you still need to engage the reader at least long enough to convey your main message.  You should assume that the reader is busy, has a short attention span, and (unlike the situation when they are, say, reading a news article or novel) simply wants to learn what you’ve done as quickly as possible and then move on.  In contrast to writing a novel, your goal is not to hold the reader in suspense or to illustrate your command of vocabulary or literary construction.  Rather, the goal is to transfer information as efficiently as possible.</p>

<p>Tailor the length of your paper to the information content.  People sometimes feel compelled to stuff a paper to the conference’s or journal’s page limit (after all, if the paper is too short, isn’t there “more work to do”?).  I’ve had a few papers that do fall short of the page limit, although I’ve found that this scenario is the exception rather than the rule (see Blaise Pascal: it takes time to shorten a paper!).   Remember that your goal is to efficiently transfer information. Therefore, economize on words.  Do not add unnecessary sentences, paragraphs, or other content that do not support a topic or point that you’ve explicitly outlined.</p>

<p>Keep words simple and sentences short. The easier it is to read your paper, the more likely a reader will keep reading.  Therefore, don’t make the reader work harder than they have to.  On a sentence level, follow Strunk and White’s most indispensable advice: Omit needless words (e.g., “to” as opposed to “in order to”, “optimizing” instead of “the problem of optimizing”, “This module…” instead of “This is a module that”, “more quickly” instead of “in a shorter time”, “whether” instead of “the question as to whether”).   Avoid padding phrases such as “the fact that” and unnecessary adverbs (e.g., “eliminated” instead of “totally eliminated”, “fast” instead of “very fast”).  Keep words simple (e.g., “use” instead of “utilize”, “new” instead of “novel”), and keep sentences short.</p>

<p>Eliminate redundancy.  Always make at least one (and probably several) editing passes over your paper to cut out redundancy.  You likely (and hopefully) did not write your paper in a linear fashion, and different co-authors may have written different sections or pieces of the paper.  It’s likely that you’ve stated the same point multiple times throughout the paper.  Cutting redundancy takes practice, and it sometimes requires divorcing the editing process from your ego (after all, isn’t that sentence you wrote beautiful?  It’d be a shame to cut it, right?).  If you need help cutting, ask someone else (a co-author or colleague) to help you—they’re not as married to your text as you are.</p>

<p>Be as specific and precise as you can.  Precision is especially important when describing results, and when writing up an experiment or evaluation section.  For example, a good rule of thumb for writing up an evaluation section is:  Would someone be able to reproduce your experiment from your description?  If not, you need to be more clear.  In an evaluation section, clearly state your assumptions; in what context(s) do your results hold?  How general are they?  Clearly describe your evaluation setup, as it sets the context for the results themselves.  What machines did you use to run the evaluation?  What data did you gather to support your conclusions?  What algorithms did you use to analyze the data?  The evaluation setup should read like a recipe.  Someone reading it should be able to reproduce what you’ve done, at least well enough to understand the context of the results.  Similarly, the results should be clearly and precisely described.  Avoid writing sentences such as “This optimization significantly reduced the system’s running time.”  Such vague statements frustrate the reader.  Instead, substitute precise and specific information: “This optimization reduced the system’s running time by 20%”.</p>

<p>Use clear and consistent terminology.  Unclear, vague, and inconsistent terminology is incredibly frustrating and also typically reflects muddy thinking.  If you call something a “node” in one part of your paper, a “host” in another part of the paper, a “client” in another part, and a “machine” in yet another part, people will have absolutely no clue that all of these terms are in fact referring to the same thing.  Before you get too far along in the writing process, clearly define your lexicon.  Defining your terms up front can help clarify your own thinking, by helping you to identify and articulate the important concepts that you will present.  Ultimately, this clarity will be reflected in your writeup.</p>

<h3>Reduction to Practice: Write Every Day</h3>

<p>Writing a technical paper involves clearly presenting a good story, as efficiently as possible.  The above tips should help you compose your story and ensure that it “flows” and ultimately produce a final result that leaves a good impression and communicates your results as efficiently as possible.  But, simply reading this post won’t make you a good writer: putting these tips into practice takes tireless repetition.  Try writing something every day to practice these tips.  Keep a “running draft” of your research paper.  Start a blog and practice composing posts that present shorter and simpler ideas and thoughts than a full research paper.  Keep a diary or notebook.  Ultimately, becoming a good writer requires relentless, daily practice, with continual attention to the above tips.</p>

<p>original url:<a href="http://greatresearch.org/2013/10/11/storytelling-101-writing-tips-for-academics/">Storytelling 101: Writing Tips for Academics</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Writing a Technical Paper]]></title>
    <link href="http://secdr.github.io/2015/05/04/writing-a-technical-paper/"/>
    <updated>2015-05-04T00:52:23-07:00</updated>
    <id>http://secdr.github.io/2015/05/04/writing-a-technical-paper</id>
    <content type="html"><![CDATA[<p>This document describes several simple, concrete ways to improve your writing, by avoiding some common mistakes. The <a href="http://homes.cs.washington.edu/~mernst/advice/write-technical-paper.html#other-resources">end of this document</a> contains more resources for improving your writing.</p>

<p>Some people believe that writing papers, <a href="http://homes.cs.washington.edu/~mernst/advice/giving-talk.html">giving talks</a>, and similar “marketing” activities are not part of research, but an adjunct to it or even an undesirable distraction. This view is inaccurate. The purpose of research is to increase the store of human knowledge, and so even the very best work is useless if you cannot effectively communicate it to the rest of the world. Additionally, writing papers and giving talks will clarify your thinking and thereby improve your research. You may be surprised how difficult it is to clearly communicate your ideas and contributions; doing so will force you to understand them more deeply and enable you to improve them.</p>

<!--more-->


<h3>Know your message, and stay on message</h3>

<p>The goal of writing a paper is to change people&rsquo;s behavior: for instance, to change the way they think about a research problem or to convince them to use a new approach. Determine your goal (also known as your thesis), and focus the paper around that goal.</p>

<p>As a general rule, your paper needs to convince the audience of three key points: that the problem is interesting, that it is hard, and that you solved it. If any of these is missing or unclear, the paper will not be compelling. You&rsquo;ll also need to convince your readers that your contributions are novel. When expressing this, it may be helpful to explain why no one else thought of your approach before, and also to keep in mind how you expect the behavior of readers to change once they appreciate your contributions.</p>

<p>Before you write your paper, you need to understand your audience. Who will read your paper? What are their backgrounds, motivations, interests, and beliefs? What are the key points you want a reader person to take away from your paper? Once you know the thesis and audience, you can determine what points your document should make to achieve its purpose.</p>

<p>For each point in your paper, you need to explain both what and why. Start with what, but don&rsquo;t omit why. For example, it is not enough to state how an algorithm works; you should explain why it works in that way, or why another way of solving the problem would be different. Similarly, it is not sufficient to present a figure and merely help the reader understand what the figure says. You must also ensure that reader understands the significance or implications of the figure and what parts of it are most important.</p>

<h3>Which details to include</h3>

<p>Your purpose is to communicate specific ideas, and everything about your paper should contribute to this goal. If any part of the paper does not do so, then delete or change that part. You must be ruthless in cutting every irrelevant detail, however true it may be. Everything in your paper that does not support your main point distracts from it.</p>

<p>Write for the readers, rather than writing for yourself. In particular, think about what matters to the intended audience, and focus on that. It is not necessarily what you personally find most intriguing.</p>

<p>A common mistake is to focus on what you spent the most time on. Do not write your paper as a chronological narrative of all the things that you tried, and do not devote space in the paper proportionately to the amount of time you spent on each task. Most work that you do will never show up in any paper; the purpose of infrastructure-building and exploration of blind alleys is to enable you to do the small amount of work that is worth writing about. Another way of stating this is that the purpose of the paper is not to describe what you have done, but to inform readers of the successful outcome or significant results, and to convince readers of the validity of those conclusions.</p>

<p>Likewise, do not dwell on details of the implementation or the experiments except insofar as they contribute to your main point. This is a particularly important piece of advice for software documentation, where you need to focus on the software&rsquo;s benefits to the user, and how to use it, rather than how you implemented it. However, it holds for technical papers as well — and remember that readers expect different things from the two types of writing!</p>

<p>The audience is interested in what worked, and why, so start with that. If you discuss approaches that were not successful, do so briefly, and typically only after you have discussed the successful approach. Furthermore, the discussion should focus on differences from the successful technique, and if at all possible should provide general rules or lessons learned that will yield insight and help others to avoid such blind alleys in the future.</p>

<p>Whenever you introduce a strawman or an inferior approach, say so upfront. A reader will (and should) assume that whatever you write in a paper is something you believe or advocate, unless very clearly marked otherwise. A paper should never first detail a technique, then (without forewarning) indicate that the technique is flawed and proceed to discuss another technique. Such surprises confuse and irritate readers. This mistake is often called “leading the reader down the garden path”.</p>

<p>When there are multiple possible approaches to a problem, it is preferable to give the best or successful one first. Oftentimes it is not even necessary to discuss the alternatives. If you do, they should generally come after, not before, the successful one. Your paper should give the most important details first, and the less important ones afterward. Its main line of argument should flow coherently rather than being interrupted. It can be acceptable to state an imperfect solution first (with a clear indication that it is imperfect) if it is a simpler version of the full solution, and the full solution is a direct modification of the simpler one. Less commonly, it can be acceptable to state an imperfect solution first if it is an obvious solution that every reader will assume is adequate; but use care with this rationalization, since you are usually wrong that every reader will jump to the given conclusion.</p>

<h3>Make the organization and results clear</h3>

<p>A paper should communicate the main ideas of your research (such as the techniques and results) early and clearly. Then, the body of the paper can expand on these points; a reader who understands the structure and big ideas can better appreciate the details. Another way of saying this is that you should give away the punchline. A technical paper is not a joke or a mystery novel. The reader should not encounter any surprises, only deeper explanations of ideas that have already been introduced. It&rsquo;s particularly irritating when an abstract or introduction states, “We evaluated the relationship between baldness and beekeeping”, with the key results buried pages later. A better abstract would say, “Male beekeepers are 25% more likely to be bald (p=.04), but there is no statistically significant correlation for female beekeepers.”</p>

<p>The same advice applies at the level of sections and paragraphs. It is a bad approach to start with a mass of details and only at the end tell the reader what the main point was or how the details related to one another. Instead, state the point first and then support it. The reader is more likely to appreciate which evidence is important and why, and is less likely to become confused or frustrated.</p>

<p>For each section of the paper, consider writing a mini-introduction that says what its organization is, what is in each subpart, and how the parts relate to one another. For the whole paper, this is probably a paragraph. For a section or sub-section, it can be as short as a sentence. This may feel redundant to you (the author), but readers haven&rsquo;t spent as much time with the paper&rsquo;s structure as you have, so they will truly appreciate these signposts that orient them within your text.</p>

<p>Some people like to write the abstract, and often also the introduction, last. Doing so makes them easier to write, because the rest of the paper is already complete and can just be described. However, I prefer to write these sections early in the process (and then revise them as needed), because they frame the paper. If you know the paper&rsquo;s organization and outlook, then writing the front matter will take little effort. If you don&rsquo;t, then it is an excellent use of your time to determine that information by writing the front matter. To write the body of the paper without knowing its broad outlines will take more time in the long run. Another way of putting this is that writing the paper first will make writing the abstract faster, and writing the abstract first will make writing the paper faster. There is a lot more paper than abstract, so it makes sense to start with that and to clarify the point of the paper early on.</p>

<p>It is a very common error to dive into the technical approach or the implementation details without first appropriately framing the problem and providing motivation and background. Readers need to understand what the task is before they are convinced that they should pay attention to what you are saying about it. You should first say what the problem or goal is, and — even when presenting an algorithm — first state what the output is and probably the key idea, before discussing steps. Avoid providing information that isn&rsquo;t useful to readers/users. It just distracts from the important content.</p>

<h3>Getting started: overcoming writer&rsquo;s block and procrastination</h3>

<p>Some writers are overwhelmed by the emptiness of a blank page or editor buffer, and they have trouble getting started with their writing. Don&rsquo;t worry! Here are some tricks to help you get started. Once you have begun, you will find it relatively easier to revise your notes or first draft. The key idea is to write something, and you can improve it later.</p>

<p>Start verbally. Explain what the paper needs to say to another person. After the conversation is over, write down what you just said, focusing on the main points rather than every word you spoke. Many people find it easier to speak than to write. Furthermore, getting feedback and giving clarifications will help you discover problems with your argument, explanation, or word choice.</p>

<p>Outline. You may not be ready to write full English paragraphs, but you can decide which sections your paper will have and give them descriptive titles. Once you have decided on the section structure, you can write a little outline of each section, which indicates the subsection titles. Now, expand that into a topic sentence for each paragraph. At this point, since you know the exact topic of each paragraph, you will find the paragraph easy to write.</p>

<p>Stream-of-consciousness notes. Write down everything that you know, in no particular order and with no particular formatting. Afterward, organize what you wrote thematically, bringing related points together. Eventually, convert it into an outline and proceed as above. While writing notes, use phrases/keywords, not complete sentences. The phrases are quicker to write and less likely to derail your brainstorming; they are easier to organize; and you will feel less attached to them and more willing to delete them.</p>

<p>Divide and conquer. Rather than trying to write your entire document, choose some specific part, and write just that part. Then, move on to another part.</p>

<p>Re-use. Find other text that you have written on the topic and start from that. An excellent source is your <a href="http://homes.cs.washington.edu/~mernst/advice/progress-report.html">progress reports</a> — you are writing them, aren&rsquo;t you? This can remind you what was hard or interesting, or of points that you might otherwise forget to make. You will rarely want to re-use text verbatim, both because you can probably convey the point better now, and also because writing for different audiences or in different contexts requires a different argument or phrasing. For example, a technical paper and a <a href="http://homes.cs.washington.edu/~mernst/advice/giving-talk.html">technical talk</a> have similar aims but rather different forms.</p>

<p>It is essential that you be willing to delete and/or rewrite your notes and early drafts. If you wrote something once, you can write it again (probably better!). Early on, the point is to organize your ideas, not to create finished sentences.</p>

<h3>Brevity</h3>

<p>Be brief. Make every word count. If a word does not support your point, cut it out, because excess verbiage and fluff only make it harder for the reader to appreciate your message. Use shorter and more direct phrases wherever possible.</p>

<p>Make your writing crisp and to the point. Eliminate any text that does not support your point. Here is one way you might go about this; it is time-consuming but extremely effective. First, examine each section of the paper in turn and ask what role it serves and whether it contributes to the paper&rsquo;s main point. If not, delete it. Next, within each section, examine each paragraph. Ask whether that paragraph has a single point. If not, rewrite the paragraph. Also ask whether that point contributes to the goals of the section. If not, then delete the paragraph. Next, within each paragraph, examine each sentence. If it does not make a single, clear point that strengthens the paragraph, delete or rewrite it. Finally, within each sentence, examine each word, and delete or replace those that do not strengthen their point. You will need to repeat this entire process multiple times, keeping a fresh perspective on the paper.</p>

<p>Some people find it easier to follow this approach bottom-up, first cutting/rewriting words, then sentences, etc.</p>

<h3>Writing style</h3>

<p>Passive voice has no place in technical writing. It obscures who the actor was, what caused it, and when it happened. Use active voice and simple, clear, direct phrasing.</p>

<p>First person is rarely appropriate in technical writing. First person should never be used to describe the operation of a program or system. It is only appropriate when discussing something that the author of the paper did manually. (And recall that your paper should not be couched as a narrative.) It is confusing to use “we” to mean “the author and the reader” or “the paper” (“In this section, we &hellip;”) or even “the system being described” (“we compute a graph” makes it sound like the authors did it by hand). As a related point, do not anthropomorphize computers: they hate it. Anthropomorphism, such as “the program thinks that &hellip;”, is unclear and vague.</p>

<p>Avoid puffery, self-congratulation, and value judgments: give the facts and let the reader judge.</p>

<p>Do not use words like “obviously” or “clearly”, as in “Obviously, this Taylor series sums to π.” If the point is really obvious, then you are just wasting words by pointing it out. And if the point is not obvious to readers who are not intimately familiar with the subject matter the way you are, then you are offending readers by insulting their intelligence, and you are demonstrating your own inability to communicate the intuition.</p>

<p>Prefer singular to plural number. In “sequences induce graphs”, it is not clear whether the two collections are in one-to-one correspondence, or the set of sequences collectively induces a set of graphs; “each sequence induces a graph” avoids this confusion. Likewise, in “graphs might contain paths”, it is unclear whether a given graph might contain multiple paths, or might contain at most one path.</p>

<p>When describing an experiment or some other action that occurred in the past, use past tense. For example, the methodology section should not say “We run the program”, but “We ran the program”. However, it would be correct to say “Our methodology was to run the program”, where you are using the infinitive “to run”. When describing the paper itself, use present tense. “This paper shows that &hellip;”. The reason for this is that the reader is experiencing the paper in real time; the paper is like a conversation between the authors and the reader.</p>

<p>Avoid gratuitous use of the future tense “will &hellip;”, as in, “switching the red and green wires will cause the bomb to explode”. Instead, use the shorter and more direct “switching the red and green wires causes the bomb to explode”.</p>

<p>In a 3-or-more-element list, it&rsquo;s better to put serial comma between each of the items (including the last two), for clarity. As a simple example of why, consider this 3-element grocery list written without the clarifying last comma: “milk, macaroni and cheese and crackers”. It&rsquo;s not clear whether that means { milk, macaroni and cheese, crackers } or { milk, macaroni, cheese and crackers }. As another example, “I would like to thank my parents, Rene Descartes and Ayn Rand,” suggests rather unusual parentage, whereas “I would like to thank my parents, Rene Descartes, and Ayn Rand,” shows a debt to four people. I&rsquo;ve seen real examples that were even more confusing than these.</p>

<p>Some of the suggestions in this document are about good writing, and that might seem secondary to the research. But writing more clearly will help you think more clearly and often reveals flaws (or ideas!) that had previously been invisible even to you. Furthermore, if your writing is not good, then either readers will not be able to comprehend your good ideas, or readers will be (rightly) suspicious of your technical work. If you do not (or cannot) write well, why should readers believe you were any more careful in the research itself? The writing reflects on you, so make it reflect well.</p>

<h3>Figures</h3>

<p>Use figures! Different people learn in different ways, so you should complement a textual or mathematical presentation with a graphical one. Even for people whose primary learning modality is textual, another presentation of the ideas can clarify, fill gaps, or enable the reader to verify his or her understanding. Figures can also help to illustrate concepts, draw a skimming reader into the text (or at least communicate a key idea to that reader), and make the paper more visually appealing.</p>

<p>It is extremely helpful to give an example to clarify your ideas: this can make concrete in the reader&rsquo;s mind what your technique does (and why it is hard or interesting). A running example used throughout the paper is also helpful in illustrating how your algorithm works, and a single example permits you to amortize the time and space spent explaining the example (and the reader&rsquo;s time in appreciating it). It&rsquo;s harder to find or create a single example that you re-use throughout the paper, but it is worth it.</p>

<p>A figure should stand on its own, containing all the information that is necessary to understand it. Good captions contain multiple sentences; the caption provides context and explanation. For examples, see magazines such as Scientific American and American Scientist. Never write a caption like “The Foobar technique”; the caption should also say what the Foobar technique is, what it is good for, or how it works. The caption may also need to explain the meaning of columns in a table or of symbols in a figure. However, it&rsquo;s even better to put that information in the figure proper; for example, use labels or a legend. When the body of your paper contains information that belongs in a caption, there are several negative effects. The reader is forced to hunt all over the paper in order to understand the figure. The flow of the writing is interrupted with details that are relevant only when one is looking at the figure. The figures become ineffective at drawing in a reader who is scanning the paper — an important constituency that you should cater to!</p>

<p>As with naming, use pictorial elements consistently. Only use two different types of arrows (or boxes, shading, etc.) when they denote distinct concepts; do not introduce inconsistency just because it pleases your personal aesthetic sense. Almost any diagram with multiple types of elements requires a legend (either explicitly in the diagram, or in the caption) to explain what each one means; and so do many diagrams with just one type of element, to explain what it means.</p>

<p>I am not fond of having many different types of figures in a paper — some labeled “figure”, others labeled “table” or “graph” or “picture”. This makes it very hard to find “table 3”, which might appear after “figure 7” but before “freehand drawing 1”. It&rsquo;s best to simply call them all figures and number them sequentially; the body of each figure can be a table, a graph, a drawing, or whatever.</p>

<h3>Computer program source code</h3>

<p>Your code examples should either be real code, or should be close to real code. Never use synthetic examples such as procedures or variables named foo or bar. Made-up examples are much harder for readers to understand and to build intuition regarding. Furthermore, they give the reader the impression that your technique is not applicable in practice — you couldn&rsquo;t find any real examples to illustrate it, so you had to make something up.</p>

<p>Any boldface or other highlighting should be used to indicate the most important parts of a text. In code snippets, it should never be used to highlight syntactic elements such as “public” or “int”, because that is not the part to which you want to draw the reader&rsquo;s eye. (Even if your IDE happens to do that, it isn&rsquo;t appropriate for a paper.) For example, it would be acceptable to use boldface to indicate the names of procedures (helping the reader find them), but not their return types.</p>

<h3>Naming</h3>

<p>Give each concept in your paper a descriptive name to make it more memorable to readers. Never use terms like “approach 1”, “approach 2”, or “our approach”, and avoid acronyms when possible. If you can&rsquo;t think of a good name, then quite likely you don&rsquo;t really understand the concept. Think harder about it to determine its most important or salient features.</p>

<p>It is better to name a technique (or a paper section, etc.) based on what it does rather than how it does it.</p>

<p>Use terms consistently and precisely. Avoid “elegant variation”, which uses different terms for the same concept, to avoid boredom on the part of the reader or to emphasize different aspects of the concept. While elegant variation may be appropriate in poems, novels, and some essays, it is not acceptable in technical writing, where you should clearly define terms when they are first introduced, then use them consistently. If you switch wording gratuitously, you will confuse the reader and muddle your point; the reader of a technical paper expects that use of a different term flags a different meaning, and will wonder what subtle difference you are trying to highlight. Thus, don&rsquo;t confuse the reader by substituting “program”, “library”, “component”, “system”, and “artifact”, nor by conflating “technique”, “idea”, “method” and “approach”, nor by switching among “program”, “code”, and “source”. Choose the best word for the concept, and stick with it.</p>

<p>Do not use a single term to refer to multiple concepts. If you use the term “technique” for every last idea that you introduce in your paper, then readers will become confused. This is a place that use of synonyms to distinguish concepts that are unrelated (from the point of view of your paper) is acceptable. For instance, you might always use “phase” when describing an algorithm but “step” when describing how a user uses a tool.</p>

<p>When you present a list, be consistent in how you introduce each element, and either use special formatting to make them stand out or else state the size of the list. Don&rsquo;t use, “There are several reasons I am smart. I am intelligent. Second, I am bright. Also, I am clever. Finally, I am brilliant.” Instead, use “There are four reasons I am smart. First, I am intelligent. Second, I am bright. Third, I am clever. Fourth, I am brilliant.” Especially when the points are longer, this makes the argument much easier to follow. Some people worry that such consistency and repetition is pedantic or stilted, or it makes the writing hard to follow. There is no need for such concerns: none of these is the case. It&rsquo;s more important to make your argument clear than to achieve “elegant variation” at the expense of clarity.</p>

<p>Choose good names not only for the concepts that you present in your paper, but for the document source file. Don&rsquo;t name the file after the conference to which you are submitting (the paper might be rejected) or the year. Even if the paper is accepted, such a name won&rsquo;t tell you what the paper is about when when you look over your source files in later years. Instead, give the paper or its folder/directory a name that reflects its content.</p>

<p>Here is a piece of advice that is specific to computing: do not use the vague, nontechnical term “bug”. Instead, use one of the <a href="http://en.wikipedia.org/wiki/Dependability">standard terms</a> fault, error, or failure. A fault is an underlying defect in a system, introduced by a human. A failure is a user-visible manifestation of the fault. In other circumstances, “bug report” may be more appropriate than “bug”.</p>

<h3>Numbers and measurements</h3>

<p>Use a consistent number of digits of precision. If the measured data are 1.23, 45.67, and 891.23, for example, you might report them as 1.23, 45.7, and 891, or as 1.2, 46, and 890, or as 1, 50, and 900. Use an appropriate number of digits of precision that reflects the measurement process. The 3rd or 4th digit of precision is rarely accurate and generalizable; if you don&rsquo;t have confidence in it, omit it. Keep in mind the message you wish to convey to readers — too many digits of precision, or other irrelevant details, can distract readers from the larger trends and the big picture. And, including an inappropriate number of digits of precision can cast suspicion on all of your results, by giving readers the impression that you are statistically naive. If you do any computations such as ratios, you should internally use the full precision of your actual measurements, but your paper will report only a limited number of digits of precision. If a measurement is exact, such as a count of items, then it can be acceptable to give the entire number even if it has many digits; by contrast, timings and other inexact measurements should always be reported with a limited number of digits of precision.</p>

<p>Do not confuse relative and absolute measurements. For instance, suppose your medicine cures 30% of patients, and the placebo cures 25% of patients. You could report that your medicine&rsquo;s cure rate is .3, the placebo&rsquo;s cure rate is .25, and your medicine&rsquo;s cure rate is either .05 greater or 20% greater. (Other correct, but less good, ways to say the same thing are that it cures cures 20% more, 120% as many, or 1.2 times as many patients.) It would be inaccurate to state that your medicine cures 5% more patients or your medicine cures 120% more patients. Just as you need to correctly use “120% more” versus “120% as many”, you need to correctly use “3 times faster than” versus “3 times as fast as”. A related, also common, confusion is between “3 times faster than and 3 times as fast as”. And, “2 times fewer” makes absolutely no sense. I would avoid these terms entirely. “Half as many” is a much better substitute for “2 times fewer”.</p>

<p>Given the great ease of misunderstanding what a percentage means or what its denominator is, I try to avoid percentages and focus on fractions whenever possible, especially for base measurements. For comparisons between techniques, percentages can be acceptable. Avoid presenting two different measurements that are both percentages but have different denominators.</p>

<h3>Processing data</h3>

<p>Your paper probably includes tables, bibliographies, or other content that is generated from external data. Your paper may also be written in a text formatting language such as LaTeX. In each of these cases, it is necessary to run some external command to create some of the content or to create the final PDF.</p>

<p>All of the steps to create your final paper should be clearly documented — say, in comments or in a notes file that you maintain with the paper — and, preferably, should be automated so that you only have to run one command that collects all the data, creates the tables, and generates the final PDF.</p>

<p>If you document and automate these steps, then you can easily regenerate the paper when needed. This is useful if you re-run experiments or analysis, or if you need to defend your results against a criticism by other researchers. If you leave some steps manual, then you or your colleagues are highly likely to make a mistake (leading to a scientific error) or to be unable to reproduce your results later.</p>

<p>One good way to automate these tasks is by writing a program or creating a script for a build system such as Make or Ant.</p>

<h3>Related work</h3>

<p>A related work section should not only explain what research others have done, but in each case should compare and contrast that to your work and also to other related work. After reading your related work section, a reader should understand the key idea and contribution of each significant piece of related work, how they fit together (what are the common themes or approaches in the research community?), and how your work differs. Don&rsquo;t write a related work section that is just a list of other papers, with a sentence about each one that was lifted from its abstract, and without any critical analysis nor deep comparison to other work.</p>

<p>Unless your approach is a small variation on another technique, it is usually best to defer the related work to the end of the paper. When it comes first, it gives readers the impression that your work is rather derivative. (If this is true, it is your responsibility to convey that clearly; it it is not true, then it&rsquo;s misleading to intimate it.) You need to ensure that readers understand your technique in its entirety, and also understand its relationship to other work; different orders can work in different circumstances.</p>

<p>Just as you should generally explain your technique first, and later show relationships with other work, it is also usually more effective to defer a detailed discussion of limitations to a later section rather than the main description of your technique. You should be straightforward and honest about the limitations, of course (do mention them early on, even if you don&rsquo;t detail them then), but don&rsquo;t destroy the coherence of your narrative or sour the reader on your technique.</p>

<h3>Feedback</h3>

<p>Get feedback! Finish your paper well in advance, so that you can improve the writing. Even re-reading your own text after being away from it can show you things that you didn&rsquo;t notice. An outside reader can tell you even more.</p>

<p>When readers misunderstand the paper, that is always at least partly the author&rsquo;s fault! Even if you think the readers have missed the point, you will learn how your work can be misinterpreted, and eliminating those ambiguities will improve the paper.</p>

<p>Be considerate to your reviewers, who are spending their time to help you. Here are several ways to do that.</p>

<p>As with submission to conferences, don&rsquo;t waste anyone&rsquo;s time if there are major flaws. Only ask someone to read (a part of) your paper when you think you will learn something new, because you are not aware of serious problems. If only parts are ready, it is best to indicate this in the paper itself (e.g., a TODO comment that the reader will see or a hand-written annotation on a hardcopy) rather than verbally or in email that can get forgotten or separated from the paper.</p>

<p>It is most effective to get feedback sequentially rather than in parallel. Rather than asking 3 people to read the same version of your paper, ask one person to read the paper, then make corrections before asking the next person to read it, and so on. This prevents you from getting the same comments repeatedly — subsequent readers can give you new feedback rather than repeating what you already knew, and you&rsquo;ll get feedback on something that is closer to the final version. If you ask multiple reviewers at once, you are de-valuing their time — you are indicating that you don&rsquo;t mind if they waste their time saying something you already know. You might ask multiple reviewers if you are not confident of their judgment or if you are very confident the paper already is in good shape, in which case there are unlikely to be major issues that every reviewer stumbles over.</p>

<p>It usually best not to email the document, but to provide a location from which reviewers can obtain the latest version of the paper, such as a version control repository or a URL you will update. That way, you won&rsquo;t clutter inboxes with many revisions, and readers can always get the most recent copy.</p>

<p>Be generous with your time when colleagues need comments on their papers: you will help them, you will learn what to emulate or avoid, and they will be more willing to review your writing.</p>

<p>Some of your best feedback will be from yourself, especially as you get more thoughtful and introspective about your writing. To take advantage of this, start writing early. One good way to do this is to write a periodic progress report that describes your successes and failures. The progress report will give you practice writing about your work, oftentimes trying out new explanations.</p>

<p>Whereas you should start writing as early as possible, you don&rsquo;t need to put that writing in the form of a technical paper right away. In fact, it&rsquo;s usually best to outline the technical paper, and get feedback on that, before you start to fill in the sections with text. (You might think that you can copy existing text into the paper, but it usually works out better to write the information anew. With your knowledge of the overall structure, goals, and audience, you will be able to do a much better job.) When outlining, I like to start with one sentence about the paper; then write one sentence for each section of the paper; then write one sentence for each subsection; then write one sentence for each paragraph (think of this as the topic sentence); and at that point, it&rsquo;s remarkably easy just to flesh out the paragraphs.</p>

<h3>Responding to conference reviews</h3>

<p>(This section is most relevant to fields like computer science where conferences are the premier publication venue. Responding to journal reviews is different.)</p>

<p>Many conferences provide an author response period: the authors are shown the reviews and are given limited space (say, 500 words) to respond to the reviews, such as by clarifying misunderstandings or answering questions. The author response is sometimes called a “rebuttal”, but I don&rsquo;t like that term because it sets an adversarial tone.</p>

<p>Your paper will only be accepted if there is a champion for the paper: someone who is excited about it and will try to convince the rest of the committee to accept the paper. Your response needs to give ammunition to your champion to overcome objections. If there isn&rsquo;t a champion, then the main goal of your response is to create that champion.</p>

<p>Read the reviews and decide what points you will respond to. You need to focus on the most important and substantive ones.</p>

<p>In your responses, admit your errors forthrightly. Don&rsquo;t ignore or avoid key issues, especially ones that multiple reviewers brought up.</p>

<p>Your response to each point will be one paragraph in your response. Start the paragraph with a brief heading or title about the point. Do not assume that the reviewers remember everything that was written by every reviewer, nor that they will re-read their reviews before reading your response. A little context will help them determine what you are talking about and will make the review stand on its own. This also lets you frame the issues in your own words, which may be clearer or address a more relevant point than the reviews did.</p>

<p>Organize your responses thematically. Group the paragraphs into sections, and have a small heading/title for each section. If a given section has just one paragraph, then you can use the paragraph heading as the section heading. Order the sections from most to least important.</p>

<p>This is better than organizing your response by reviewer, first addressing the comments of reviewer 1, then reviewer 2, and so forth. Downsides of by-reviewer organization include:</p>

<p>It can encourage you not to give sufficient context.
It does not encourage putting related information together nor important information first.
You want to encourage all reviewers to read the entire response, rather than encouraging them to just look at one part.
When multiple reviewers raised the same issue, then no matter where you address it, it&rsquo;s possible for a reviewer to overlook it and think you failed to address it.
You don&rsquo;t want to make glaringly obvious which issues in a review you had to ignore (for reasons of space or other reasons).
You don&rsquo;t want to make glaringly obvious that you spent much more time and space on one reviewer than another.
In general, it&rsquo;s best not to mention reviewer names/numbers in your response at all. Make the response be about the science, not about the people.</p>

<p>Finally, be civil and thankful the reviewers. They have spent considerable time and energy to give you feedback (even if it doesn&rsquo;t seem to you that they have!), and you should be grateful and courteous in return.</p>

<h3>Rejection</h3>

<p>If you submit technical papers, you will experience rejection. In some cases, rejection indicates that you should move on and begin a different line of research. In most cases, the reviews offer an opportunity to improve the work, and so you should be very grateful for a rejection! It is much better for your career if a good paper appears at a later date, rather than than a poor paper earlier or a sequence of weak papers.</p>

<p>Even small flaws or omissions in an otherwise good paper may lead to rejection. This is particularly at the elite venues with small acceptance rates, where you should aim your work. Referees are generally people of good will, but different referees at a conference may have different standards, so the luck of the draw in referees is a factor in acceptance.</p>

<p>The wrong lesson to learn from rejection is discouragement or a sense of personal failure. Many papers — even papers that later win awards — are rejected at least once. The feedback you receive, and the opportunity to return to your work, will invariably improve your results.</p>

<p>Don&rsquo;t be put off by a negative tone in the reviews. The referees are trying to help you, and the bast way to do that is to point out how your work can be improved. I often write a much longer review, with more suggestions for improvement, for papers that I like; if the paper is terrible, I may not be able to make as many concrete suggestions, or my high-level comments may make detailed comments moot.</p>

<p>If a reviewer didn&rsquo;t understand something, then the main fault almost always lies with your writing. If you blame a lazy or dumb reviewer, you are missing the opportunity to improve. Reviewers are not perfect, but they work hard to give you helpful suggestions, so you should give them the benefit of the doubt. Remember that just as it is hard to convey technical ideas in your paper (and if you are getting a rejection, that is evidence that you did not succeed!), it is hard to convey them in a review, and the review is written in a few hours rather than the weeks you spent on the paper (not to mention months or years of understanding the concepts). You should closely attend to both the explicit comments, and to underlying issues that may have led to those comments — it isn&rsquo;t always easy to capture every possible comment in a coherent manner. Think about how to improve your research and your writing, even beyond the explicit suggestions in the review — the prime responsibility for your research and writing belongs with you.</p>

<p>Should you submit an imperfect paper? On the plus side, getting feedback on your paper will help you to improve it. On the other hand, you don&rsquo;t want to waste reviewers&#8217; time nor to get a reputation for submitting half-baked work. If you know the flaws that will make the referees reject your paper, or the valid criticisms that they will raise, then don&rsquo;t submit the paper. Only submit if you aren&rsquo;t aware of show-stoppers and you are not embarrassed for the community to associate your name with the work, in its current form.</p>

<h3>Norman Ramsey&rsquo;s advice</h3>

<p>Norman Ramsey&rsquo;s nice <a href="http://www.cs.tufts.edu/~nr/pubs/two-abstract.html">Teach Technical Writing in Two Hours per Week</a> espouses a similar approach to mine: by focusing on clarity in your writing, you will inevitably gain clarity in your thinking.</p>

<p>Don&rsquo;t bother to read both the student and instructor manuals — the student one is a subset of the instructor one. You can get much of the benefit from just one part, his excellent “principles and practices of successful writers”:</p>

<h3>Principles</h3>

<p>Correctness. Write correct English, but know that you have more latitude than your high-school English teachers may have given you.
Consistent names. Refer to each significant character (algorithm, concept, language) using the same word everywhere. Give a significant new character a proper name.
Singular. To distinguish one-to-one relationships from n-to-m relationships, refer to each item in the singular, not the plural.
Subjects and verbs. Put your important characters in subjects, and join each subject to a verb that expresses a significant action.
Information flow. In each sentence, move your reader from familiar information to new information.
Emphasis. For material you want to carry weight or be remembered, use the end of a sentence.
Coherence. In a coherent passage, choose subjects that refer to a consistent set of related concepts.
Parallel structure. Order your text so your reader can easily see how related concepts are different and how they are similar.
Abstract. In an abstract, don&rsquo;t enumerate a list of topics covered; instead, convey the essential information found in your paper.
Practices</p>

<p>Write in brief daily sessions. Ignore the common myth that successful writing requires large, uninterrupted blocks of time — instead, practice writing in brief, daily sessions.
Focus on the process, not the product. Don&rsquo;t worry about the size or quality of your output; instead, reward yourself for the consistency and regularity of your input.
Prewrite. Don&rsquo;t be afraid to think before you write, or even jot down notes, diagrams, and so on.
Use index cards. Use them to plan a draft or to organize or reorganize a large unit like a section or chapter.
Write a Shitty First Draft™. Value a first draft not because it&rsquo;s great but because it&rsquo;s there.
Don&rsquo;t worry about page limits. Write the paper you want, then cut it down to size.
Cut. Plan a revision session in which your only goal is to cut.</p>

<h3>Other resources</h3>

<ul>
<li><a href="http://homes.cs.washington.edu/~mernst/advice/write-technical-paper.html#norman-ramsey">Norman Ramsey&rsquo;s advice</a>, excerpted immediately above.</li>
<li><a href="http://homes.cs.washington.edu/~mernst/advice/meng-thesis.html">“Hints on writing an M.Eng. thesis”, by Jeremy Nimmer</a></li>
<li>my notes on <a href="http://homes.cs.washington.edu/~mernst/advice/review-technical-paper.html">reviewing a technical paper</a>, which indicate how to recognize — and thus produce — quality work</li>
<li>my notes on <a href="http://homes.cs.washington.edu/~mernst/advice/conferences-vs-journals.html">choosing a venue for publication</a></li>
<li>my notes on <a href="http://homes.cs.washington.edu/~mernst/advice/giving-talk.html">giving a technical talk</a>: a talk has the same goal as a paper, namely to convey technical ideas</li>
<li>my notes on making a <a href="http://homes.cs.washington.edu/~mernst/advice/write-poster.html">technical poster</a></li>
<li>Ronald B. Standler&rsquo;s advice on <a href="http://www.rbs0.com/tw.htm">technical writing</a></li>
<li><a href="http://www.cs.berkeley.edu/~pattrsn/talks/writingtips.html">Dave Patterson&rsquo;s Writing Advice</a></li>
<li><a href="http://www.sigplan.org/authorInformation.htm">Advice on SIGPLAN conference submissions</a></li>
<li>The Elements of Style, William Strunk Jr. and E. B. White, is classic book on improving your writing. It focuses at a low level, on English usage.</li>
<li>Style: Toward Clarity and Grace, by Joseph M. Williams, is another general-purpose writing guide, with a somewhat higher-level focus than that of Strunk &amp; White.</li>
</ul>


<p>orignal link: <a href="http://homes.cs.washington.edu/~mernst/advice/write-technical-paper.html">Writing a technical paper</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[科研心得]]></title>
    <link href="http://secdr.github.io/2015/05/04/research-summary/"/>
    <updated>2015-05-04T00:49:30-07:00</updated>
    <id>http://secdr.github.io/2015/05/04/research-summary</id>
    <content type="html"><![CDATA[<p>这些年自己在科研工作中有过困惑和领悟，因此我想利用这个blog把它们写下来。这些问题其实没有标准答案、对错等等，仅仅是一些想法。</p>

<p>我最近参加conference的时候，知道有些同行和学生看过我的这些posts。如果你有什么有趣的问题、评论等，欢迎利用这个blog交流。</p>

<h3>part1</h3>

<p>Q: 我导师让我看的东西没有什么理论。我喜欢有beauty的事情。我觉得研究也应该有beauty，可是我每天看见的都是杂乱无章的东西，实在没意思。怎么办？</p>

<p> A:  我也喜欢有beauty的东西，包括研究。可是我真正喜欢做的恰恰是把今天看来ugly的东西变成beautiful的东西。这是我认为的scientific contribution. 如果你每天摆弄的已经是beautiful的东西，能有什么contribution呢？比如，LR文法很漂亮地解决了programming language的parsing，还有多少有眼光的学者愿意再研究此问题呢？</p>

<!--more-->


<p>门捷列夫元素周期表给后人看多漂亮。可我相信门捷列夫首先看见的是杂乱无章的东西。是他给了我们beauty。漂亮的研究工作就是你能把沙子吞进去，再在把金子吐出来.</p>

<p> Q : 我导师让我找课题。我发现其实到了今天，在system security领域，该做的idea都已经被别人做了。你觉得呢？(Credit: 这个Q&amp;A受到我的实习生王锐与我交谈的启发)</p>

<p>A:  不止一个学生向我谈到这个“发现”。对这个“发现”可以有两种理解。一、system security领域好的课题真的很少了；二、你想到的每个好课题都被别人做过了。有科研经历的人都知道找题一直都是非常难的。要想证明第一种观点，你显然要说明为什么今天（2010年春天）比以往更难找system security topic。是学术界或工业界发生了什么大变化吗？似乎没有。看看2010年的Oakland论文集，论文质量比以往显著下降了吗？似乎也没有。也可能真的在很多年以后回顾system security research的历史，发现2010年春天是个“断层”— 在此之前还算欣欣向荣，在此之后突然终止。但是我会忽略这个可能性。</p>

<p>我觉得更可能的情况是你自己在2010年春天没有找到好的课题，因此有了这个不爽的“发现”。那怎么办呢？我有些建议：一、充分认识到找题就是一件很难的事，要有足够的耐心；二、是不是你的focus太小了？你也许只是在一个specific sub-domain中找。应该拓宽自己的background；三、你找题是不是天天盯着论文集，看看别人缺那块你给补上？这样很难找好的题目。艺术家经常强调深入生活。找题也有些类似 – 应该是来源于对现实事物的观察，向别人展示你独特的视角。如果你能发现一件人们经常看经常用的东西蕴藏着一些一般人没有想到的巧妙之处，别人当然会很欣赏你的科研能力。</p>

<p> Q: 科研在很多时候也就是搞笑。有多少时候科研成果真正有用？无非自娱自乐而已。</p>

<p>A:  我有时有同感，但没有你这么绝对。要知道科研是一种投资，包括积累知识、培养人才。这种投资就象买彩票。买的时候你不知道哪张会中大奖。如果没有科研活动，我觉的人类还会象工业革命之前那么落后，所以可以肯定的是科研活动总体上是推动社会的，而不是纯粹自娱自乐。这好比花了很多钱买彩票，兑奖后发现总体还是赚了的。当然，我们总还是希望少买些中不了的彩票，但这是个research management的问题，是具体的评价奖惩措施的问题，并不会上升到科研对社会的意义这个高度。</p>

<p>其实更重要的一点是：你知道有些人的科研不是搞笑的。如果你有自由选择搞笑或不搞笑，你会选择什么？当然，如果你所在的环境不允许你选择“不搞笑”，那就另当别论了。</p>

<p> Q: 你们微软研究院的研究似乎着眼于非常实际的问题。我们在大学里可能更兴趣有理论意义的问题。这是否是公司与大学的不同目标造成的差别？(Credit: 这个Q&amp;A来自于与一位清华在校博士生的交谈)</p>

<p>A:  我不认为公司研究院“应该”做什么样的研究和大学“应该”做什么样的研究有区别。只要是一流的研究，大家都“应该”做。微软研究院有理论天才，包括Fields Medal winner. 考虑一个课题该不该做，出发点不是说它是理论的还是实际的，而是它是不是top的。</p>

<p>我个人的观点是在system security领域，绝大多数top research是来自实际问题。可能会有理论成分，但最终又回归到实际中去。我总觉得模型、公式、定理都只是一种交流的语言。真正有价值的是观察，思考与实践。另外，美国的顶尖大学的课题似乎也相当结合实际的。</p>

<p> Q: 微软研究院的研究员似乎不太相信数学的力量，似乎不相信理论指导实践这种说法。比如，我提出在搭建实际系统前要建理论模型，进行simulation。他们说没必要，直接搭建实际系统再说。(Credit: 这个Q&amp;A来自于与一位实习生的交谈)</p>

<p>A:  我对你的领域不很了解。如果问我对“理论指导实践”这种说法是否赞同，我觉得因情况而异。到底理论在多大程度上能说明实际？有个很有意思的说法(credit: Emre Kiciman):“理论上说，理论应该吻合于实际；但实际上，它们往往不吻合。”在多大程度上靠理论来指导，似乎是一个经验判断。恰巧你说的这两位不相信理论模型的研究员是圈子里的大牛和中牛，而且这位中牛在博士生期间最有影响的成果之一就是对系统的建模，因此我猜他不算“不太相信数学的力量”的人。我觉得做system research, 没有理论指导也不是什么shame, 倒是practical irrelevance比较要命。</p>

<h3>part2</h3>

<p>Q: 做好的科研项目需要信心。信心从哪里来？</p>

<p>A: 如果决定选个很好的题目做，信心真的非常重要。不过我觉得真正的信心只有一个来源–自信心。我曾经希望能从导师或其他资深的人那里得到肯定，从而获得信心。现在领悟到这样的信心不会很有意义。你为什么觉得有某个idea非常有希望？大多是因为你有一个直觉，认为其他人没有这样想过。多数情况下你没法用语言表达这个直觉。既然没法表达，别人就很难获得你的直觉。假设我的研究主任现在告诉我这个idea肯定能做出来，那就有两种情况：(i) 如果他能具体列出一二三四条原因证明为什么这个idea一定能做出来，我应该会相当失望，而且不再愿意做这个idea了。你想，我原先很为之激动的idea, 居然三言两语就可以说清楚为什么一定能做出来，那我真正把它做出来又能说明什么？(ii) 如果他不能具体证明这个idea一定能做出来，那么很大程度上他说的仅仅是“我相信你一定做得出来。”实际上这个问题还是推给了我：我自己相信我做得出来吗？</p>

<p>Q: 怎么看待博士学位？</p>

<p>A: 获得博士学位可以算是人生履历的一个挺重要的元素。不说别的，光是花费的时间就够significant，一般是5到6年。我回忆自己获得博士学位的那些年，觉得有很多美好的感觉，自己在科研上确实上了一个层次。这个经历应该会影响我的一生。</p>

<p>不过，获得过博士学位其实和当年当过兵、插过队类似，别把学位本身太当回事。以下分情况讨论几种case:</p>

<p>(1) 博士把博士学位太当回事。我曾经在与几位在大学任教（当然都是博士）的朋友聊天。我们都是研究security的。我们谈到了软件中为什么总是有security bug。不止一位朋友说，“绝大多数programmer水平不高。他们几乎都是学士和硕士。”我不同意这种说法。programming skill与是否有博士学位没有什么关系。（如果非要说关系，我甚至更相信有“反比”关系 — 我相信有一部分博士连Tower of Hanoi和matrix multiplication之类中学生都会的程序也写不出来。）博士如果对“非博士制造”的东西不屑一顾，是不明智的，因为现实世界绝大多数东西是“非博士制造”。头脑被困在象牙塔里的博士很难找到有现实意义的课题，因为他们会觉得这些问题不高深，无非是些“非博士”们没能力在“博士”们的高度看清问题的本质。我觉得想做好的研究，肯定要走出象牙塔，看看复杂、无序和带有各种限制条件的“非博士制造”的现实世界，这才是看清问题的本质。别把博士帽当成孙悟空的头箍来戴。</p>

<p>(2) 准博士把博士学位太当回事。我在做低年级博士生的时候觉得博士学位很值钱。后来，当我在邮箱中拿到博士证书的时候，我感觉到那就是一件除了我家人以外没有人有兴趣看的纪念品。让我真正为之奋斗多年的不是学位，而是对于从事科研工作的能力和勇气的积累。</p>

<p>(3) 非博士把博士学位太当回事。说白了，博士学位仅仅证明了一个人在一个或几个教授指导下做了几年研究，而且合格了。不要对博士学位有更多的解读，比如“很博学”，“很聪明”，“理论造诣很高”，甚至“他/她是计算机博士，你的电脑坏了他/她一定知道怎么修”，等等。</p>

<p>Q: 你导师给你的最有意义的指导是什么？</p>

<p>A: 我的导师在fault tolerance圈子很有名。他是ACM和IEEE的会士。这样的大教授通常很难指望他在具体项目上有什么真正insightful的指导，但是回想那些年，我觉得有两点深刻影响了我的研究。我很感激和佩服他。</p>

<p>第一，很多博士生想夏天去公司实习，他们的导师们不太乐意。理由是“影响科研进度”，“学不到东西”之类。如果导师开恩，一个学生在整个博士生期间也许可以做一两次实习。我的导师恰恰相反。他相信实习非常有益。每年春天，他都给学生们推荐实习机会。最极端的是，每年都有一次全组的会，会上每个人报告夏天将要去哪里实习。说“我不想去实习”的学生要说明为什么，然后他再严肃地教育一番。结果我博士生期间每个夏天都做实习。接触不同的人、做不同的项目，收获很多。尤其是体会到做系统研究应该着手实际问题。这方面公司的研究院有比较明显的优势。</p>

<p>第二，他特别强调要多“看”。他给一个学生an exciting project，往往不是因为他有了什么巧妙的想法，而是因为他找到了（或弄到了）一堆关于实际系统的数据，他很想分析。他曾经让我看securityfocus.com上的bug reports（当时有6500多个），做综合的分析。他觉得这个课题很有意义，我当时觉得太没劲了。我曾问他“我们有什么具体思路呢？有了好的思路后看这些reports才有目的性。”他说“我们还没有什么好的思路，所以我们才要努力地看。我的经验是看得多了就会有思路。”我当时挺不以为然：这叫什么指导？不过我还是坚持下来。渐渐地，我看得越来越快，而且有时一个新的report可以联想到几个旧的，它们不再是完全杂乱无章的。回想这个阶段，我觉得它给我后来的课题打下了基础。我现在相信了“看得多了就会有思路”的说法。
做系统研究，看、想、做和辩都是需要的。为什么我导师特别强调“看”呢？也许是因为不少学生经常忽视它，而陷入到胡想、傻做和穷辩的境地。当你头脑里没有一定数量的活生生的例子，你有什么可想的呢？就算有了一个想法，但你的知识捉襟见肘，你怎么知道它好不好？这种时候，千万别开始做，应该接着看。还有一点，“看”对“辩”很有好处。我在开题答辩时有个教授说，“你提出的方法不太行啊。如果情况是这样这样加上那样那样，你的方法是无效的。”他说的是对的。幸好我对所涉及到的例子比较熟。我很肯定地告诉他，“您说的是对的。不过我看过了大约20个此类例子，没有一个有您说的‘这样这样加上那样那样’的情况。”我觉得他对我的回答是认可的。很多时候，答辩并不是看你想得是否complete，而是你能不能论证它的significance，毕竟我们不是做理论研究的。教授们不太熟悉你的研究领域，因此更可能天马行空地发问。你若没有倚仗自己看的实际东西比他们多，而被他们揪住一起论道，那就有些囧了。</p>

<h3>part3</h3>

<p>Q: 为什么你建议选题要从实际出发？难道选题不该从内心的兴趣出发吗？</p>

<p>A: 选题当然该从内心的兴趣出发。这点毫无疑问。既然要把兴趣这个词掺合进来，那我的本意就是“建议你培养自己对实际问题的兴趣，这才能找到好的题目。”不过我觉得科研其实是非常personal的一件事。每个人都有各自的原因而兴趣一种特定类型的课题：有人很兴趣高深莫测的东西，也许因为世界上只有很少人懂，而他是其中一个。也有人很兴趣探索艰深甚至无解的难题，而享受每一个progress带来的乐趣。我个人的兴趣是找于现实有密切关系的题。是否高深是否难解都不是影响我兴趣的因素。</p>

<p>当然，还有很大一部分人是为了“灌水”而弄出些高深难解的题目来做，而完全不考虑做出来的东西有没有用。我印象很深的是周星驰的《国产凌凌漆》中的一些“发明”，比如一位安全部研究所的研究员发明的太阳能手电筒(<a href="http://www.youtube.com/watch?v=vM3khoMrp-g%EF%BC%8C1%E2%80%9930%E2%80%9D">http://www.youtube.com/watch?v=vM3khoMrp-g%EF%BC%8C1%E2%80%9930%E2%80%9D</a>), 以及周星驰一系列“情报员装备”— 手机型的剃须刀，剃须刀型的吹风机，等等 (<a href="http://www.youtube.com/watch?v=oPmTuOU0QoY&amp;feature=related">http://www.youtube.com/watch?v=oPmTuOU0QoY&amp;feature=related</a>)。这些发明不可谓不novel，技术不可谓不先进，但关键是这些东西有什么用呢？唯一的justification就是周星驰说的“作为情报员，外表很重要。”显然太扯了。我有时在读论文(包括在审论文)时有非常类似的感觉。读完introduction的时候，心里说“Wow! Are you serious? You spent so much effort to build this useless stuff?”</p>

<p>Q: 导师说我写的东西不合格，可是英文又不是我的母语，我觉得有些无奈。怎么办？</p>

<p>A: 在我写博士期间第一篇第一作者论文时，我挺认真地写了第一稿。我的导师说我写得很差。我觉得有些委屈。我说我刚来美国不久，英文写作当然不好。导师说的一句话我后来想起来觉得很精辟。他说，“我说你写作不好，不是你英文写作不好。写论文要的是persuasive writing，主要是看你的论据的架构和逻辑性，每句话里使用的词汇和表达方式是否地道倒是次要的。我虽然不懂中文，但你的这篇英文稿，我相信你用中文也写不好。” 后来高年级和工作之后，对导师的观点更有体会。有时也有学生谈到英文写作有困难。我往往会搬出我导师的观点，甚至challenge说，如果你不相信，你就干脆用中文写，看看是不是好文章。如果是，你就完成任务了，翻译任务由我负责。我想如果作为一个导师，只要做翻译工作就可以发很好的论文，应该会偷着乐吧。</p>

<h3>part4</h3>

<p>Q: 开题是个怎样的过程？</p>

<p>A: 开题对做研究的人来说绝对重要。有些学生对于它究竟是个怎样的过程不见得清楚。我想开题就是为自己的项目定一个蓝图。一个好的项目应该是深度、广度和可行性的结合，而这个蓝图就是在开始具体工作前仔细地思考清楚我要论证什么、论证它有什么意义、什么论据才能论证它（也顺便思考一下为什么我比别人有什么优势更可能做到）。这些问题需要具体的答案，而不能马马虎虎想当然。</p>

<p>有的学生把开题和定方向混淆起来。导师更多时候只是给你一个方向。他（她）今天建议你去研究social network privacy，明天建议张三去研究cloud computing security,后天再让李四去研究new threat on mobile OS。不要以为这就算开题了 - 开题是个费脑筋的探索过程。</p>

<p>Q: 我的不少想法导师说太宽。难道课题的breadth不好吗？</p>

<p>A: 一个开好的题应该能够从“上层”贯穿到“下层”。“上层”就是这个项目的帽子，即主题；“下层”是这个项目的架子，是比较具体的元素。</p>

<p>也许可以设想一个情景,做个换位思考，来理解导师的意见。假设你的团队思考各种方法赚钱。一个年轻人说：“我想去非洲挖黄金，因为如果挖到了，我们就发了！”你会立刻批准吗？应该不会吧。那“去非洲挖黄金”这个课题还需要什么具体的元素呢？我想我至少会问他如下问题：(1)非洲那么大，从哪里挖起？(2)你是用锄头还是挖掘机去挖？(3)计划挖到地面下几尺？挖一立方尺要多少时间？ (4)课题分几个阶段？每个阶段判断成功的标准是什么？他如果对这些问题的回答非常含糊，那就可能只想了“帽子”没想“架子”。</p>

<p>在这个例子中，导师的concern并不是针对“去非洲挖黄金”这个帽子本身，而是因为它没有具体的元素支撑。我们可以设想另一种情形 &ndash; 这个年轻人回答：“我有可能挖到，因为我相信开罗有一所中学建在某法老的地宫之上[见史料xyz]。我估算它在地下30尺左右。我想从开罗一中操场开始挖。打算雇三个当地人打一口井。如果打到45尺还没有成功，我就转到开罗二中，然后开罗三中，以此类推。”我觉得这样的开题可以算是thoughtful。同样是“去非洲挖黄金”这顶帽子，却让人明白他具体想怎样实施他的计划。虽然他的计划听起来可能有点天方夜谭，但它包含了一套自上而下的思路。</p>

<p>原文地址：<a href="http://blog.sina.com.cn/s/articlelist_2903718283_1_1.html">科研心得1-4</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[科学没有捷径 --王铁磊博士访谈]]></title>
    <link href="http://secdr.github.io/2015/05/04/research-is-not-easy/"/>
    <updated>2015-05-04T00:45:06-07:00</updated>
    <id>http://secdr.github.io/2015/05/04/research-is-not-easy</id>
    <content type="html"><![CDATA[<p>点评：北京大学王铁磊博士走过的是一条开始研究的理想道路，他认为好的开始是成功的一半，阅读大量论文和实现别人论文工作的原型，慢慢积累了研究的感觉，突破了早期的困惑。王铁磊博士虽然是跨专业读博士，通过阅读、实验和不懈挖掘，最终却实现了高水平会议论文的突破。从他的研究方向出发，他推荐学好算法、体系结构和信息安全课程。</p>

<p>问：您认为自己能获得CCF优博的主要原因是什么？
王铁磊：在如此激烈的竞争中出围，首先非常感谢评审专家们对我的研究工作的肯定和认可。我的研究领域是系统安全，主要关注软件安全漏洞挖掘。在系统安全领域，IEEE Security &amp; Privacy、ACM CCS、USENIX Security和ISOC NDSS这四个会议享有崇高的声誉，是公认的顶级学术会议。尤其是IEEE Security &amp; Privacy，是整个信息安全界历史最悠久的学术会议之一，自1980年举办以来一直引领国际安全研究的潮流；信息安全领域很多里程碑式的工作最初都在该会议上发表。这四个顶级学术会议长期被欧美等国研究人员垄断，大陆研究人员鲜有声音。2009年，我在NDSS会议上发表了关于整数溢出漏洞检测的论文，是自NDSS创立16年来中国大陆研究机构首次以第一作者单位在NDSS会议上发表的论文。2010年，我的关于校验和感知的模糊测试技术的科研论文，历经5轮严格评审，成功在IEEESecurity &amp; Privacy会议上发表，并赢得最佳学生论文奖。这是IEEE Security &amp; Privacy 自1980年举办以来，大陆科研机构首次在该会议上发表论文。2012年，我科研论文在信息安全顶级期刊ACM Transactions on Information and System Security (TISSEC)发表,也是中国大陆科研机构在TISSEC发表的首篇论文。总结而言，这些研究工作实现了中国大陆在TISSEC、IEEE S&amp;P、NDSS等信息安全领域顶级学术期刊/会议上以第一作者发表论文的突破。这也是我能赢得CCF优博论文的重要原因。</p>

<!--more-->


<h3>关于博士研究</h3>

<p>问：请以科普的语言描述一下您的博士论文想解决的问题？
王铁磊：软件安全漏洞已成为网络空间安全博弈的重要资源。如何准确的发现漏洞、有效的 消除或减少漏洞对社会生活、国家信息安全的负面影响，是信息安全领域的研究热点。我的博士论文以面向二进制程序漏洞挖掘为总体目标，重点研究在没有源代码的情况下，如何自动发现软件产品中漏洞。论文中设计实现的软件安全漏洞挖掘系统已经在Microsoft、Adobe、Google等著名IT公司的产品中发现数十个零日（0-day，未公开的）漏洞，大部分漏洞已被国家安全漏洞库、国际安全漏洞机构CVE等权威漏洞管理组织收录。</p>

<p>问：您认为自己博士期间最满意的研究工作是什么？创新何在？
王铁磊：我博士期间的主要研究方向是软件安全漏洞挖掘。我最喜欢的工作是，我在国际上首次提出了一种在模糊测试（Fuzzing）中穿透校验和（Checksum）检查的方法。校验和机制是常用的数据完整性检测方法，有效阻止畸形数据向程序纵深传递，是动态漏洞挖掘中的一个公认难题。我提出的校验和感知模糊测试方法成功绕过程序中的校验和检查机制，不依赖于程序源代码及具体的校验和算法，自动化程度高，为运用模糊测试发现深藏的软件漏洞扫除了障碍，大大拓宽了传统模糊测试方法的应用范围。 相关研究论文发表于信息安全领域国际顶级学术会议IEEE Symposium on Security and Privacy 2010，并荣获最佳学生论文奖。</p>

<p>问：博士期间自己遇到的最大困难是什么？如何克服了这些困难？
王铁磊：一个好的开始是成功的一半，因此取得&#8221;好的开始&#8221;是非常困难的。对我而言，第一个研究项目、第一篇论文都是最难的。我读博早期很长一段时间内，一直困惑于自己能做什么。一方面，感觉其他团队的技术实现都非常出色，自己找不到创新点；另一方面，感觉自己要解决的问题太复杂、太困难，找不到一个完美的解决方法。为了克服这些困难，我阅读了大量论文，从中理出每个团队技术发展的轨迹，同时也总结每个团队所研究的问题的变迁。为了更好的理解其他团队的技术，我还根据其论文的描述，尝试实现这些原型系统。在自己实现的过程中，能够很好的理解别人方法的优势，同时也能够发现别人方法的不足。找到别人方法的不足进而尝试改进、完善，是我在博士前期研究思路之一。在这个思路指导下，我慢慢积累了一些学术研究的感觉，掌握了现有技术的发展水平，同时也找到了一些研究点，我的研究状态走上了正轨。</p>

<h3>关于论文发表</h3>

<p>问：在博士课题研究中，您觉得最重要或印象最深刻的是什么？
王铁磊：学术竞争非常激烈。全世界那么多优秀的研究人员都在同一个研究方向努力时，可能经常出现这个现象：不同研究团队对同一个问题提出了非常类似的解决方法。但是学术研究有着很强的时效性，这意味着一个团队的论文发表后，留给其他团队的空间就非常小了。2009-2010年间，我的一项研究取得了非常好的结果。但是，在撰写论文的过程中，我突然发现MIT的一个研究人员也在做类似的事情，而且他的论文刚刚被一个顶级会议录用。这使我非常沮丧。我的导师邹维老师给了我很多鼓励和支持。首先，他肯定了我的工作。他认为类似的工作发表在顶级会议上，说明我的研究也是具有这个实力的。这给了我很大的信心。其次，他鼓励我进一步挖掘这个方向的潜力，不要因为别人工作发表了，就放弃了自己的工作。在邹老师的鼓励下，我继续围绕当时那项工作解决不了的问题展开研究并获得了突破。最终论文发表在了信息安全领域的顶级会议IEEE Security &amp; Privacy 2010上。</p>

<p>问：您在博士期间发表了多篇高水平论文，有什么经验体会？
王铁磊：经验谈不上，我也还在不断学习和改进的过程中。从研究角度讲，我个人觉得，“好论文”的准则之一是用创新的方法解决了一个重要的问题。广泛调研、深入学习是发现问题、找到创新方法的关键。从写作角度讲，多读能够发现别人论文之美， 多写能提高自己写作不足。此外，每篇论文都真正的用心写作，注意每个细节。很多时候，审稿人可以感觉出作者的认真态度。</p>

<h3>关于课程</h3>

<p>问：课程学习在您的研究过程中起到了多大的作用？就您的研究所了解，你觉得哪些课程最重要？如果感觉作用很大，请具体讲讲。如果感觉作用不是很大，课程教学中还有些什么问题，能否给出一些建议？
王铁磊：我本科专业是物理学，虽然选修或旁听了一些计算机系的课程，自己总是觉得知识不够。因此，从博士阶段的课程中，我受益良多。就我个人而言，算法、体系结构和信息安全三门课程最重要。体系结构让我对整个计算机体系有了很好的理解和认识；信息安全课程让我学会的大量的专业基础知识；算法课程提高了我编程能力。这些经典课程并不会直接影响我的研究内容，但是带给我的影响是巨大的。</p>

<h3>寄语</h3>

<p>问：今后有什么打算？对在读的学生有何寄语？
王铁磊：争取在学术研究的道路上取得更大的进步，推动自己研究成果的实际应用。读博是个漫长过程，有生活压力，有研究压力。希望各位博士同学，多一分耐心，多一分坚持，多一分快乐。</p>

<p>原文地址：<a href="http://www.douban.com/note/243601486/">科学没有捷径 &ndash;王铁磊博士访谈</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[国际学术期刊的四大巨头]]></title>
    <link href="http://secdr.github.io/2015/05/04/press-summary/"/>
    <updated>2015-05-04T00:35:00-07:00</updated>
    <id>http://secdr.github.io/2015/05/04/press-summary</id>
    <content type="html"><![CDATA[<p>号外，号外，德国Springer和《自然》集团合并啦！俺兴（Bu）奋（Xie）地围观一下，其实心里想的是管我屁事，又不会——“特大喜讯，为了庆祝两集团合并，杂志大开放，来稿就刊出”，其次Springer是啥，头一次注意，都不好意思说自己不知道，只能跟着瞎起哄！希望各位小伙伴看完这篇文章后，对四大杂志社巨头有所了解，提升一点逼格！
——李莫愁博士</p>

<p>四大杂志社巨头分别是东毒、西邪、南丐、北帝，哈哈，我开玩笑的啦！咳咳，我正经一点，分别是——Springer，ELSEVIER, WILEY和Taylor&amp;Francis Group。很陌生吧？那么看了下面的LOGO，那马头，那棵树熟悉不？后面两个（一个咒语和一掌阿拉神灯）就看着眼生了。</p>

<!--more-->


<p><img src="http://secdr.github.io/upload/fourpress.png" alt="four press" /></p>

<p>这几家杂志社，有三个共性——大龄、任性、有钱！</p>

<h3>关于大龄：</h3>

<p>先讲新婚不久的Springer，1841年生，170多岁了，你很莫然地看着我，好吧，我们换个说法，慈禧那会的事情，Springer诞生的时候，慈禧还没有死老公，不对，确切说还在穿开裆裤。也就是说Springer和慈禧是看着同样的动画片《喜羊羊》长大的！</p>

<p><img src="http://secdr.github.io/upload/pressdev.png" alt="pressdev" /></p>

<p>WILEY笑了，1807年生，当时嘉庆皇帝正在兴致勃勃地抄和珅家，他万万没有想到国外的一个叫WILEY的杂志社诞生了，不然他肯定从和珅家拿点当贺礼送过去。嘉庆是谁？（历史学的不好吧？）嘉庆大老婆生了道光，道光是咸丰他爹，而慈禧是咸丰的老婆，所以算下来,WILEY:“Springer小朋友，快来认老祖宗！”</p>

<p>Taylor&amp;Francis Group 哈哈大笑，跟我比老，老子1798年生，Taylor创办后一年，乾隆就死了，乾隆一死，嘉庆一边披麻戴孝一边偷着乐，一直垂涎和珅家的金银财宝，这回发大财。Taylor：“WILEY，快叫爹！”</p>

<p>ELSEVIER：“你们玩，我先走了！”（1880年生）</p>

<h3>关于任性：</h3>

<p>ELSEVIER：“我旗下有3075本杂志”</p>

<p>Springer:”我也不赖，旗下有2987本杂志”</p>

<p>Wiley:”我马马虎虎，旗下2339本杂志”</p>

<p>Taylor:”你们玩，我先走了！”（2105本杂志）</p>

<p>Springer早就看ELESVIER不顺眼，可惜又没有人家会下蛋，娶一个会下蛋的社交名媛——《自然》（旗下160本杂志），于是就出现了开篇说的“大事”，Springer以微弱的优势完胜ELESVIER。ELESVIER：“你，你，我，我…..我也去娶一个，我娶…..我娶中华医学会！”（我瞎掰的啦，咋么可能？！）</p>

<h3>关于有钱：</h3>

<p>其实最刚开始，这几个货都是穷屌丝……这是几个屌丝逆袭迎娶白富美的故事。</p>

<p>先讲Wiley逆袭的故事：Charles Wiley老人家最开始开办了一家小小的印刷厂，需要申明的是，这不是国企，所以，Charles Wiley干得格外卖命（不然就会破产倒闭喝西北风），他将出版社取名为Wiley，足以证明他有多自恋，后来他做着做着就，你想说发财是吧，其实我想说的是做着做着就死了……他的儿子John Wiley接着做，做着做着也死了，他的儿子XX Wiley又接着做，又死了……更多的XXX Wiley前赴后继地投入到Wiley杂志社，最后都死了。Wiley杂志社是家族企业，至于这些Wiley在漫长岁月中经历的一长串的商业并购案，大家有兴趣可以自己查阅，但是1962年他向员工发行了股票，结束了私有制，迈向了现代化的企业模式。</p>

<p>至于这个跟女巫符咒一样的logo，是Charles Wiley的儿子JohnWiley干的，原本他老子设计的logo是“WC”，但是JohnWiley等他老爹一死，一是他也很自恋，二是觉得WC搞得跟厕所似的，就给改成了“WJ”，自己的名字缩写。（呵呵，这段是我编的，我猜是这么回事）</p>

<p>我们再来讲讲ELSEVIER，这个名字大家有点陌生，但是提到《柳叶刀》、《cell》,明白了吧，这两本牛掰的杂志都是他家的，所以ELSEVIER是相当牛掰的。每年共有250,000篇论文发表在ELSEVIER公司出版的期刊中（25万篇哦，庞大的数字，可惜你一篇都没有投中）。</p>

<p>论文界有一件很奇葩的事情，就是我花钱做实验，我发表文章还要交钱，最后我下载文献时还得花钱购买数据库，为什么受伤的总是我？由此可见科学家都是受虐狂。</p>

<p>其实这事对于中国人，那都不叫事，只要能发，其他好商量！但是牛哄哄的外国人就不这样想这件事情，他们认为2000-2010年间，爱思唯尔的利润率从来没有低于过30%（搞得更中国国企似的），举个例子“北京大学图书馆2010年购买爱思唯尔科技期刊电子数据库的费用为61万美元。”那么单从北京大学图书馆，爱思唯尔就纯获利100多万人民币，如果全球有1000家图书馆订阅，那么利润是10亿元人民币，当然我想数字远不止10亿。你知道这货有多土豪了吧！</p>

<p>于是大家就想着打土豪分田地，2012年有个大名鼎鼎的数学家威廉·提摩西·高尔斯（其实我不认识），号召同行行动起来，抵制世界上最大的出版商爱思唯尔集团，他们建立了一个网站，命名为“知识的代价”（The Cost of Knowledge），有大约1.4万多名科学家在网站上签了名，他们发誓，不在爱思唯尔旗下的期刊发表论文，不做审稿人，或者不担任编辑。他们认为“我们投稿、审稿都是义务的。研究成果都是国家纳税人的钱，为什么到后来我们的研究成果成为他们的摇钱树了呢？”</p>

<p>注意“摇钱树”三个字，不得不佩服Elzevir家族的先见之明，看看Elzevir的LOGO，一个老人站在树下，仿佛要伸手去摇这棵树——摇钱树（嘿嘿，这段也是我瞎掰的，实际上还没有人知道这个logo的真正含义，也许创始人想说的是：别猜了，我也就是随手找的一个logo）</p>

<p>再讲讲Springer，他是世界上最大的私营科技出版社，注意了这两个字——私营，故事要从150年说起，出版社的创始人叫尤利乌斯·施普林格（Julius Springer），25岁时在柏林开设了一家书店，并同时开始其科学图书的出版工作。（注意Spinger又是个人名，如果这事放在中国，就好比武大郎给自己的烧饼取名武大郎烧饼，陈小二开家超市就叫陈小二小卖部。）</p>

<p>尤利乌斯·施普林格是一位国际象棋的爱好者，他出版了一系列这个方面的图书，又因为“施普林格”（Springer）这个词在德文中意即“象棋中的马”。这个商标意义重大，因为还有一家公司叫阿克塞尔·斯普林格（Axel Springer）出版集团，当然创始人就叫阿克塞尔·斯普林格（Axel Springer也是相当土豪，只可惜挂得比较早，便宜了他的第五个老婆，轻轻松松成为了亿万富婆，啊哦，讲偏题了）。因为他俩名字长得太像了，所以只能靠商标来区分。</p>

<p>尤利乌斯·施普林格于1877年去世，后面的故事大抵是一样的，家族传承，将这份事业发扬光大，至今未倒闭。施普林格也出版了一些中国著名学者的著作，例如华罗庚的《数论导引》和《从单位圆谈起》、许宝禄的《论文选集》、吴文俊等人的《走向21世纪的中国数学》以及陈省身教授主编的《天津偏微分方程讨论会文集》等等（呵呵，一本都没有读过）。说一本部分医生熟悉的书——陈中伟院士出版的《显微外科》英文版本，就是Springer出版发行的（呵呵，还是没有读过英文版本的）。</p>

<p>终于讲到最后一家了，Taylor &amp; Francis Group（泰勒-弗朗西斯出版集团），从名字上我们可以知道，是两个人合创了这家公司，Richard Taylor和William Francis，故取名泰勒-弗朗西斯。我的脑洞现在有点大，倘诺中国的公司名字也采用这种取名方式的话，是不是可以防止一些跑路的人员，比如满大街的投资公司，一看招牌——黄麻子理财公司，就知道老板叫黄麻子，跑不了了，是不是可以减少经济犯罪？（上面又是我胡想的）。这两位创始人之后的故事大抵是一样的，子乘父业，经历了数次并购，终于发展成为了今天的规模。这家公司有多土豪呢？2007年，T&amp;F的母公司Informa集团的总收入是11.3亿英镑，调整后的利润是2.61亿英镑，折合人民币约23亿，不过比起中国的房地产商，这点钱算是毛毛雨吧！</p>

<p>终于把这四大杂志社都蜻蜓点水般地带过了，也许大家吹牛皮侃大山时能用上吧！如有错误，请大家多多指正！</p>

<p>原文出自<a href="http://mp.weixin.qq.com/s?__biz=MzA3ODU1NjUyNw==&amp;mid=203877137&amp;idx=1&amp;sn=298714542e7011ffe9fcc551f51d3169&amp;scene=1">国际学术期刊的四大巨头</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Security Conference Summary]]></title>
    <link href="http://secdr.github.io/2015/05/04/security-conference-summary/"/>
    <updated>2015-05-04T00:33:35-07:00</updated>
    <id>http://secdr.github.io/2015/05/04/security-conference-summary</id>
    <content type="html"><![CDATA[<h3>Top security conference</h3>

<ol>
<li><a href="http://www.ieee-security.org/TC/SP-Index.html">IEEE Symposium on Security and Privacy</a> (S&amp;P (Oakland));</li>
<li><a href="http://www.acm.org/sigs/sigsac/ccs/">ACM Conference on Computer and Communications Security</a>(CCS);</li>
<li><a href="http://www.iacr.org/conferences/">International Cryptology Conference</a> (Crypt);</li>
<li><a href="http://www.iacr.org/conferences/">European Cryptology Conference</a> (Eurocrypt);</li>
<li><a href="https://www.usenix.org/conferences/byname/108">Usenix Security Symposium</a> (Security);</li>
<li><a href="http://www.isoc.org/isoc/conferences/ndss/">SOC Network and Distributed System Security Symposium</a> (NDSS);</li>
<li><a href="http://www.raid-symposium.org/">International Symposium on  Research in Attacks, Intrusions and Defenses</a> (RAID);</li>
</ol>


<!--more-->


<h3>the other conferences you can ref the follow two links:</h3>

<ol>
<li><a href="http://faculty.cs.tamu.edu/guofei/sec_conf_stat.htm">Computer Security Conference Ranking and Statistic</a>;</li>
<li><a href="http://icsd.i2r.a-star.edu.sg/staff/jianying/conference-ranking.html">Top Crypto and Security Conferences Ranking</a>.</li>
</ol>


<h3>the recent security events and conference:</h3>

<ol>
<li><a href="http://www.ieee-security.org/Calendar/cipher-hypercalendar.html">IEEE Cipher&rsquo;s Calendar of Security and Privacy Related Events</a>;</li>
<li><a href="http://www.uclouvain.be/crypto/callforpapers/forthcoming">UCL Crypto Group  | Call for papers</a>;</li>
<li><a href="http://www.concise-courses.com/security/conferences-of-2015">Information Security Conferences of 2015</a>;</li>
<li><a href="https://secore.info/conferences">SEcore Conferences list</a>;</li>
<li><a href="https://www.duosecurity.com/resources/calendar">Duo Security’s information security calendar</a>;</li>
</ol>


<h3>Journals on computer security</h3>

<ol>
<li><a href="https://www.cl.cam.ac.uk/research/security/journals.html">University of Cambridge Security Group list</a>;</li>
<li><a href="cs..edu/~stamp/securityJournals.html">San Jose State University list</a>;</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安全论文搜索引擎汇总]]></title>
    <link href="http://secdr.github.io/2015/05/04/security-paper-search-engine/"/>
    <updated>2015-05-04T00:28:30-07:00</updated>
    <id>http://secdr.github.io/2015/05/04/security-paper-search-engine</id>
    <content type="html"><![CDATA[<p>如果你经常需要查找一些基于关键字的安全论文，可以通过如下的论文检索工具进行搜索：</p>

<ol>
<li><a href="http://www.informatik.uni-trier.de/~ley/db/">The DBLP Computer Science Bibliography</a>;</li>
<li><a href="http://scholar.google.com/">Google Scholar</a>;</li>
<li><a href="http://ieeexplore.ieee.org/Xplore/home.jsp">IEEE Xexplore</a>;</li>
<li><a href="http://cdblp.cn/domain_detail_ccf.php?domain_ccf_id=8">ScholarSpace</a>;</li>
<li><a href="http://arxiv.org/multi?group=grp_cs&amp;%2Ffind=Search">arxiv</a>;</li>
<li><a href="http://65.54.113.26/Search?query=Security&amp;SearchDomain=2">Microsoft Academic</a></li>
</ol>


<p>尤其需要注意Google Scholar和arxiv, 前者主要过来检索论文，后者主要用来跟踪最新动态，当然你可以通过RSS DBLP的个人首页。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于SecDr]]></title>
    <link href="http://secdr.github.io/2015/05/03/about-us/"/>
    <updated>2015-05-03T23:23:28-07:00</updated>
    <id>http://secdr.github.io/2015/05/03/about-us</id>
    <content type="html"><![CDATA[<p>SecDr 由一群关注信息安全的科研人员组成，主要交流科研写作与生活，侧重于以下几方面内容：</p>

<ul>
<li>论文写作技巧；</li>
<li>期刊「SCI，EI」与会议「顶会，普会」的投稿；</li>
<li>优质论文阅读与分享；</li>
<li>最新安全动向交流；</li>
</ul>


<h3>如何加入</h3>

<pre><code>请发送个人简历/网站地址到邮件：secdr@qq.com
</code></pre>

<h3>交流群</h3>

<pre><code>QQ群：337323707
</code></pre>
]]></content>
  </entry>
  
</feed>
